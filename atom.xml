<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WUWEI&#39;S BLOG</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://vmartaw.com/"/>
  <updated>2016-10-23T06:48:37.000Z</updated>
  <id>http://vmartaw.com/</id>
  
  <author>
    <name>WUWEI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动互联网</title>
    <link href="http://vmartaw.com/2016/10/23/%E7%A7%BB%E5%8A%A8%E4%BA%92%E8%81%94%E7%BD%91/"/>
    <id>http://vmartaw.com/2016/10/23/移动互联网/</id>
    <published>2016-10-23T06:36:51.000Z</published>
    <updated>2016-10-23T06:48:37.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近看了一些关于移动互联的相关书籍和视频，有点意思，想把自己的见解分享给大家&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-什么是移动互联网&quot;&gt;&lt;a href=&quot;#1-什么是移动互联网&quot; class=&quot;headerlink&quot; title=&quot;1.什么是移动互联网&quot;&gt;&lt;/a&gt;1.什么是移动互联网&lt;/h3&gt;&lt;p&gt;以前父母担心电脑会影响我的学习，天天只知道玩游戏，因此我真正接触电脑是2012年高考毕业的时候。2012年，我对电脑充满着无尽的好奇，“上网”、“编程”、“Java”、“前端”，这些词语从不懂，到理解，从理解到实践，一步步走来，等回过来看这些的时候，发现自己当时正处在最盛行的“互联网”时代。众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。&lt;/p&gt;
&lt;p&gt;互联网时代的标志性产物就是电脑，PC应用层出不穷。&lt;br&gt;2011年底，我最喜欢一句话“Stay hungry，Stay foolish”的苹果创始人史蒂夫·乔布斯（Steve Jobs）去世，他的去世不是结束，而是开始，标志着移动互联网的新起。&lt;/p&gt;
&lt;p&gt;互联网指用电脑上网，那移动互联网就是指用手机上网咯，非也。我认为我们现在只是处在移动互联网发展前期，因为我所理解的移动互联网应该具有以下几个特点。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-移动互联网的特点&quot;&gt;&lt;a href=&quot;#2-移动互联网的特点&quot; class=&quot;headerlink&quot; title=&quot;2.移动互联网的特点&quot;&gt;&lt;/a&gt;2.移动互联网的特点&lt;/h3&gt;&lt;h4 id=&quot;1-随时随地&quot;&gt;&lt;a href=&quot;#1-随时随地&quot; class=&quot;headerlink&quot; title=&quot;1.随时随地&quot;&gt;&lt;/a&gt;1.随时随地&lt;/h4&gt;&lt;p&gt;以前使用电脑上网，必须先买入宽带，插上网线或连接wifi才能使用，适用的场所不外乎在家或公司。如果你出门在外，你还想带着如此“庞大”的设备吗？想随时随地上网，现在就得靠手机了。&lt;br&gt;我认为&lt;strong&gt;移动互联网最终的产物不是手机&lt;/strong&gt;。拿王自如说的一句话讲：真正的科技是让你感受不到科技的存在。当我们低头使用手机久了，眼睛会酸，脖子会痛，其实我们是能感受到手机的存在的。我认为移动互联网最终的产物有点像现在的可穿戴设备，更轻、更快、更强。&lt;/p&gt;
&lt;h4 id=&quot;2-碎片化&quot;&gt;&lt;a href=&quot;#2-碎片化&quot; class=&quot;headerlink&quot; title=&quot;2.碎片化&quot;&gt;&lt;/a&gt;2.碎片化&lt;/h4&gt;&lt;p&gt;手机能让我们随时随地接受大量的信息，在地铁、电梯、厕所、餐馆，只要有一点闲余的时间，我们都能通过手机获取自己所需的信息。一寸光阴一寸金，寸金难买寸光阴，让我们学会去珍惜时间。时间的碎片化利用，是移动互联网的标志，这个特点在以前简直是种奢望。&lt;/p&gt;
&lt;h4 id=&quot;3-个性化&quot;&gt;&lt;a href=&quot;#3-个性化&quot; class=&quot;headerlink&quot; title=&quot;3.个性化&quot;&gt;&lt;/a&gt;3.个性化&lt;/h4&gt;&lt;p&gt;手机上有各类的App，用户可以根据自己的需求下载自己所需的App。每个用户手机安装的App也不尽相同，所需即所用，很灵活。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-移动互联网软件&quot;&gt;&lt;a href=&quot;#3-移动互联网软件&quot; class=&quot;headerlink&quot; title=&quot;3.移动互联网软件&quot;&gt;&lt;/a&gt;3.移动互联网软件&lt;/h3&gt;&lt;p&gt;移动互联网软件，&lt;strong&gt;更应该着眼于满足人们在碎片时间内找到他要找的信息，处理完他要处理的事&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;移动互联网软件的分类：项目和产品，对应的公司可以分成项目型公司和产品型公司。项目型公司就是去外面接项目，帮政府或集团做相应的页面或系统，针对的是企业（toB）。产品型公司就是满足特定用户的需求，针对的是用户（toC）。&lt;/p&gt;
&lt;p&gt;我目前在职的公司就是属于产品型的，产品型公司推出好的产品，大体上要经过下面几个步骤：&lt;br&gt;首先，要有好的想法。&lt;br&gt;其次，将想法变成需求文档。&lt;br&gt;再次，组建一支软件开发队伍，消耗自己的原始积累，开发，测试，再开发，再测试，基本符合需求了，发版。&lt;br&gt;最后，就是打广告，建渠道，销售，回款，收回投资，形成闭环。&lt;/p&gt;
&lt;p&gt;移动互联网软件就是手机App，App面对的群体有：打工仔，销售，客服，农民，媒体人，企业领导等各类人士。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-羊毛长在猪身上牛买单&quot;&gt;&lt;a href=&quot;#4-羊毛长在猪身上牛买单&quot; class=&quot;headerlink&quot; title=&quot;4.羊毛长在猪身上牛买单&quot;&gt;&lt;/a&gt;4.羊毛长在猪身上牛买单&lt;/h3&gt;&lt;p&gt;我认为这句话特别经典，无意从一本书里看到的。羊毛长在猪身上牛买单究竟是什么意思呢？听我一一道来。&lt;br&gt;上面说到产品型公司，360就是一家专门卖杀毒软件的产品型公司。&lt;br&gt;2006年，360公司在最后打广告的环节上&lt;strong&gt;提倡免费&lt;/strong&gt;，这不是自寻死路吗？&lt;/p&gt;
&lt;p&gt;当时在网络上也是看笑话的人居多，很多人断言，360必将倒闭。360公司在2006年开始投资做杀毒软件。自从PC大量出现后，计算机病毒、木马特别多，杀毒软件就开始与PC形影不离，用户虽然对之痛恨，但又没有办法。就是在这种情况下，杀毒软件厂商应运而生。杀毒软件的大佬在2006年并不是360公司，而是瑞星、卡巴斯基、江民、金山等国内外知名老牌厂商。伴随着互联网时代的兴起，计算机病毒呈现数量暴增，扩散加速的趋势。而且在那时，很多公司为了推广自己的网站，都在不遗余力地做插件——————不经用户的许可，灵活性地向用户电脑里面安装上网浏览器插件，抢劫流量，乱弹广告，这些插件叫做流氓软件，得益于流氓软件的兴起，360迎来了自己的春天。&lt;/p&gt;
&lt;p&gt;360创始人周鸿祎提倡360安全卫生免费给用户使用，毕竟有些用户不愿花钱买杀毒软件，又听说免费，于是下载来用用，结果发现360在处理大部分病毒和木马上确实不错。当该用户的朋友有这方面需求准备花钱杀毒的时候，该用户会强力推荐其朋友试试360，既免费效果又不错，到最后一传十，十传百，使用360的用户越来越多。&lt;/p&gt;
&lt;p&gt;可能有人会问，360毕竟是个公司，它一边要不断的迭代修复病毒库，免费给用户更好的安全杀毒保障，又要付各种开支，那它怎么生存下来的呢？&lt;/p&gt;
&lt;p&gt;答案就是&lt;strong&gt;流量&lt;/strong&gt;。360安全卫士虽然免费给用户使用了，没从用户上赚到钱，但它却得到了用户量。以前游戏软件厂商虽然制作出很精美的游戏，却一直很少有用户在使用，当然就更少的人在游戏里买道具了。360安全卫士，能提供很好的用户量，当然会有很多游戏软件厂商愿意花钱买广告位拉取用户啦。&lt;/p&gt;
&lt;p&gt;最后回想这句话：“羊毛长在猪身上牛买单”，&lt;br&gt;360&lt;br&gt;羊毛：想免费使用杀毒软件的用户&lt;br&gt;猪：360&lt;br&gt;牛：游戏软件厂商&lt;/p&gt;
&lt;p&gt;同理，我可以将大众点评、微信、百度用这句话做很好的诠释。&lt;br&gt;大众点评&lt;br&gt;羊毛：想免费吃饭，吃完需写真实感受（前期）；想免费查找餐馆的用户（后期）&lt;br&gt;猪：大众点评&lt;br&gt;牛：餐馆&lt;/p&gt;
&lt;p&gt;微信&lt;br&gt;羊毛：想免费聊天的用户&lt;br&gt;猪：微信&lt;br&gt;牛：想免费获得微信用户的公司&lt;/p&gt;
&lt;p&gt;百度&lt;br&gt;羊毛：想免费快速获取信息的用户&lt;br&gt;猪：百度&lt;br&gt;牛：需要推广的公司&lt;/p&gt;
&lt;p&gt;一句话总结：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;免费App帮忙解决特定需求的人群，拥有流量者得天下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-微信小程序&quot;&gt;&lt;a href=&quot;#5-微信小程序&quot; class=&quot;headerlink&quot; title=&quot;5.微信小程序&quot;&gt;&lt;/a&gt;5.微信小程序&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/23/weixin.jpg&quot; alt=&quot;小程序&quot; title=&quot;小程序&quot;&gt;&lt;/p&gt;
&lt;p&gt;微信小程序能让我们在微信里买东西、看股票、叫外卖、听音乐、看视频、导地图、甚至玩游戏。&lt;/p&gt;
&lt;p&gt;根据企鹅官方的解释，微信小程序是一种不需要安装下载就可以使用的应用。需要使用的时候，我们直接在微信里扫一下或者搜索一下就可以打开应用，不用再考虑安装以及卸载的问题。&lt;/p&gt;
&lt;p&gt;对于我们普通用户来说，就相当于以后微信里会有一个个功能超级强大的公众号，肚子饿了想吃宵夜没问题，直接搜某某外卖立马就能下单；女朋友过生日忘记订餐厅，赶快搜一下某某点评，不用急急忙忙下载App，也不用等到手机内存不够再卸载应用。这就是所谓的“用完就走”。&lt;/p&gt;
&lt;p&gt;那我对于我们这些记忆力不好的80、90后空巢老人来说，这小程序当然是一大福利啊，再也不用每安装一个应用，就要注册一个新的账号，记一个新密码，有了小程序之后直接用微信联合登陆就好啦。最关键的是App的门槛变低了，不需要下载，直接在微信里搜搜名字，扫扫二维码就能用，这每个月能给我省多少流量费啊。&lt;/p&gt;
&lt;p&gt;当然也不能否认，正式版本的小程序中会存有一定的缺陷，无论是量还是质，基于HTML5网页的小程序与真正的手机App相比之下，功能上可能有所削弱，想用它完全代替所有的手机App目前还是难以实现的。况且虽说下载是不需要流量了，但是使用过程中，我们的流量包真的能hold住小程序里那些需要缓存的代码和动画吗？这个就只有等公测的时候，才能真正知道了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近看了一些关于移动互联的相关书籍和视频，有点意思，想把自己的见解分享给大家&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-什么是移动互联网&quot;&gt;&lt;a href=&quot;#1-什么是移动互联网&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
      <category term="Life" scheme="http://vmartaw.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>实战Vue（二）</title>
    <link href="http://vmartaw.com/2016/10/07/%E5%AE%9E%E6%88%98Vue%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://vmartaw.com/2016/10/07/实战Vue（二）/</id>
    <published>2016-10-07T15:13:45.000Z</published>
    <updated>2016-10-07T15:17:21.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;继续上一次实战Vue的讲解。回顾上篇，主要讲解的内容有使用Vue的准备工作、环境的搭建及分析Vue与JQuery的区别。&lt;br&gt;本章将进一步讲解Vue，我会从Vue作者尤雨溪去年在携程C4技术分享沙龙公开演讲的话语中进行剖析和讲解Vue的语法和思想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h4 id=&quot;3-2-剖析Vue相关的语句及其语法&quot;&gt;&lt;a href=&quot;#3-2-剖析Vue相关的语句及其语法&quot; class=&quot;headerlink&quot; title=&quot;3.2 剖析Vue相关的语句及其语法&quot;&gt;&lt;/a&gt;3.2 剖析Vue相关的语句及其语法&lt;/h4&gt;&lt;p&gt;1.应用逻辑状态本身真相只存在一个地方&lt;br&gt;剖析：要想理解整句话的含义，需要理解该句话的关键词，“应用逻辑状态”。&lt;br&gt;什么是应用逻辑状态？我认为应用逻辑状态是指&lt;strong&gt;改变页面的数据&lt;/strong&gt;。&lt;br&gt;该数据包括&lt;strong&gt;ajax传递的参数和返回的参数及前端js的参数&lt;/strong&gt;。说的有点抽象，举例：&lt;br&gt;a.ajax传递的参数&lt;br&gt;添数据———-&amp;gt;发起投票页面：&lt;br&gt;默认是空的页面，什么都没有填写&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/text.png&quot; alt=&quot;发起投票&quot; title=&quot;发起投票&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        params:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          openID:$.basis.PATH.user.openID||&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          type:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//文字投票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          picTemplateID:&lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//默认单选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          title:&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          item:[&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          item_type:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          descimage:&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          desc:&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          endType:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          max_choose:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          isOpenAnswer:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          open_to_creater:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;填写好数据之后的页面：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/has-text.png&quot; alt=&quot;发起投票&quot; title=&quot;发起投票&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        params:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          openID: &lt;span class=&quot;string&quot;&gt;&quot;oI86Dt_IgGPfsdsXm4cVOKp-9lXQ&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          type: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          picTemplateID: &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          title: &lt;span class=&quot;string&quot;&gt;&quot;投票标题&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          item: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;选项1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;选项2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          item_type: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          descimage: &lt;span class=&quot;string&quot;&gt;&quot;base64格式的链接&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          desc: &lt;span class=&quot;string&quot;&gt;&quot;关于此投票，说点什么吧&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          endType: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          max_choose: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          isOpenAnswer: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          open_to_creater: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和以前JQuery相比，这样的好处是应用状态本身只存在params这一个地方，用户进行文本输入和图片上传时，我们不需要挨个去获取DOM的值然后放在params里面，这些过程在Vue的数据绑定中已经动态实现，用户操作什么，params里面的值就自动改变成什么。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;b.ajax返回的参数&lt;br&gt;查数据———-&amp;gt;投票详情页面：&lt;br&gt;去哪儿吃：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/eat.png&quot; alt=&quot;去哪儿吃&quot; title=&quot;去哪儿吃&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/mulit.png&quot; alt=&quot;普通多选&quot; title=&quot;普通多选&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        question:&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getQuestion()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.get(url,(rst)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.question=rst;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过调用getQuestion方法获取的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//发起人参与公开去哪儿吃投票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;question:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;isone&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;is_open_answer&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//参与者参与匿名普通多选投票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;question:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;isone&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;is_open_answer&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;前端通过ajax获取值后会根据返回的值去判断该将怎样的页面展示给用户。每个页面最终只会展示一种效果，要么是场景类投票的效果，要么是普通类投票的效果，因此和上述所说的应用逻辑状态本身只存在一个地方是一致的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;c.前端js的参数&lt;br&gt;加载中：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/loading.png&quot; alt=&quot;加载中&quot; title=&quot;加载中&quot;&gt;&lt;br&gt;给予提示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/09/25/loadinginfo.png&quot; alt=&quot;给予提示&quot; title=&quot;给予提示&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;css&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.hide&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;:none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;wait hide&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JQuery：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.wait&#39;&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;hide&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.post(url,params,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;.wait&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;hide&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Vue：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        waitParams:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          waitShow:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tipParams:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          tipShow:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          tipInfo:&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          isClick:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.waitParams.waitShow=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.post(url,params,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.waitParams.waitShow=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当前端调用接口之前会出现加载中及蒙层，等接口成功返回东西后将其隐藏;还有用户操作不当的时候，需提示其信息。以前JQuery的思路是先获取DOM，然后使用removeClass(‘hide’)将其显示，等成功后addClass(‘hide’)。尽管也很简单，但是没有与数据关联起来，而Vue实现了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一句话概括，数据改变页面，数据只在一个地方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.传统前端数据状态放在DOM表单，应用状态存在多个地方&lt;br&gt;这句话的意思可直接看代码解释：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;openID&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;openID&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;createKey&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;createKey&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;q-input&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hook&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;q-title&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;(限20个字内)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;maxlength&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;endType&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;endType&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;open_to_creater&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;open_to_creater&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;isRepeatSingle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;isRepeatSingle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;isOpenAnswer&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;isOpenAnswer&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;picTemplateID&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;picTemplateID&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--应用状态存在多个input里面 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.DOM只是Model自然的映射，不碰DOM，碰Model&lt;br&gt;Vue的核心思想就是想让前端尽量少用或不用JQuery、Zepto，这样的好处是不需要每次去做重复的事情（获取DOM，改变DOM的值或样式）。使用Vue后，只需要将DOM和Model之间建立好联系，直接碰Model就好。&lt;/p&gt;
&lt;p&gt;4.data就是Model，el就是View，vm就是ViewModel&lt;br&gt;官网上的Demo：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;&amp;#123;&amp;#123; message &amp;#125;&amp;#125;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vm =new Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  el: &amp;apos;#app&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: &amp;apos;Hello Vue.js!&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一个完整的vue文件包含以下内容：&lt;br&gt;data就是Model，template就是View，整个export就是ViewModel&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.hello&amp;#123; font-size:24px &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;apos;hello&amp;apos;&amp;gt;&amp;#123;&amp;#123; message &amp;#125;&amp;#125;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export default&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message:&amp;apos;Hello Vue.js!&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.指令本质就是封装DOM操作，每个指令观察一片数据以及管理对应DOM元素，每当观察数据产生变化的时候，它就对应更新其管理的那块DOM&lt;br&gt;要想理解这句话，请看下面的图片：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/directive.png&quot; alt=&quot;指令&quot; title=&quot;指令&quot;&gt;&lt;br&gt;DOM监听器：如点击事件click、滚动事件srcoll、输入值改变事件change&lt;br&gt;指令：如v-if、v-show、v-for、v-else、v-model、v-lazy、v-tap（后面会有详细介绍）&lt;br&gt;以v-lazy为例，该指令目的是实现图片的懒加载、加载后以base64方式展现及让图片居中，等用户滚动后，慢慢将其图片加载出来，减少初始资源的请求。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Vue.directive(&lt;span class=&quot;string&quot;&gt;&#39;lazy&#39;&lt;/span&gt;,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bind:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 准备工作，如注册事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    update:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//值更新时的工作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//懒加载、base64转换、图片居中等逻辑操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.el.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;src&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.src);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unbind:fucntion()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//清理工作，如移除事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;img v-lazy=&lt;span class=&quot;string&quot;&gt;&#39;url1&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-lazy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;url2&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当使用v-lazy这个指令后，指令会分别观察url1和url2的img元素，当用户滚动时，会将url1和url2传入src属性后，随后图片将加载到各自的img上，最后展现给用户。&lt;/p&gt;
&lt;p&gt;6.DOM里添加listeners，事件修改Model，不修改DOM&lt;br&gt;这个是告诉初学者在使用Vue语法的时候要注意的事项。&lt;br&gt;例如实现点击按钮弹出一个页面&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-show&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;isShow.page&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;page&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; @&lt;span class=&quot;attr&quot;&gt;click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;openPage()&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;按钮&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openPage()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.isShow.page=true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;7.每一个组件都可以看做是一个ViewModel，所以可以把页面抽象为ViewModel Tree&lt;br&gt;看下面的图：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/components.png&quot; alt=&quot;viewmodel&quot; title=&quot;viewmodel&quot;&gt;&lt;br&gt;一个页面可以由多个组件构成，每个组件就是一个viewmodel。因此我们可以像拼积木一样的把页面分割成多个块，然后可以自由地进行拆卸、组装，最后组成自己想展示的页面。这样做的好处就是&lt;strong&gt;多处展示，一处改动&lt;/strong&gt;。因为用的组件是同一个。&lt;br&gt;举例说明：&lt;br&gt;发起投票可以分成文字、图片、定日子、看电影、去哪儿吃，&lt;br&gt;没有购买高级功能的用户，只能享受普通用户的特权。文字选项、定日子选项不能超过20个、图片选项、看电影选项、去哪儿吃选项不能超过9个，因此需要根据不同投票类型去展示不同的东西，这时可以封装成同一个组件VoteTipInfo。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/text.png&quot; alt=&quot;文字投票&quot; title=&quot;文字投票&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/picture.png&quot; alt=&quot;图片投票&quot; title=&quot;图片投票&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/code.png&quot; alt=&quot;代码&quot; title=&quot;代码&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面的代码只是提示组件，整个发起页面从上到下分成提示组件、选项组件、背景故事组件、模板组件、时间组件等。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;3-3重点语法的讲解及生命周期（适合理解和学习过vue的）&quot;&gt;&lt;a href=&quot;#3-3重点语法的讲解及生命周期（适合理解和学习过vue的）&quot; class=&quot;headerlink&quot; title=&quot;3.3重点语法的讲解及生命周期（适合理解和学习过vue的）&quot;&gt;&lt;/a&gt;3.3重点语法的讲解及生命周期（适合理解和学习过vue的）&lt;/h4&gt;&lt;p&gt;1.实现父子组件之间的数据传递&lt;br&gt;&lt;figure class=&quot;highlight dust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 父组件--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;vote-category&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:user-info&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;user&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:number.sync&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;vote-category&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data()&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**父组件参数**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user:&amp;#123;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    number:1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; components:&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &#39;vote-category&#39;:require(&#39;../components/ui/home/voteCategory.vue&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 子组件使用--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; userInfo &amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props:[&#39;userInfo&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意事项：如果传递的不是json对象，请使用sync实现双向绑定。&lt;/p&gt;
&lt;p&gt;2.vue-router实现组件与组件之间的数据传递：&lt;br&gt;方案一：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$route.router.go(&amp;#123;&lt;span class=&quot;string&quot;&gt;path:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;/lucky/list?openID=&#39;&lt;/span&gt;+openID+&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;questionID=&#39;&lt;/span&gt;+questionID&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方案二：&lt;br&gt;&lt;strong&gt;Vuex&lt;/strong&gt;&lt;br&gt;该方案适合数据传递有很多值的情况，如json对象等。优点是全局变量，缺点是学习难点稍大，重点理解下modules、store、action这三个概念，自己使用一次就会了。&lt;/p&gt;
&lt;p&gt;3.组件之间可以通过事件系统进行通讯&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//子组件-&amp;gt;父组件 $dispatch()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;子组件：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$dispatch(&lt;span class=&quot;string&quot;&gt;&#39;refreshQuestion&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;父组件：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;methods:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getQuestion()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//最终执行的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;events:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    refreshQuestion()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getQuestion();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//父组件-&amp;gt;子组件 $boardcast()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// return false阻断传递&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;（没怎么用过,使用的场合很少）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.track-by、\$index的讲解&lt;br&gt;track-by在v-for指令上使用能复用vm和DOM元素，提供渲染效率。\$index即当json格式的数组里面没有唯一标识符时使用。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//有唯一标识符时：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item in choiceList&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;track-by&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;business_id&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item.s_photo_url&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//无唯一标识符时：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item in list&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;track-by&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;$index&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;header-img&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-lazy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item.HEADIMGURL&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.v-clock的讲解&lt;br&gt;v-clock这个指令可以隐藏未编译的Mustache标签直到实例准备完毕。&lt;br&gt;简单讲就是括号里面的值真正编译成功后才展示到页面上，页面上不会出现形式的字符串，只会出现赋的值。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;css&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;selector-attr&quot;&gt;[v-cloak]&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;  @&lt;span class=&quot;attr&quot;&gt;click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;createVote&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-cloak&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    我也要发起&amp;#123;&amp;#123; createVoteInfo &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.\:style和\:class的妙用&lt;br&gt;该使用可以对相同页面的不同风格进行随意改变，如差不多的页面有相同的按钮，只是颜色稍有点不同，如去哪儿吃页面要显示红色文字、看电影页面要显示蓝色文字，那么可以这样使用。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- style用法 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul class=&quot;options&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li v-for=&#39;item in question.item&#39; track-by=&#39;item_index&#39;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div class=&quot;progress&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;div :data-value=&quot;item.percentage&quot; :style=&#39;&amp;#123;width:&quot;0%&quot;,background: colors[$index] &amp;#125;&#39;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- class用法 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:class=&#39;[&quot;cardType&quot;,selectClass.titleClass]&#39; v-cloak&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123; selectClass.titleName &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectClass:&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        voteClass:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            eat:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              titleName:&#39;去哪儿吃&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              titleClass:&#39;eat&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              color:&#39;#A33B34&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           moive:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              titleName:&#39;看电影&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              titleClass:&#39;moive&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              color:&#39;#6066FC&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ready()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(type == 2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.selectClass=this.voteClass.eat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else if(type == 3)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.selectClass=this.voteClass.moive;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;7.slot的讲解&lt;br&gt;slot翻译过来为&lt;strong&gt;插槽&lt;/strong&gt;，顾名思义使用slot可以插些组件到一个页面。简单理解就是子类使用slot后，父类定义的各种组件可以插入子类所设定的模板中。&lt;br&gt;如：&lt;br&gt;投票详情子类detailVote.vue里面定义模板：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/parent.png&quot; alt=&quot;子类&quot; title=&quot;子类&quot;&gt;&lt;/p&gt;
&lt;p&gt;投票详情父类detailVoteBasis.vue里面插入组件：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/child.png&quot; alt=&quot;父类&quot; title=&quot;父类&quot;&gt;&lt;/p&gt;
&lt;p&gt;8.component is的讲解&lt;br&gt;上面使用slot的时候有个弊端就是一个页面的一个插槽只能对应一个组件，如果一个页面的一个插槽想对应多个组件的话，就需使用component is。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;component  :is=&lt;span class=&quot;string&quot;&gt;&#39;currentVoteCardView&#39;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentVoteCardView:&lt;span class=&quot;string&quot;&gt;&#39;vote-card-defaul&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;components:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;vote-card-default&#39;&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../../components/ui/detailVote/voteCard/basis/voteCardDefault.vue&#39;&lt;/span&gt;),&lt;span class=&quot;comment&quot;&gt;//默认投票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;vote-card-text&#39;&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../../components/ui/detailVote/voteCard/basis/voteCardText.vue&#39;&lt;/span&gt;),&lt;span class=&quot;comment&quot;&gt;//文字投票（单选、多选）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;vote-card-single-image&#39;&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../../components/ui/detailVote/voteCard/basis/voteCardSingleImage.vue&#39;&lt;/span&gt;),&lt;span class=&quot;comment&quot;&gt;//单图投票（赞与不赞、对与错、星级评比）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;vote-card-multiple-image&#39;&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../../components/ui/detailVote/voteCard/basis/voteCardMultipleImage.vue&#39;&lt;/span&gt;),&lt;span class=&quot;comment&quot;&gt;//多图投票（单选、多选、排序、PK）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//根据投票picture_template_id确定对应的模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; templateId=result[&lt;span class=&quot;string&quot;&gt;&#39;picture_template_id&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(templateId == &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;1000002&lt;/span&gt;)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//文字投票               &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.currentVoteCardView=&lt;span class=&quot;string&quot;&gt;&#39;vote-card-text&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(templateId == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;1002001&lt;/span&gt;)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//单图投票      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.currentVoteCardView=&lt;span class=&quot;string&quot;&gt;&#39;vote-card-single-image&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(templateId == &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; || templateId == &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//多图投票    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.currentVoteCardView=&lt;span class=&quot;string&quot;&gt;&#39;vote-card-multiple-image&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;9.v-text、v-if、v-show、v-else、v-for、v-model、v-lazy、v-tap各种指令的适用场景。&lt;br&gt;v-text适用场景是需要根据不同的状态展示不同的值的时候。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;question.status == 1 ? &quot;进行中&quot; : &quot;已关闭&quot;&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;v-if适用场景是第一次显隐或不需要显隐切换时使用，因为它为false的时候不会生成DOM。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;isOpenClass ==&quot;open&quot;&#39;&lt;/span&gt;&amp;gt;我发狠话啦，参与投票的小伙伴必须公开数据！&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;gt;小伙伴们放心投，此投票已设为匿名投票。&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;二选一让它第一次显示哪个的时候可以使用v-if，例子里面只会生成一个span标签。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;v-show适用场景是经常显隐的切换，因为它无论什么时候都会生成DOM。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; v-show=&lt;span class=&quot;string&quot;&gt;&#39;isOpenClass ==&quot;open&quot;&#39;&lt;/span&gt;&amp;gt;我发狠话啦，参与投票的小伙伴必须公开数据！&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;gt;小伙伴们放心投，此投票已设为匿名投票。&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例子里面只会生成两个span标签。&lt;br&gt;v-else就是其他的意思，和v-if或v-show一同使用。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;v-for适用场景是遍历ajax返回的json格式的数组展示其数据，如列表等。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item in choiceList&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;track-by&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item_index&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-cloak&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img hide&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item.item_image_url&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;v-model适用场景是用户进行输入时，input的值会跟着其改变。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;textarea &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;reply-text&quot;&lt;/span&gt; rows=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt; cols=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt; placeholder=&lt;span class=&quot;string&quot;&gt;&quot;回复 &amp;#123;&amp;#123; commentWho.nikename &amp;#125;&amp;#125;：&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v-model=&lt;span class=&quot;string&quot;&gt;&#39;commentWho.content&#39;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;input placeholder=&lt;span class=&quot;string&quot;&gt;&quot;填写个数&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt; v-model=&lt;span class=&quot;string&quot;&gt;&#39;price.total&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;v-lazy适用场景是图片懒加载。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;header-img&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-lazy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item.HEADIMGURL&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;v-tap适用场景是想阻止200ms的延迟点击，想快速点击。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;add-option&quot;&lt;/span&gt; v-tap=&lt;span class=&quot;string&quot;&gt;&#39;addItem()&#39;&lt;/span&gt; v-show=&lt;span class=&quot;string&quot;&gt;&#39;isAddOpen&#39;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;10.页面的生命周期&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/10/06/lifecycle.png&quot; alt=&quot;生命周期&quot; title=&quot;生命周期&quot;&gt;&lt;/p&gt;
&lt;p&gt;重点理解生命周期的created、ready、attached、watch、computed。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;继续上一次实战Vue的讲解。回顾上篇，主要讲解的内容有使用Vue的准备工作、环境的搭建及分析Vue与JQuery的区别。&lt;br&gt;本章将进一步讲解Vue，我会从Vue作者尤雨溪去年在携程C4技术分享沙龙公开演讲的话语中进行剖析和讲解Vue的语法和思想
    
    </summary>
    
      <category term="MVVM" scheme="http://vmartaw.com/categories/MVVM/"/>
    
    
      <category term="Vue" scheme="http://vmartaw.com/tags/Vue/"/>
    
      <category term="Webpack" scheme="http://vmartaw.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>移动端Web之经验总结</title>
    <link href="http://vmartaw.com/2016/07/23/%E7%A7%BB%E5%8A%A8%E7%AB%AFWeb%E4%B9%8B%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <id>http://vmartaw.com/2016/07/23/移动端Web之经验总结/</id>
    <published>2016-07-23T14:23:56.000Z</published>
    <updated>2016-07-24T13:59:09.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近一直在负责公司微信端的重构，在此期间遇到了颇多问题，遇到问题不要怕，总会有解决的办法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;一-移动端和PC端的区别&quot;&gt;&lt;a href=&quot;#一-移动端和PC端的区别&quot; class=&quot;headerlink&quot; title=&quot;一.移动端和PC端的区别&quot;&gt;&lt;/a&gt;一.移动端和PC端的区别&lt;/h3&gt;&lt;p&gt;看了网上很多资料，但和我想表达的东西有些不同，说下我自己的理解。&lt;br&gt;PC端的前端，负责的是&lt;strong&gt;用PC浏览器打开的网页&lt;/strong&gt;。&lt;br&gt;PC浏览器因为软件的不同也会有些差异，常见的有Safari、Chrome、Firefox、IE（IE6-IE8、IE9以上）。&lt;/p&gt;
&lt;p&gt;移动端的前端，负责的是&lt;strong&gt;用手机打开的网页&lt;/strong&gt;。相信大家应该注意到了，写的是用手机打开的网页，而非手机浏览器打开的网页。为什么这样讲呢？因为手机App里面也有前端做的页面，如微信。&lt;/p&gt;
&lt;p&gt;移动端和PC端的区别有很多，但我认为它们之间最大的区别就是&lt;strong&gt;设备&lt;/strong&gt;。&lt;br&gt;从不同的设备出发，可以分析出很多问题：&lt;/p&gt;
&lt;h4 id=&quot;1-手机与PC硬件不同&quot;&gt;&lt;a href=&quot;#1-手机与PC硬件不同&quot; class=&quot;headerlink&quot; title=&quot;1.手机与PC硬件不同&quot;&gt;&lt;/a&gt;1.手机与PC硬件不同&lt;/h4&gt;&lt;p&gt;PC的GPU与手机的GPU的处理能力差异较大，看下面的截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/a.png&quot; alt=&quot;&amp;quot;GPU&amp;quot;&quot; title=&quot;GPU&quot;&gt;&lt;/p&gt;
&lt;p&gt;拥有相同架构的GPU处理器，在移动端的GPU与PC的GPU相比，手机处理能力只有电脑处理能力的十分之一。&lt;br&gt;GPU的处理能力关前端什么事情？这关系大大的有，因为浏览器的主要结构里面有个&lt;strong&gt;“渲染引擎”&lt;/strong&gt;，该结构需要硬件GPU的大力支持，请看下面的截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/b.png&quot; alt=&quot;&amp;quot;渲染引擎&amp;quot;&quot; title=&quot;渲染引擎&quot;&gt;&lt;/p&gt;
&lt;p&gt;该截图出自我之前写过的文章&lt;strong&gt;&lt;a href=&quot;http://www.vmartaw.com/2016/02/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E9%83%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《浏览器内部工作原理》&lt;/a&gt;&lt;/strong&gt;，有兴趣的朋友可以看看。&lt;/p&gt;
&lt;p&gt;再来看一个东西，2016年6月起最近六个月在国内浏览器市场份额与移动设备市场份额的情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/c.png&quot; alt=&quot;&amp;quot;浏览器市场份额&amp;quot;&quot; title=&quot;浏览器市场份额&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/d.png&quot; alt=&quot;&amp;quot;移动设备市场份额&amp;quot;&quot; title=&quot;移动设备市场份额&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;2-手机尺寸大小不同&quot;&gt;&lt;a href=&quot;#2-手机尺寸大小不同&quot; class=&quot;headerlink&quot; title=&quot;2.手机尺寸大小不同&quot;&gt;&lt;/a&gt;2.手机尺寸大小不同&lt;/h4&gt;&lt;p&gt;不同的手机，不同的品牌手机的尺寸都会有些许不同，前端使用HTML、CSS、JS需要对其进行适配和布局。一套代码，适应多个终端，因此会涉及到布局和排版等问题。还有就是UI给的设计图只是针对具体的一个手机定做的，因此在不同大小的手机上访问同一个页面效果肯定会有不同，这就需要UI和前端一起来协商解决。&lt;br&gt;手机大小的不同导致的问题一般是CSS样式，如&lt;strong&gt;位置、宽度、高度、字体样式、大小&lt;/strong&gt;等。&lt;br&gt;最近做的页面效果，相同的页面，一个在IPhoneSE的效果，另一个在魅蓝note2的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/e.png&quot; alt=&quot;&amp;quot;IPhoneSE&amp;quot;&quot; title=&quot;IPhoneSE&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/f.jpg&quot; alt=&quot;&amp;quot;魅蓝Note2&amp;quot;&quot; title=&quot;魅蓝Note2&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;3-手机系统不同&quot;&gt;&lt;a href=&quot;#3-手机系统不同&quot; class=&quot;headerlink&quot; title=&quot;3.手机系统不同&quot;&gt;&lt;/a&gt;3.手机系统不同&lt;/h4&gt;&lt;p&gt;现在主流的手机系统不外乎就是IOS和Android，手机系统导致的问题是&lt;strong&gt;API支不支持&lt;/strong&gt;的问题,比如webgl相关API在IOS上支持，在Android上不支持，又比如webp相关API在Android上支持，在IOS上不支持。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/webgl.png&quot; alt=&quot;&amp;quot;WebGL&amp;quot;&quot; title=&quot;WebGL&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/webp.png&quot; alt=&quot;&amp;quot;WebP&amp;quot;&quot; title=&quot;WebP&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;4-手机浏览器版本不同&quot;&gt;&lt;a href=&quot;#4-手机浏览器版本不同&quot; class=&quot;headerlink&quot; title=&quot;4.手机浏览器版本不同&quot;&gt;&lt;/a&gt;4.手机浏览器版本不同&lt;/h4&gt;&lt;p&gt;即使在相同的系统里面，尤其是Android上，也会出现样式的紊乱，导致的问题是&lt;strong&gt;API支不支持&lt;/strong&gt;的问题，比如display:flex属性在Android4.3以下版本部分支持。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/flex.png&quot; alt=&quot;&amp;quot;Flex&amp;quot;&quot; title=&quot;Flex&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;5-手机浏览器自带样式及属性&quot;&gt;&lt;a href=&quot;#5-手机浏览器自带样式及属性&quot; class=&quot;headerlink&quot; title=&quot;5.手机浏览器自带样式及属性&quot;&gt;&lt;/a&gt;5.手机浏览器自带样式及属性&lt;/h4&gt;&lt;p&gt;不同浏览器都有自己不同是默认样式，比如在Safari中默认有一些自带样式，即使你对该样式赋值了其他样式，它也没有改变，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/21/g.png&quot; alt=&quot;&amp;quot;确认按钮&amp;quot;&quot; title=&quot;确认按钮&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意看右下角的确认按钮，我用CSS进行了样式修改，但还是无效，还是会把原来Safari默认的按钮样式带了进来，这时需要用到一个CSS属性：-webkit-appearance来解决该问题。这只是举例，还有其他的东西都会在后面讲到。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;二-移动端经验总结&quot;&gt;&lt;a href=&quot;#二-移动端经验总结&quot; class=&quot;headerlink&quot; title=&quot;二.移动端经验总结&quot;&gt;&lt;/a&gt;二.移动端经验总结&lt;/h3&gt;&lt;p&gt;第一章节讲解了PC和移动端的区别及移动端的各种问题，遇到这些问题，肯定会有解决的方法的，下面听我一一到来。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*1.去除系统默认appearance的样式，常用于IOS下移除原生样式*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-appearance&lt;/span&gt;: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*2.禁止选择文本*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-user-select&lt;/span&gt;: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*3.禁止文本缩放*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-text-size-adjust&lt;/span&gt;: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*4.取消长按div出现灰色蒙层*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0,0,0,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*5.禁止图片保存*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-touch-callout&lt;/span&gt;: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*6.取消行内、行内块级元素之间产生的间距*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.parent&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.child&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*7.使用PC Chrome打开响应式制作页面时，发现chrome&amp;lt;12px字体无效，进入chrome://settings/fonts设置即可*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*8.待续*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近一直在负责公司微信端的重构，在此期间遇到了颇多问题，遇到问题不要怕，总会有解决的办法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;一-移动端和PC端的区别&quot;&gt;&lt;a href=&quot;#一-移动端和PC端的区别&quot; class=&quot;he
    
    </summary>
    
      <category term="HTML" scheme="http://vmartaw.com/categories/HTML/"/>
    
    
      <category term="JavaScript" scheme="http://vmartaw.com/tags/JavaScript/"/>
    
      <category term="CSS" scheme="http://vmartaw.com/tags/CSS/"/>
    
      <category term="HTML" scheme="http://vmartaw.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>一个人的生活</title>
    <link href="http://vmartaw.com/2016/07/03/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
    <id>http://vmartaw.com/2016/07/03/一个人的生活/</id>
    <published>2016-07-03T12:56:34.000Z</published>
    <updated>2016-07-20T15:29:39.000Z</updated>
    
    <content type="html">&lt;p&gt;大家好，我是个典型的90后，也是个小老百姓，更是个普通的不能在普通的上漂族。&lt;/p&gt;
&lt;p&gt;我有好多感概，想抒发一下，这些都是自己目前最真实的想法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-第一次&quot;&gt;&lt;a href=&quot;#1-第一次&quot; class=&quot;headerlink&quot; title=&quot;1.第一次&quot;&gt;&lt;/a&gt;1.第一次&lt;/h3&gt;&lt;p&gt;在我看来，人这辈子要经历很多第一次，每个第一次都是一种成长。&lt;br&gt;在我来上海之前，完成了第一次“找房子”，然后从成都飞上海，完成了第一次“到上海”。到上海后，第一次拖着“沉甸甸的行李”到了宾馆住了一晚，第二天完成了第一次交租金、第一次买生活用品等一系列“租房子”生活。在生活里，第一次自己“手洗”衣物、袜子。&lt;br&gt;可能在大多数漂泊在外的人来说我上面说的可能是在正常不过的事情，但是我在成都的时候，一直是住父母的，吃父母的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-生活不易&quot;&gt;&lt;a href=&quot;#2-生活不易&quot; class=&quot;headerlink&quot; title=&quot;2.生活不易&quot;&gt;&lt;/a&gt;2.生活不易&lt;/h3&gt;&lt;p&gt;来到上海后，&lt;strong&gt;第一次感觉到生活不易&lt;/strong&gt;，因为以前生活的衣食住行都被父母给予了，自己挣的钱都可以算是闲钱，&lt;br&gt;1.拿出来在外面大吃特吃，自助餐、海鲜、牛排、串串香、烤肉、鱼火锅、卡卡果果（四川方言）各种小吃，想想以前都特别滋润；&lt;br&gt;2.也可以拿钱出来买西装、衣服；&lt;br&gt;3.更可以拿钱买手机、电脑、平板等；&lt;br&gt;3.还可以拿钱买自己喜爱的及儿时怀旧的3DSLL、PS2、小浣熊水浒卡、老夫子漫画；&lt;br&gt;4.还可以去爬山、逛公园、看电影、玩电玩城、打斯诺克。&lt;/p&gt;
&lt;p&gt;到上海后，我发生了转变，从衣食住行这个词开始说起：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在外面，没有家人、没有亲戚、没有朋友的情况下， 任何时间任何地点任何方式都要花钱，如果乱用，自己就会变成流浪汉，成为月光族也特别容易。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;衣：衣服都是从成都带来的，去年买衣服花钱比较多，应该够用，今年就少买点，能省则省。除了衣，还有就是生活用品也要花钱，什么棉被、枕头、风扇、衣架、洗漱用品、洗衣用品、刀具、餐具…&lt;br&gt;食：以前都是我妈妈去买菜，我就弄饭，但是工作原因没时间自己做而且又是一个人，现在每天每顿饭都要自己花钱外面吃，上海吃的消费比成都偏高一点点，我是典型的吃货，但为了省钱，吃永和大王、沙县、黄焖鸡米饭的次数最多，也很少买水果。烟钱另算。&lt;br&gt;住：每月还得交房租和水电，一交至少都是三个月的，押一付三。&lt;br&gt;行：每天往返寝室和公司都是坐地铁，交通费每月也是一笔不小的开支。&lt;/p&gt;
&lt;p&gt;在衣食住行上我变化最多的是&lt;strong&gt;食&lt;/strong&gt;和&lt;strong&gt;住&lt;/strong&gt;，&lt;br&gt;成都的美食特别多，我也知道上海的美食也多，但都偏贵，为了省钱，我把“吃货”二字妥协了，当然这只是暂时的，因为一个人去哪儿吃都会觉得尴尬。&lt;br&gt;以前是住自己的房子，来上海后经历找房子、搬房子到住房子的过程，从无家可归到有房可住，这滋味只有自己能懂，而且担心哪天交不起房租了怎么办。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-孤独感&quot;&gt;&lt;a href=&quot;#3-孤独感&quot; class=&quot;headerlink&quot; title=&quot;3.孤独感&quot;&gt;&lt;/a&gt;3.孤独感&lt;/h3&gt;&lt;p&gt;为什么大家管在北京打拼的人叫“北漂”，管在上海打拼的人叫“上漂”？“漂”字更多的是因为缺乏安全感和归属感。&lt;br&gt;为什么缺乏安全感和归属感？因为&lt;strong&gt;有房有户口&lt;/strong&gt;就不容易有漂的感觉。&lt;br&gt;其次北京、上海的&lt;strong&gt;生活压力&lt;/strong&gt;往往会比二线、三线城市大一些。&lt;br&gt;当然，我也不例外。做什么事情，去什么地方都是一个人…上海虽大，人也特别多，但是我没有去上海各种地方玩玩，也没有跟上海的人们打交道，每天就是公司与寝室之间穿梭，交际也只有公司那么点人…&lt;br&gt;那为什么不去改变呢？因为我是一个人，去哪儿玩有什么意思呢，交朋友又有多少人能听懂四川话呢…&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-轻松不起来、战斗力下降&quot;&gt;&lt;a href=&quot;#4-轻松不起来、战斗力下降&quot; class=&quot;headerlink&quot; title=&quot;4.轻松不起来、战斗力下降&quot;&gt;&lt;/a&gt;4.轻松不起来、战斗力下降&lt;/h3&gt;&lt;p&gt;理论上说周一周五的辛苦工作后，周末应该能让自己放松放松的，但我却轻松不起来，会觉得好无聊，不无聊时什么事都不想动，也从没出去运动过、也很少写博客了。&lt;br&gt;为什么会这样呢？我难道颓废了？答案是No。&lt;br&gt;我发现了问题：&lt;br&gt;1.生活琐事多&lt;br&gt;指洗衣服、洗内裤、洗袜子、还得整理房间、倒垃圾、晾衣服等&lt;br&gt;2.天气&lt;br&gt;上海天气每到周末就下雨，好的时候只有一天下雨，不好的时候两天都在下雨，都不敢出门啦&lt;br&gt;3.工作关系&lt;br&gt;因为周一到周五在公司开足马力，火力全力地在重构微信端，时不时就会想这个bug该如何修复和解决&lt;br&gt;4.没女友在身边&lt;br&gt;耍了朋友后，没女友在身边，那个孤独寂寞冷呀，以前周末和女友在一起的时候，做任何事情都会觉得幸福，而现在呢，只有游戏陪着朕&lt;br&gt;5.室友&lt;br&gt;话说近朱者赤近墨者黑，他是个每天都要LOL的人，我理解他为什么玩游戏，因为他是被生活逼的。一个人太无聊了，慢慢地，我也开始玩游戏混时间了，因为如果要出去玩肯定要花钱，还不如少充点钱玩游戏。&lt;br&gt;6.各种烦琐事&lt;br&gt;以前在成都的时候，因为我和女友在一起的关系，双方父母都不会参与太多，我和她生活挺自由，也挺幸福的。自从我离开成都后，我爸急着我俩结婚的事情，她妈急着我俩买房的事情，人都要逼疯啦，我才来上海三个月的嘛，而且年龄还小，这些事情是不是说的早了点？&lt;/p&gt;
&lt;p&gt;还好这些日子不多了，因为女友也要来上海和我一起打拼了，真的好开心，好兴奋，有木有！哈哈&lt;br&gt;最后一句话总结下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;生活百般滋味，人生需要笑对，女友一来到，世界变了样&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在没女友的日子，下面是我玩的游戏，还不错哟，值得推荐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3DS-塞尔达传说时之笛&quot;&gt;&lt;a href=&quot;#3DS-塞尔达传说时之笛&quot; class=&quot;headerlink&quot; title=&quot;3DS 塞尔达传说时之笛&quot;&gt;&lt;/a&gt;3DS 塞尔达传说时之笛&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/04/2013101716387.jpg&quot; alt=&quot;塞尔达传说时之笛&quot; title=&quot;塞尔达传说时之笛&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deemo&quot;&gt;&lt;a href=&quot;#Deemo&quot; class=&quot;headerlink&quot; title=&quot;Deemo&quot;&gt;&lt;/a&gt;Deemo&lt;/h3&gt;&lt;p&gt;强力推荐这首歌：wings of piano&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/04/8718367adab44aed755c25d5b51c8701a18bfbf5.jpg&quot; alt=&quot;Deemo&quot; title=&quot;Deemo&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;航海王强者之路&quot;&gt;&lt;a href=&quot;#航海王强者之路&quot; class=&quot;headerlink&quot; title=&quot;航海王强者之路&quot;&gt;&lt;/a&gt;航海王强者之路&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016%2F07%2F04%2F2015124152311.png&quot; alt=&quot;航海王强者之路&quot; title=&quot;航海王强者之路&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;捕鱼达人千炮版&quot;&gt;&lt;a href=&quot;#捕鱼达人千炮版&quot; class=&quot;headerlink&quot; title=&quot;捕鱼达人千炮版&quot;&gt;&lt;/a&gt;捕鱼达人千炮版&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/07/04/512x512bb.jpg&quot; alt=&quot;捕鱼达人千炮版&quot; title=&quot;捕鱼达人千炮版&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大家好，我是个典型的90后，也是个小老百姓，更是个普通的不能在普通的上漂族。&lt;/p&gt;
&lt;p&gt;我有好多感概，想抒发一下，这些都是自己目前最真实的想法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-第一次&quot;&gt;&lt;a href=&quot;#1-第一次&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="Life" scheme="http://vmartaw.com/categories/Life/"/>
    
    
      <category term="Life" scheme="http://vmartaw.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>实战Vue</title>
    <link href="http://vmartaw.com/2016/06/19/%E5%AE%9E%E6%88%98Vue/"/>
    <id>http://vmartaw.com/2016/06/19/实战Vue/</id>
    <published>2016-06-19T15:39:45.000Z</published>
    <updated>2016-06-19T15:40:20.000Z</updated>
    
    <content type="html">&lt;p&gt;已经有一个多月没更新博客，因为最近实在太忙，没额外的时间去整理和总结，后续会一步一步弄上去的。&lt;/p&gt;
&lt;p&gt;前面两章分别介绍了Vue，本章就直接从代码入手开始讲解Vue。&lt;/p&gt;
&lt;p&gt;本章东西讲解会特别多，因此先给大家介绍下使用到的东西：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git ：获取github上面的开源项目及Demo&lt;/li&gt;
&lt;li&gt;node.js ：使用npm获取安装需要的框架及插件&lt;/li&gt;
&lt;li&gt;webpack ：搭建前端工程化的框架&lt;/li&gt;
&lt;li&gt;vue ：轻巧的MVVM框架&lt;/li&gt;
&lt;li&gt;vue-loader ：组合webpack与vue，方便解析*.vue格式的web组件化文件&lt;/li&gt;
&lt;li&gt;vue-router ：实现SPA单页应用所用到的路由&lt;/li&gt;
&lt;li&gt;vuex： 共享全局vue实例变量&lt;/li&gt;
&lt;li&gt;fastclick ：消除移动端点击时出现的300ms延迟，使用户点击更爽，解决点透问题&lt;/li&gt;
&lt;li&gt;zepto ：需要用到其DOM操作及Ajax&lt;/li&gt;
&lt;li&gt;animate.css ：CSS3动画实现页面与页面之间的跳转&lt;/li&gt;
&lt;li&gt;http-server ：静态访问本地资源&lt;/li&gt;
&lt;li&gt;CommonJS规范 ：进行模块化的代码编写&lt;/li&gt;
&lt;li&gt;ES6规范：JavaScript的规范父级&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h3&gt;&lt;p&gt;既然要使用Vue实现数据绑定和组件化，就需要编写*.vue后缀的文件，因此需要使用Sublime的高亮显示和自动提示功能来让前端开发更加舒适，因此需要安装Vue.js所对应的插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/24/sublime.png&quot; alt=&quot;sublime&quot; title=&quot;sublime&quot;&gt;&lt;/p&gt;
&lt;p&gt;当我安装完后，用Sublime打开*.vue后缀的文件还是无法高亮，问题是：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/24/sublime2.png&quot; alt=&quot;sublime&quot; title=&quot;sublime&quot;&gt;&lt;/p&gt;
&lt;p&gt;因此，当我把SASS、CoffeeScript所对应的高亮插件也安装后，终于变颜色了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/24/sublime3.png&quot; alt=&quot;sublime&quot; title=&quot;sublime&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-搭建架构环境&quot;&gt;&lt;a href=&quot;#2-搭建架构环境&quot; class=&quot;headerlink&quot; title=&quot;2.搭建架构环境&quot;&gt;&lt;/a&gt;2.搭建架构环境&lt;/h3&gt;&lt;p&gt;该架构的成功搭建不是一时半会就能讲解清楚的，因为东西实在太多，vue+vue-loader+webpack+vue-router+vuex的搭建，fastclick+zepto+animate的使用，它们之间是如何组合在一起的，后续有时间会补充，因为是实战Vue，所以着重点会放在Vue，搭建完成的架构目录如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/24/jiagou.png&quot; alt=&quot;jiagou&quot; title=&quot;jiagou&quot;&gt;&lt;/p&gt;
&lt;p&gt;具体说明，请看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/24/jiagou3.png&quot; alt=&quot;jiagou&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-语法讲解&quot;&gt;&lt;a href=&quot;#3-语法讲解&quot; class=&quot;headerlink&quot; title=&quot;3.语法讲解&quot;&gt;&lt;/a&gt;3.语法讲解&lt;/h3&gt;&lt;h4 id=&quot;3-1-Vue-与-JQuery&quot;&gt;&lt;a href=&quot;#3-1-Vue-与-JQuery&quot; class=&quot;headerlink&quot; title=&quot;3.1 Vue 与 JQuery&quot;&gt;&lt;/a&gt;3.1 Vue 与 JQuery&lt;/h4&gt;&lt;p&gt;在语法讲解之前，我想先说下自己使用vue的感受。&lt;br&gt;Vue的学习成本稍大，因为，引用以前学的文章&lt;a href=&quot;http://www.vmartaw.com/2016/04/12/%E5%88%9D%E8%AF%86Vue-js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;《初识Vue.js》&lt;/strong&gt;&lt;/a&gt;的最后一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现阶段前端人员最大的问题不是技术实现，而是思维转变。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以在思维转变的过程是很需要时间的。&lt;br&gt;以前前端根深蒂固的思想就是使用过JQuery、Zepto等框架造成的，当年JQuery和Zepto的出现，是因为当年浏览器性能不够强大，为了解决各浏览器之间的兼容性，为了解决简化DOM操作等问题。&lt;br&gt;可如今浏览器性能已经变得非常强大，及使用IE浏览器的用户也越来越少，因此上面的问题已得到很好的解决。&lt;br&gt;以前的前端框架被硬件所制约，不得不为了硬件而妥协了业务。&lt;br&gt;而如今浏览器已强大到原生Native研发可以自己创建和销毁浏览器（webview），如QQ、淘宝、微信 App等。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;JQuery、Zepto的核心思想是&lt;strong&gt;封装DOM操作&lt;/strong&gt;，它们认为一切的的操作都是从&lt;strong&gt;查找元素开始的&lt;/strong&gt;，这个封装只是&lt;strong&gt;代码层面&lt;/strong&gt;的封装。&lt;br&gt;比如：&lt;/p&gt;
&lt;h4 id=&quot;scene1-我要获取该页面的某个元素或多个元素时，步骤是：&quot;&gt;&lt;a href=&quot;#scene1-我要获取该页面的某个元素或多个元素时，步骤是：&quot; class=&quot;headerlink&quot; title=&quot;scene1.我要获取该页面的某个元素或多个元素时，步骤是：&quot;&gt;&lt;/a&gt;scene1.我要获取该页面的某个元素或多个元素时，步骤是：&lt;/h4&gt;&lt;p&gt;1.为这个元素定义唯一标示符&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;first&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;selected&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;列表一&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;列表二&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;selected&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;列表三&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.根据这个唯一标示符从该页面找元素&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;first&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selected=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByClassName(&lt;span class=&quot;string&quot;&gt;&#39;selected&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//JQuery写法，写法是不是简单多了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first=$(&lt;span class=&quot;string&quot;&gt;&#39;#first&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selected=$(&lt;span class=&quot;string&quot;&gt;&#39;.selected&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;scene2.我要点击个按钮，同时隐藏两张图片&lt;br&gt;1.先定义两张图片和一个按钮&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;btn&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;隐藏按钮&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.给按钮添加点击事件，使其两张图片隐藏&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; btn=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;btn&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;btn.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imgs=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; imgs)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        imgs[i].style.display=&lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//JQuery写法，写法是不是简单多了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#btn&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;).hide();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面来说Vue、Angular，&lt;br&gt;Vue、Angular的核心思想是&lt;strong&gt;根据业务封装数据展示页面&lt;/strong&gt;，它们认为一切的的操作都是从&lt;strong&gt;数据开始的&lt;/strong&gt;，这个封装是&lt;strong&gt;业务层面&lt;/strong&gt;的封装。&lt;br&gt;先写到这，待续。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;已经有一个多月没更新博客，因为最近实在太忙，没额外的时间去整理和总结，后续会一步一步弄上去的。&lt;/p&gt;
&lt;p&gt;前面两章分别介绍了Vue，本章就直接从代码入手开始讲解Vue。&lt;/p&gt;
&lt;p&gt;本章东西讲解会特别多，因此先给大家介绍下使用到的东西：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;gi
    
    </summary>
    
      <category term="MVVM" scheme="http://vmartaw.com/categories/MVVM/"/>
    
    
      <category term="Vue" scheme="http://vmartaw.com/tags/Vue/"/>
    
      <category term="Webpack" scheme="http://vmartaw.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>前端工程化+Webpack</title>
    <link href="http://vmartaw.com/2016/04/23/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96-Webpack/"/>
    <id>http://vmartaw.com/2016/04/23/前端工程化-Webpack/</id>
    <published>2016-04-23T08:29:45.000Z</published>
    <updated>2016-04-23T09:31:34.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;现在的前端已经不是以前的前端啦。以前的前端职责就是写写页面，改改样式，掉掉接口就OK，可如今随着公司规模越来越大、想做的业务越来越多，给前端带来的影响就是&lt;strong&gt;代码增大&lt;/strong&gt;，代码增大导致的直接影响就是&lt;strong&gt;性能优化难，维护难度大&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-性能优化&quot;&gt;&lt;a href=&quot;#1-性能优化&quot; class=&quot;headerlink&quot; title=&quot;1.性能优化&quot;&gt;&lt;/a&gt;1.性能优化&lt;/h3&gt;&lt;p&gt;对于前端，性能优化必不可少，因为&lt;strong&gt;做前端就是做交互&lt;/strong&gt;，用户的交互体验直接反应了前端工程师的能力，除了交互还有就是&lt;strong&gt;精准力&lt;/strong&gt;。比如按钮与图片不对齐，布局出现问题等都是精准力不好导致的，所有好的产品的诞生都离不开精准力，因为&lt;strong&gt;细节决定成败&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在来说说前端如何实现性能优化，以下几个字就能说清楚：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;传输层面：减少请求&lt;br&gt;执行层面：减少重排与重绘&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重排与重绘这个概念前面专门有一篇文章有讲解，请看：&lt;a href=&quot;http://www.vmartaw.com/2016/02/18/%E9%87%8D%E6%8E%92%E4%B8%8E%E9%87%8D%E7%BB%98/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;《重排与重绘》&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传输层面&lt;/strong&gt;从来都是优化的核心点，需要了解&lt;a href=&quot;http://www.vmartaw.com/2016/02/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E9%83%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;《浏览器内部工作原理》&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;既然说到了前端性能优化这个东西上，我就简单说说如何实现性能优化？&lt;/p&gt;
&lt;h3 id=&quot;2-传输层面&quot;&gt;&lt;a href=&quot;#2-传输层面&quot; class=&quot;headerlink&quot; title=&quot;2.传输层面&quot;&gt;&lt;/a&gt;2.传输层面&lt;/h3&gt;&lt;p&gt;在传输层面可以大致分成两类来优化：&lt;/p&gt;
&lt;h4 id=&quot;a-减少请求数&quot;&gt;&lt;a href=&quot;#a-减少请求数&quot; class=&quot;headerlink&quot; title=&quot;a.减少请求数&quot;&gt;&lt;/a&gt;a.减少请求数&lt;/h4&gt;&lt;p&gt;载入的资源分散会增加请求数，因此可以做以下事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;合并css、js文件&lt;/strong&gt;，以此减少文件数，从而减少请求数&lt;/li&gt;
&lt;li&gt;合并背景图片，使用&lt;strong&gt;CSS Script&lt;/strong&gt;，以此减少文件数，从而减少请求数&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;CSS3来替换部分图片&lt;/strong&gt;，以此减少文件数，从而减少请求数&lt;/li&gt;
&lt;li&gt;图片可以使用&lt;strong&gt;Icon Font&lt;/strong&gt;，以此减少文件数，从而减少请求数&lt;/li&gt;
&lt;li&gt;图片转换成&lt;strong&gt;base64编码&lt;/strong&gt;，原理即将二进制格式的图片转换成字符串，以此减少文件数，从而减少请求数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;延迟加载&lt;/strong&gt;，如下拉列表图片应该随着下拉而去请求新的图片，按需加载，错误的做法就是列表的图片全部请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓存&lt;/strong&gt;，将依赖的js框架或公共的js文件或公共的css文件可以使用localStorage放本地，取的时候可以直接从本地获取&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;b-减轻请求大小&quot;&gt;&lt;a href=&quot;#b-减轻请求大小&quot; class=&quot;headerlink&quot; title=&quot;b.减轻请求大小&quot;&gt;&lt;/a&gt;b.减轻请求大小&lt;/h4&gt;&lt;p&gt;有些必须请求的东西（如单个页面js逻辑、css样式、图片等）就应该学会让它变得小巧，越轻小的资源，加载也就越快；&lt;br&gt;有些必须请求的接口（如获取页面的信息展示等）可以通过提升服务器宽带从而让请求速度提高，因此可以做以下事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;js、css文件压缩&lt;/strong&gt;，将写好的代码进行压缩，减轻了文件大小，从而减轻请求大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;图片无损压缩&lt;/strong&gt;，将使用的图片进行压缩，减轻了文件大小，从而减轻请求大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精简代码&lt;/strong&gt;，将无效的CSS样式或JS逻辑去除，减轻了文件大小，从而减轻请求大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开启Gzip&lt;/strong&gt;，Gzip开启以后会将输出到用户浏览器的数据进行压缩的处理，这样就会减小通过网络传输的数据量，从而减轻请求大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CDN&lt;/strong&gt;，即内容分发网络，目的是使用户可就近取得所需内容，解决Internet网络拥挤的状况&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-执行层面&quot;&gt;&lt;a href=&quot;#3-执行层面&quot; class=&quot;headerlink&quot; title=&quot;3.执行层面&quot;&gt;&lt;/a&gt;3.执行层面&lt;/h3&gt;&lt;p&gt;如何减少重排与重绘这个问题不仅仅与代码有直接联系，还与架构有直接联系。&lt;br&gt; &lt;strong&gt;SPA&lt;/strong&gt;，该架构的诞生，就是想&lt;strong&gt;解决当你用浏览器打开一个页面及跳转另一个页面所重复做的事情&lt;/strong&gt;，怎么个重复法？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;比如：当你打开页面的时候，&lt;br&gt;1.需要获取该页面的所有资源，包括html、js、css、图片等文件，&lt;br&gt;2.其次需要掉接口获取数据。&lt;/p&gt;
&lt;p&gt;先说第一件事情：浏览器通过网络请求加载页面资源，在页面呈现之前无论如何都要经历以下过程，具体步骤如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/23/render.png&quot; alt=&quot;render&quot; title=&quot;render&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML→DOM&lt;/li&gt;
&lt;li&gt;CSS→CSSOM&lt;/li&gt;
&lt;li&gt;DOM + CSSOM → Render Tree&lt;/li&gt;
&lt;li&gt;对Render Tree进行布局计算(Layout)&lt;/li&gt;
&lt;li&gt;对布局结果进行屏幕绘制(Paint)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;每个页面的显示都会经历这五步，所以当你跳转到一个新的页面或来回切换页面时也会重新执行这五步。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再说第二件事情：如果是数据需要从后台获取的页面，需要在前端用JS加载样式并组装数据生成HTML插入页面，因此浏览器渲染过程必须等到页面加载完CSS，并且JS加载完数据拼装好HTML之后才能开始进行，具体步骤如下：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/23/render2.png&quot; alt=&quot;render&quot; title=&quot;render&quot;&gt;&lt;/p&gt;
&lt;p&gt;前端JS渲染由于违背了浏览器的优化策略，总是存在一个不可突破的瓶颈：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JS和数据没加载完，JS拼装数据的逻辑没执行完，浏览器不能开始正常的渲染流程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结一句：&lt;br&gt;&lt;strong&gt;重绘发生在是Render Tree，重排发生在Layout，SPA架构其目的就是想减少重排与重绘的次数&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-什么是前端工程化&quot;&gt;&lt;a href=&quot;#4-什么是前端工程化&quot; class=&quot;headerlink&quot; title=&quot;4.什么是前端工程化&quot;&gt;&lt;/a&gt;4.什么是前端工程化&lt;/h3&gt;&lt;p&gt;又扯远了，明明在说前端工程化的事情，怎么一直在说前端性能优化的事情呢？因为&lt;strong&gt;前端工程化的诞生与前端性能优化有直接的联系&lt;/strong&gt;。&lt;br&gt;前端每次性能优化的手段都是大同小异；&lt;br&gt;代码的可维护性也基本是在细分职责；&lt;br&gt;&lt;strong&gt;既然每次优化的目的是相同的，但每次实现的过程是相似的，那么工程化可能是这一切问题的最终答案。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总结一句：&lt;br&gt;&lt;strong&gt;前端工程化就是前端性能优化的具体实现，方便前端人员进行文件的代码检查、合并、压缩、混淆、去掉注释、css优化、图片优化、编译打包成发布版等一些列重复优化的工作。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-前端构建工具&quot;&gt;&lt;a href=&quot;#5-前端构建工具&quot; class=&quot;headerlink&quot; title=&quot;5.前端构建工具&quot;&gt;&lt;/a&gt;5.前端构建工具&lt;/h3&gt;&lt;p&gt;要想具体实现前端工程化，自然少不了工程化工具，也是现在俗称的”构建工具“。&lt;br&gt;前端构建工具也特别多，如：Grunt、Gulp、Webpack等&lt;br&gt;我用的是Webpack，理由很简答，因为功能强大，且与vue.js配合度更高。&lt;br&gt;下面说说什么是Webpack？&lt;br&gt;Webpack在Github上的网址是：&lt;strong&gt;&lt;a href=&quot;https://github.com/webpack/webpack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/webpack/webpack&lt;/a&gt;&lt;/strong&gt;，Star星级数有1万5左右，以后肯定会更多。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/23/webpack.png&quot; alt=&quot;webpack&quot; title=&quot;webpack&quot;&gt;&lt;/p&gt;
&lt;p&gt;Webpack是德国开发者Tobias Koppers开发的模块加载器兼打包工具，在webpack中，它能把各种资源，例如js（含jsx）、coffee、样式（含less/sass）、图片等都作为模块来使用和处理。因此,Webpack当中js可以引用css,css中可以嵌入图片dataUrl。&lt;br&gt;对应各种不同文件类型的资源,Webpack有对应的模块loader，去进行编译和解析，&lt;br&gt;比如：CoffeeScript用的是coffee-loader，其他还有很多：&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://webpack.github.io/docs/list-of-loaders.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://webpack.github.io/docs/list-of-loaders.html&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;Vue用的是vue-loader，当然这是后话，在后面的章节我们再来说Vue+Webpack的具体实现。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;现在的前端已经不是以前的前端啦。以前的前端职责就是写写页面，改改样式，掉掉接口就OK，可如今随着公司规模越来越大、想做的业务越来越多，给前端带来的影响就是&lt;strong&gt;代码增大&lt;/strong&gt;，代码增大导致的直接影响就是&lt;strong&gt;性能优化
    
    </summary>
    
      <category term="架构" scheme="http://vmartaw.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="http://vmartaw.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="Webpack" scheme="http://vmartaw.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>初识Vue.js</title>
    <link href="http://vmartaw.com/2016/04/12/%E5%88%9D%E8%AF%86Vue-js/"/>
    <id>http://vmartaw.com/2016/04/12/初识Vue-js/</id>
    <published>2016-04-12T13:23:56.000Z</published>
    <updated>2016-04-24T13:11:31.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-传统前端架构&quot;&gt;&lt;a href=&quot;#1-传统前端架构&quot; class=&quot;headerlink&quot; title=&quot;1.传统前端架构&quot;&gt;&lt;/a&gt;1.传统前端架构&lt;/h3&gt;&lt;p&gt;如果按照以前传统前端的方式去架构的话，随着前端业务逻辑的增多，开发和维护会变得越来越困难，请看：&lt;br&gt;这是我去年做的华为项目Telkomsel Moovigo的目录，主要业务逻辑的代码有65个之多（每个包含page、fss、js），虽然页面、样式、逻辑代码确实是分开的，但是都是合在同一个文件里面。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/src.png&quot; alt=&quot;src&quot; title=&quot;src&quot;&gt;&lt;/p&gt;
&lt;p&gt;去年做的另一个华为项目Digicel也是同样：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/src2.png&quot; alt=&quot;src&quot; title=&quot;src&quot;&gt;&lt;/p&gt;
&lt;p&gt;做这些项目的团队，就我们前端人员每个团队都有10人左右，维护相对简单，一人搞定6~7个就OK，那么问题来了，假如1人来搞定所有呢？因为是外包，所以这样做没太大问题，只要控制了成本，在时间少的情况下做出来且赚钱就行。有些创业公司是自主研发做产品的，如果还是这样做，会出现什么问题呢？&lt;br&gt;请看，这是我现在负责重构的微信端产品代码目录：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/src3.png&quot; alt=&quot;src&quot; title=&quot;src&quot;&gt;&lt;br&gt;卧槽，这么简单，这么清爽，完全没问题呀？&lt;br&gt;这样分的好处确实有，html文件夹里面就是界面，css文件夹里面就是样式，js文件夹里面就是业务逻辑，“结构”看起来特别清晰。&lt;br&gt;但是当你打开后，近100个html、js、css文件都在各自的同一个文件夹里面，请看：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/src4.png&quot; alt=&quot;src&quot; title=&quot;src&quot;&gt;&lt;br&gt;这样写最主要的两个问题是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;难复用&lt;/li&gt;
&lt;li&gt;难维护&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能有些人不理解难复用的意思，复用怎么困难了？不是有现成的代码吗，复制粘贴重新创建一个改一改不就行了吗？这就是复用了呀！非也。&lt;br&gt;&lt;strong&gt;复用&lt;/strong&gt;的意思是&lt;strong&gt;在不改变现有代码的基础上，依赖以前写好的代码，进行二次开发&lt;/strong&gt;。在程序的世界，有句话一直很经典：“不要重复造轮子”。举个例，如果将每个页面看成是一辆汽车，一辆汽车由轮胎，中控，发动机等构成，且可以自由组装。同理，前端页面可以抽成很多组件，每个页面都是由这些组件组装而成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/components.png&quot; alt=&quot;components&quot; title=&quot;components&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;维护&lt;/strong&gt;的意思是&lt;strong&gt;需要在已上线的产品上新增业务；或者去改动有相同业务的页面&lt;/strong&gt;。不管是修改页面上的图片、样式、位置、业务、Bug、性能都算维护。如果重复造轮子的页面越来越多，维护改动的地方就越多，到最后会越来越麻烦，改动一处，动则n处。为了解决这些问题，最好的方式就是实现组件化.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-什么是MVVM框架？&quot;&gt;&lt;a href=&quot;#2-什么是MVVM框架？&quot; class=&quot;headerlink&quot; title=&quot;2.什么是MVVM框架？&quot;&gt;&lt;/a&gt;2.什么是MVVM框架？&lt;/h3&gt;&lt;p&gt;从三层架构说起，一个完整应用可以分成持久层、业务层、表现层三部分。&lt;br&gt;持久层即根据业务实现表及其映射关系，完善数据的CRUD功能；&lt;br&gt;业务层即根据业务实现对应的接口，调用持久层的东西为每个页面需要掉什么接口，返回什么数据进行封装；&lt;br&gt;表现层即根据业务实现相应的交互页面，调用业务层的东西实现数据的展现及CRUD。&lt;/p&gt;
&lt;p&gt;三层架构各自其责，其实最痛苦的莫过于表现层。因为持久层和业务层的&lt;strong&gt;最终实现在表现层&lt;/strong&gt;。&lt;br&gt;表现层是最重要的环节，做前端就是做交互，因为&lt;strong&gt;产品好坏的决定因素是用户的交互体验，当然其他两层也同样重要，因为表现层依赖于它们&lt;/strong&gt;。&lt;br&gt;表现层说简单点就是做页面，三个字说起来容易，实际却不易，因为做一个页面，要做它的交互、数据展现、性能优化，还要理解页面与页面之间的关系等。页面多了，重复做这些事情就很麻烦。&lt;/p&gt;
&lt;p&gt;为了更好的说明表现层，于是乎表现层出现了&lt;strong&gt;MVC架构,MVC是三个单词的首字母缩写，它们是Model（模型）、View（视图）和Controller（控制）&lt;/strong&gt;。&lt;br&gt;刚入行web前端的人员可能是这样理解的，HTML就是Model，CSS就是View，JS就是Controller。&lt;br&gt;因为他们想的：&lt;br&gt;模型层就是指结构，HTML语义化就是在说结构呢；&lt;br&gt;视图层就是指展现效果，CSS样式就是给HTML标签实现效果呢，&lt;br&gt;控制层就是指操作，JS就是操作HTML、CSS、调用接口。&lt;br&gt;如果这样理解就大错特错啦，这里有通过 JavaScript实现的一个基础MVC模型，请注意的是：&lt;strong&gt;MVC 不是一种技术，仅是一种理念&lt;/strong&gt;。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 模拟Model,View,Controller */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; M = &amp;#123;&amp;#125;, V = &amp;#123;&amp;#125;, C = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** Model 负责存放数据 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;M.data = &lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** View 负责将数据呈现到屏幕上 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;V.render = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;M&lt;/span&gt;) &lt;/span&gt;&amp;#123; alert(M.data); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** Controller 作为一个 M 和 V 的桥梁 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C.handleOnload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; V.render(M); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 在网页读取的时候呼叫Controller */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = C.handleOnload;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;又说多了，现在来讲什么是MVVM？&lt;br&gt;但是要讲清楚它之前，就必须讲MVC，因为根据它衍生出了MVP（这里不做讲解）和MVVM架构。&lt;br&gt;所以&lt;strong&gt;MVVM是MVC的衍生物，也是一种架构&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那么，MVC、MVVM两者的区别是什么呢？&lt;br&gt;依据一个简单的实例来讲解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/demo2.png&quot; alt=&quot;noData&quot; title=&quot;noData&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/demo.png&quot; alt=&quot;data&quot; title=&quot;data&quot;&gt;&lt;/p&gt;
&lt;p&gt;实现这个页面，一般思路是：&lt;br&gt;&lt;strong&gt;1.掉接口获取数据 2.在回调里使用获取的值渲染页面 3.添加事件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PageView=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        initialize:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el=$(&lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fetch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;record&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;//1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(record); &lt;span class=&quot;comment&quot;&gt;//2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.addEvent(); &lt;span class=&quot;comment&quot;&gt;//3.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PageView.initialize();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/demo3.png&quot; alt=&quot;code&quot; title=&quot;code&quot;&gt;&lt;/p&gt;
&lt;p&gt;在该代码中，模型（Model）就是从接口返回的record；视图（View）就是将获取的record设值到页面的render方法；控制（Controller）就是根据业务调取接口去获取数据的fetch方法。&lt;br&gt;执行的顺序是Model -&amp;gt; View -&amp;gt; Controller。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再举个稍复杂点例子，如图：&lt;br&gt;1.进入发起页面&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/2demo.png&quot; alt=&quot;demo&quot; title=&quot;demo&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2.添加数据&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/2demo2.png&quot; alt=&quot;demo&quot; title=&quot;demo&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3.跳转成功发布的页面&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/2demo3.png&quot; alt=&quot;demo&quot; title=&quot;demo&quot;&gt;&lt;/p&gt;
&lt;p&gt;当用户打开发起页面添加数据，点提交跳转到成功发布的页面，这一过程的顺序就是View -&amp;gt; Controller -&amp;gt; Model -&amp;gt;  View。用户看到发起的页面是View，点提交这一步骤是Controller、提交完成数据保存到数据库是Model，从发起页面跳转到成功发布的页面是View。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;submit: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (basis.pub.isDisable(el)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    basis.pub.disable(el); &lt;span class=&quot;comment&quot;&gt;//禁用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    basis.pub.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    basis.wait.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; postData = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      createKey: config.data.createKey,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      openID: config.params.openID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      title: $(&lt;span class=&quot;string&quot;&gt;&#39;.q-title&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).val(), &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      desc: $(&lt;span class=&quot;string&quot;&gt;&#39;.q-desc&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).val(), &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      endType: $(&lt;span class=&quot;string&quot;&gt;&#39;.endType&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).val(), &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      picTemplateID: $(&lt;span class=&quot;string&quot;&gt;&#39;.picTemplateID&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).val(), &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isOpenAnswer: $(&lt;span class=&quot;string&quot;&gt;&#39;.isOpenAnswer&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).val(), &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      itemimg: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      itemUrlDesc: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      questionID:config.params.questionID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isCopy:config.params.copy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;.q-img-options .has-img&#39;&lt;/span&gt;, $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.el).each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tag = $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        next = tag.next(&lt;span class=&quot;string&quot;&gt;&#39;.img-item-desc&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      postData.itemimg.push(tag.children(&lt;span class=&quot;string&quot;&gt;&#39;.itemimg&#39;&lt;/span&gt;).val()); &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (next.length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postData.itemUrlDesc.push(next.children(&lt;span class=&quot;string&quot;&gt;&#39;.itemUrlDesc&#39;&lt;/span&gt;).val().replace(&lt;span class=&quot;regexp&quot;&gt;/,/ig&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;，&#39;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postData.itemimg = postData.itemimg.join(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postData.itemUrlDesc = postData.itemUrlDesc.join(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的问题在于：&lt;br&gt;1.用户点击发布时，提交表单前需要挨个获取DOM的val值（标注e的），这样写的坏处就是&lt;strong&gt;重复去获取不同DOM，重复去设值&lt;/strong&gt;。&lt;br&gt;2.当用户提交后跳转到成功发布的页面，这样写的坏处就是&lt;strong&gt;跳转后需要重新加载该页面的所有资源（html、css、js、图片等），还需要调很多接口获取数据，等数据获取后又要重复去获取DOM，然后根据业务改变其样式，展示出最终的页面效果&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MVC流程图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/mvc.png&quot; alt=&quot;mvc&quot; title=&quot;mvc&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MVC特点：所有通信都是单向的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;同样的页面用MVVM来实现，该是怎样的呢？从简单的实例入手，这里我使用了Vue.js，代码如下：&lt;br&gt;HTML代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;top box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;left box-flex-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;vote_create_count&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; user.vote_create_count &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;累计发起&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;right box-flex-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;can_vote_count&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &amp;#123;&amp;#123; user.can_vote_count &amp;#125;&amp;#125;　&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;今日可发&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mid-name&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;nikename&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; user.nikename &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;user-head&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;head-image&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;background:url( &amp;#123;&amp;#123; user.headimage &amp;#125;&amp;#125; ) no-repeat;background-size:100%&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JavaScript代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vm = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    el:&lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        user: &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    created:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fetch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;record&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.user=record;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    methods:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fetch:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            basis.req.ajax(ops);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addEvent:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在该代码中，模型（Model）就是vm实例对象的data里的值，如：user；视图（View）就是上面整个Html代码，如：；ViewModel就是vm实例对象，它建立了模型和视图的桥梁。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/2demo5.png&quot; alt=&quot;demo&quot; title=&quot;demo&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过ViewModel能实现View和Model的实时更新，这样写的好处在于：&lt;br&gt;&lt;strong&gt;1.解决不需要重复去获取DOM、重复去操作DOM等事情，关注点能重点放在业务及页面组成上&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.方便组件化即复用&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3.接口返回的数据是什么，前端马上展示什么,你变我也变&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MVVM流程图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/12/mvvm.png&quot; alt=&quot;mvp&quot; title=&quot;mvvm&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MVVM特点：实现数据和视图的双向绑定&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-Vue-js的简单介绍&quot;&gt;&lt;a href=&quot;#3-Vue-js的简单介绍&quot; class=&quot;headerlink&quot; title=&quot;3.Vue.js的简单介绍&quot;&gt;&lt;/a&gt;3.Vue.js的简单介绍&lt;/h3&gt;&lt;p&gt;Vue.js的作者为&lt;strong&gt;&lt;a href=&quot;https://github.com/yyx990803&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Evan You&lt;/a&gt;&lt;/strong&gt;，任职于Google Creative Lab，虽然Vue是一个个人项目，但在发展前景上个人认为绝不输于Google的AngularJs，不要小看一个个人项目，比如一个人创建了backbone.js、underscore.js、coffeescript的前端大神&lt;strong&gt;&lt;a href=&quot;https://github.com/jashkenas&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jeremy Ashkenas&lt;/a&gt;&lt;/strong&gt;，我们在使用其框架的时候还不是风生水起。&lt;/p&gt;
&lt;p&gt;引用Vue的官网（&lt;strong&gt;&lt;a href=&quot;http://cn.vuejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cn.vuejs.org/&lt;/a&gt;&lt;/strong&gt;）所介绍的那样，其主要特点有两个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vue.js的目标是通过尽可能简单的API实现响应的数据绑定和组合的视图组件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-响应的数据绑定&quot;&gt;&lt;a href=&quot;#1-响应的数据绑定&quot; class=&quot;headerlink&quot; title=&quot;1.响应的数据绑定&quot;&gt;&lt;/a&gt;1.响应的数据绑定&lt;/h4&gt;&lt;p&gt;Vue.js的核心是一个响应的数据绑定系统，它让数据与DOM保持同步非常简单。&lt;br&gt;在使用jQuery/Zepto.js手工操作DOM时，我们的代码常常是命令式的、重复的与易错的。&lt;br&gt;Vue.js拥抱数据驱动的视图概念。&lt;br&gt;通俗地讲，它意味着我们在普通的HTML模板中使用特殊的语法将DOM“绑定”到底层数据。一旦创建了绑定，DOM将与数据保持同步。每当修改了数据，DOM便相应地更新。这样我们应用中的逻辑就都是直接修改数据，不必与DOM更新搅在一起。这让我们的代码更容易撰写、理解与维护。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/mvvm.png&quot; alt=&quot;mvvm&quot; title=&quot;mvvm&quot;&gt;&lt;/p&gt;
&lt;p&gt;实例1：&lt;br&gt;html代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 这是我们的 View --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Hello &amp;#123;&amp;#123; name &amp;#125;&amp;#125;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;js代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这是我们的 Model&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; exampleData = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;Vue.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建一个 Vue 实例或 &quot;ViewModel&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 它连接 View 与 Model&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; exampleVM = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  el: &lt;span class=&quot;string&quot;&gt;&#39;#example-1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: exampleData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看起来这跟单单渲染一个模板非常类似，但是Vue.js在背后做了大量工作。并且DOM会自动响应数据的变化。我们如何知道？打开你的浏览器的控制台，修改exampleData.name，你将看到上例相应地更新。&lt;/p&gt;
&lt;p&gt;总结一下就是使用Vue.js我们&lt;strong&gt;不需要撰写任何DOM操作代码&lt;/strong&gt;：被绑定增强的HTML模板是底层数据状态的声明式的映射，数据不过是存在了普通的JavaScript对象里。我们的视图完全由数据驱动。&lt;/p&gt;
&lt;p&gt;实例2：&lt;br&gt;html代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example-2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;greeting&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;js代码：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; exampleVM2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  el: &lt;span class=&quot;string&quot;&gt;&#39;#example-2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    greeting: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;br&gt;&lt;figure class=&quot;highlight erlang-repl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我们遇到新东西。你看到的 v-if 特性被称为&lt;strong&gt;指令&lt;/strong&gt;。指令带有前缀 v-，以指示它们是 Vue.js 提供的特殊特性。并且如你所想象的，它们会对绑定的目标元素添加响应式的特殊行为。继续在控制台设置 exampleVM2.greeting 为 false，你会发现 “Hello!” 消失了。&lt;/p&gt;
&lt;p&gt;第二个例子演示了我们不仅可以&lt;strong&gt;绑定DOM文本到数据，也可以绑定DOM结构到数据&lt;/strong&gt;。而且，Vue.js也提供一个强大的过渡效果系统，可以在Vue插入/删除元素时自动实现过渡效果。&lt;/p&gt;
&lt;p&gt;也有一些其它指令，每个都有特殊的功能。例如v-for指令用于显示数组元素，v-bind指令用于绑定HTML特性。更多内容可以去官网查看API。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;2-组合的视图组件&quot;&gt;&lt;a href=&quot;#2-组合的视图组件&quot; class=&quot;headerlink&quot; title=&quot;2.组合的视图组件&quot;&gt;&lt;/a&gt;2.组合的视图组件&lt;/h4&gt;&lt;p&gt;组件系统是Vue.js另一个重要概念，因为它提供了一种抽象，让我们可以用独立可复用的小组件来构建大型应用。如果我们考虑到这点，几乎任意类型的应用的界面都可以抽象为一个组件树：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/11/components.png&quot; alt=&quot;components&quot; title=&quot;components&quot;&gt;&lt;/p&gt;
&lt;p&gt;实际上，一个典型的用Vue.js构建的大型应用将形成一个组件树。后续将详述组件，不过这里有一个假想的例子，看看使用了组件的应用模板是什么样的：&lt;br&gt;html代码：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-sidebar&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-sidebar&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-content&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-content&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可能已经注意到Vue.js组件非常类似于自定义元素——它是Web组件规范的一部分。实际上Vue.js的组件语法参考了该规范。例如Vue组件实现了Slot API与is特性。但是，有几个关键的不同：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Web组件规范仍然未完成，并且没有浏览器实现。相比之下，Vue.js组件不需要任何补丁，并且在所有支持的浏览器（IE9及更高版本）之下表现一致。必要时，Vue.js组件也可以放在原生自定义元素之内。&lt;/li&gt;
&lt;li&gt;Vue.js组件提供了原生自定义元素所不具备的一些重要功能，比如组件间的数据流，自定义事件系统，以及动态的、带特效的组件替换。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组件系统是用Vue.js构建大型应用的基础。另外，Vue.js生态系统也提供了高级工具与多种支持库，它们和Vue.js一起构成了一个更加“框架”性的系统。&lt;/p&gt;
&lt;p&gt;最近还在继续深入学习Vue.js，最后想说：&lt;br&gt;个人认为前端的一些技术都是融会贯通的，学习一门语言或者框架本身并不是为了学习它的技术，最重要的是学习它的思维，只有思维层面得到了延伸，学习其他技术的时候才会得心应手。Vue带给我们的是前端一种解决问题的新的思维。&lt;/p&gt;
&lt;p&gt;一句话概括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现阶段前端人员最大的问题不是技术实现，而是思维转变。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-传统前端架构&quot;&gt;&lt;a href=&quot;#1-传统前端架构&quot; class=&quot;headerlink&quot; title=&quot;1.传统前端架构&quot;&gt;&lt;/a&gt;1.传统前端架构&lt;/h3&gt;&lt;p&gt;如果按照以前传统前端的方式去架构的话，随着前端业务逻辑的增多，开发和维护会变得越来越困难，请
    
    </summary>
    
      <category term="MVVM" scheme="http://vmartaw.com/categories/MVVM/"/>
    
    
      <category term="MVVM" scheme="http://vmartaw.com/tags/MVVM/"/>
    
      <category term="Vue" scheme="http://vmartaw.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>一个爸爸每月要赚多少钱，才能撑起一个家</title>
    <link href="http://vmartaw.com/2016/04/04/%E4%B8%80%E4%B8%AA%E7%88%B8%E7%88%B8%E6%AF%8F%E6%9C%88%E8%A6%81%E8%B5%9A%E5%A4%9A%E5%B0%91%E9%92%B1%EF%BC%8C%E6%89%8D%E8%83%BD%E6%92%91%E8%B5%B7%E4%B8%80%E4%B8%AA%E5%AE%B6/"/>
    <id>http://vmartaw.com/2016/04/04/一个爸爸每月要赚多少钱，才能撑起一个家/</id>
    <published>2016-04-04T05:41:12.000Z</published>
    <updated>2016-04-16T12:37:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-问题的由来&quot;&gt;&lt;a href=&quot;#1-问题的由来&quot; class=&quot;headerlink&quot; title=&quot;1.问题的由来&quot;&gt;&lt;/a&gt;1.问题的由来&lt;/h3&gt;&lt;p&gt;这个问题是今天我无意在知乎上面看到的，一个爸爸每月要赚多少钱，才能撑起一个家？&lt;br&gt;当我看到该问题时，已经被它的问题所吸引，因为我正处在该不该马上结婚生子的年龄。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-问题的分析&quot;&gt;&lt;a href=&quot;#2-问题的分析&quot; class=&quot;headerlink&quot; title=&quot;2.问题的分析&quot;&gt;&lt;/a&gt;2.问题的分析&lt;/h3&gt;&lt;p&gt;一个爸爸每月要赚多少钱，才能撑起一个家？&lt;br&gt;这个问题其实很难回答。&lt;strong&gt;理由很简单，马斯洛需求理论。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就拿我所遇到的经历来说事，我的老家在很偏僻的山里，我的老爸就是从那里出来到二线城市打拼赚钱，然后在二线城市买了房安了家。直接上图：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/img/home/home3.jpeg&quot; alt=&quot;老家&quot; title=&quot;老家&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/04/home.png&quot; alt=&quot;新家&quot; title=&quot;新家&quot;&gt;&lt;/p&gt;
&lt;p&gt;这种质的飞越不是简简单单能通过一两句话就能说清楚的，想想当时那个年代，我爸独身一人来到成都，又要生活（衣食住行），又要供我读书，又要租房住，又要买房。&lt;br&gt;从无到有，从没房到有房，一步一步走过的艰辛，只有真正经历过的老爸才能懂，没经历过这些的我来说懂我爸了，我爸吃得苦比我吃的盐还多。&lt;/p&gt;
&lt;p&gt;以前不懂事的我还说我老爸咋那么吝啬，一块钱都不给我。可是现在的我完全理解了老爸，因为在他勤俭节约的背后，隐藏着改变生活的强大力量和勇气。&lt;/p&gt;
&lt;p&gt;我很敬佩我的老爸，因为是他改变了作为普通农民的心酸和辛苦。&lt;br&gt;如果没有老爸强烈追求更好生活的毅力和决心，没有老爸当时极度地勤俭节约，没有老爸想改变命运的坚持，就没有我们今天。&lt;/p&gt;
&lt;p&gt;扯的有点远哈，那么想想我爸在当时那个情况下，一个月挣了多少钱，才有了现在的生活呢？&lt;br&gt;上世纪90年代，我算了下我爸在那8年时间里总共要存20万才能实现，在当时肉价才5元的年代，存20万和挣20万又是两种不同的概念，挣的意思是你拥有的收入，存的意思是你拥有的净收入。我爸要在8年里存20万，可以算下一个月至少要存2000元才能实现。&lt;br&gt;说到这，你们肯定会问，我爸是做什么的，当时一个月2000元确实很困难，怎么能挣那么多？我想说上世纪90年代是做生意的好时代，我爸因为缘分，接触到了做生意，因为我爸是一位理发师。&lt;/p&gt;
&lt;p&gt;当时洗剪吹一共加起来才5元，一个月要想存2000元，至少在一个月内要给400人理发才能实现。一个月内怎么可能一直会有400人给你机会理发呢，而且还要生活，还要除去成本。&lt;/p&gt;
&lt;p&gt;当你月挣10万时，哪怕存8万也不打紧；&lt;br&gt;但是当你月挣2100时，你就可能要存2000甚至2050，你能做得到吗？&lt;br&gt;真的不是人人能够做得到的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在我爸看来，能在大城市里有套房，能将户口从农村迁到城市，就能“撑起一个家”。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二个例子我想说下我的女友一家五口人，他们也是农村的，不要瞧不起农民，尔等凡人没资格去评论农民怎么怎么的，难道你的爷爷、曾爷爷、曾曾爷爷不是famer吗？直接上图：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/04/family.jpeg&quot; alt=&quot;家庭&quot; title=&quot;家庭&quot;&gt;&lt;/p&gt;
&lt;p&gt;为什么我想说下我的另一个老爸，因为他也很伟大。该从哪儿说起呢，就从农村里的生活说起吧。在农村有忙不完的农活，每天早上天还没亮就起来生火做饭，日出而作，日落而息。除了做农活，还要去厂里打工补贴家用。我的老爸马上已经年过半百，全靠着自己的双手，勤奋地务农，打工，抚养两个小孩茁壮成长，一个我哥，一个我女友。当时在厂里上班不幸手指被机器砸伤，康复后又继续上班，我知道什么叫拿命换钱。&lt;br&gt;我的老爸也是极度地勤俭节约，每次周末回家大鱼大肉，什么好吃的都给我们，平时就是简单的粗茶淡饭…每次周末回家，我们都不忘买水果…水果很少买，衣服很少买，就连皮带，那都是几年前的皮带…&lt;/p&gt;
&lt;p&gt;当你月挣10万时，哪怕存8万也不打紧；&lt;br&gt;但是当你月挣2100时，你就可能要存2000甚至2050，你能做得到吗？&lt;br&gt;真的不是人人能够做得到的。我的两个爸爸都做到了！&lt;/p&gt;
&lt;p&gt;有家庭责任感并努力工作的男人都是好样的，不管挣多少钱，你都撑得起这个家。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在我爸看来，能够养活一家人，在花钱的地方能拿得出钱，就能“撑起一个家”。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第三个例子我想说下我现在的公司老板Boss陈哥，75年的，虽然已经结婚，但是至今还没有要Baby，还在和公司一起共奋进，为自己喜爱的事业努力着，坚持着。直接上图：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/04/chuang.jpg&quot; alt=&quot;兴园创意园&quot; title=&quot;兴园创意园&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/04/chuang2.jpg&quot; alt=&quot;上班环境&quot; title=&quot;上班环境&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/04/04/chuang3.jpg&quot; alt=&quot;上班环境&quot; title=&quot;上班环境&quot;&gt;&lt;/p&gt;
&lt;p&gt;可能大家都在想一个问题，为什么年过40还不准备要小孩？我也问过我们的Boss，他给的回答是：“还不是时候”。这话可能会让大家觉得困惑，为什么还不是时候？难道养一个小孩压力就那么大，撑起一个家经济上就如此困难吗？非也。&lt;br&gt;&lt;strong&gt;在陈哥看来，能有自己成功的事业，有持续的现金流，就能“撑起一个家”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总的一句话：&lt;br&gt;&lt;strong&gt;对怎样才算“撑起一个家”这一需求的理解决定了每月该挣多少钱，重点是该存多少钱。梦想一定要有，万一实现了呢！&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-我对问题的解答&quot;&gt;&lt;a href=&quot;#3-我对问题的解答&quot; class=&quot;headerlink&quot; title=&quot;3.我对问题的解答&quot;&gt;&lt;/a&gt;3.我对问题的解答&lt;/h3&gt;&lt;p&gt;你每月要赚多少钱，才能撑起一个家？&lt;br&gt;对我来说：&lt;br&gt;撑起一个家如果在“养家糊口”的问题上来说对我没压力；&lt;br&gt;撑起一个家如果在“买房育儿”的问题上来说对我没太大压力；&lt;br&gt;撑起一个家如果在“自由”的问题上来说对我压力山大啦。&lt;/p&gt;
&lt;p&gt;你希望每月赚多少钱？&lt;br&gt;我不希望每月赚多少钱，而是希望在十八年内能存多少钱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我最大的梦想是自由，40岁退休&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我对生活品质没有特别高的要求，在不上班的情况下，够养活一家人，做自己喜欢的事情、做自己认为重要的事情就行，因为人的欲望是无止境的，挣再多的钱也有花完的一天。&lt;/p&gt;
&lt;p&gt;在我眼里最重要的事情是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有时间陪伴我的家人 &lt;/li&gt;
&lt;li&gt;有时间教育我的孩子 &lt;/li&gt;
&lt;li&gt;有时间和金钱照顾我和我家人的健康&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在我眼里自己喜欢的事情是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有时间和金钱与老婆全国一起爬山、一起旅行、全球也要&lt;/li&gt;
&lt;li&gt;有时间写回忆录，在我有生之年将自己所有的东西永存于人世&lt;/li&gt;
&lt;li&gt;有金钱支撑我广泛的兴趣&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;做这些事情需要花钱，这就是为什么钱对我如此重要的原因，但是我不想花费一生为钱工作。因为花费一生为钱工作是愚蠢的，要相信生活本身比钱更重要，但是钱对于维持生计也是重要的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;总的一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我现阶段要做的就是努力工作，努力存钱，实现自己追求自由的最终梦想！&lt;br&gt;梦想一定要有，万一实现了呢！&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-问题的由来&quot;&gt;&lt;a href=&quot;#1-问题的由来&quot; class=&quot;headerlink&quot; title=&quot;1.问题的由来&quot;&gt;&lt;/a&gt;1.问题的由来&lt;/h3&gt;&lt;p&gt;这个问题是今天我无意在知乎上面看到的，一个爸爸每月要赚多少钱，才能撑起一个家？&lt;br&gt;当我看到该问题
    
    </summary>
    
      <category term="Life" scheme="http://vmartaw.com/categories/Life/"/>
    
    
      <category term="Life" scheme="http://vmartaw.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>SPA-单页Web应用</title>
    <link href="http://vmartaw.com/2016/03/27/SPA-%E5%8D%95%E9%A1%B5Web%E5%BA%94%E7%94%A8/"/>
    <id>http://vmartaw.com/2016/03/27/SPA-单页Web应用/</id>
    <published>2016-03-27T12:48:59.000Z</published>
    <updated>2016-04-17T10:19:18.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-什么是SPA？&quot;&gt;&lt;a href=&quot;#1-什么是SPA？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是SPA？&quot;&gt;&lt;/a&gt;1.什么是SPA？&lt;/h3&gt;&lt;p&gt;SPA是英文的缩写，全称是Single Page Application，即单页Web应用。&lt;/p&gt;
&lt;p&gt;SPA：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.SPA是一种介绍特殊web应用的理念 （是什么）&lt;br&gt;2.SPA可以提供最贴近于Native应用的用户体验 （干什么）&lt;br&gt;3.SPA可以用在：（在哪用）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a.跨平台的浏览器内核（webkit）的页面&lt;br&gt;（如：微信页面、Native App页面（手机QQ里面的QQ空间））&lt;br&gt;b.用web技术开发类似Native应用的App&lt;br&gt;（如：Telkomsel Moovigo，馋口街，爱班级）&lt;br&gt;c.机顶盒里的页面（拥有webkit内核）&lt;br&gt;（如：华为Digice项目）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-详细介绍SPA&quot;&gt;&lt;a href=&quot;#2-详细介绍SPA&quot; class=&quot;headerlink&quot; title=&quot;2.详细介绍SPA&quot;&gt;&lt;/a&gt;2.详细介绍SPA&lt;/h3&gt;&lt;p&gt;详细说明SPA到底是个什么东西，看过几个前端研发写的博客，他们都有不同的理解：&lt;br&gt;子凡：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单页Web应用是一种特殊的Web应用。它将所有的活动局限于一个Web页面中，仅在该Web页面初始化时加载相应的HTML、JavaScript和CSS。一旦页面加载完成了，SPA不会因为用户的操作而进行页面的重新加载或跳转。&lt;br&gt;取而代之的是利用JavaScript动态的变换HTML的内容，从而实现UI与用户的交互。由于避免了页面的重新加载，SPA可以提供较为流畅的用户体验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;民工精髓：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓单页应用，指的是在一个页面上集成多种功能，甚至整个系统就只有一个页面，所有的业务功能都是它的子模块，通过特定的方式挂接到主界面上。它是AJAX技术的进一步升华，把AJAX的无刷新机制发挥到极致，因此能造就与桌面程序媲美的流畅用户体验。&lt;br&gt;其实单页应用我们并不陌生，很多人写过ExtJS的项目，用它实现的系统，很天然的就已经是单页的了，也有人用jQuery或者其他框架实现过类似的东西。用各种JS框架，甚至不用框架，都是可以实现单页应用的，它只是一种理念。有些框架适用于开发这种系统，如果使用它们，可以得到很多便利。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;伯乐：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单页面应用是仅包含单个网页的应用，目的是为了提供类似于本地应用的流畅用户体验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大熊君：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓的单页面结构就是指多个页面间切换时，不刷新当前整个页面，更新页面展示数据，并且相应地改变地址栏中的url，以使用户可以分享这个url。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再说说我的理解：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单页应用就是通过一个主入口获取应用大部分资源，使用路由机制实现页面跳转的应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-SPA的实际例子&quot;&gt;&lt;a href=&quot;#3-SPA的实际例子&quot; class=&quot;headerlink&quot; title=&quot;3.SPA的实际例子&quot;&gt;&lt;/a&gt;3.SPA的实际例子&lt;/h3&gt;&lt;p&gt;因为手机的浏览器内核是个残废，所以单页Web应用主要用在移动端。但不是说单页Web应用在PC端就不可用使用，PC的浏览器内核健壮性强得没话说，如果再加上SPA技术的话，页面交互那更是棒棒的！&lt;br&gt;使用SPA的网站有：&lt;br&gt;CODING：&lt;strong&gt;&lt;a href=&quot;https://coding.net/pp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://coding.net/pp&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;Teambition：&lt;strong&gt;&lt;a href=&quot;https://bbs.teambition.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bbs.teambition.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;阿里云控制台：&lt;strong&gt;&lt;a href=&quot;https://home.console.aliyun.com/#/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://home.console.aliyun.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;百度云：&lt;strong&gt;&lt;a href=&quot;http://yun.baidu.com/#from=share_yun_logo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://yun.baidu.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;QQ空间：&lt;strong&gt;&lt;a href=&quot;https://mobile.qzone.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mobile.qzone.qq.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;YoloSong：&lt;strong&gt;&lt;a href=&quot;http://music.uodoo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://music.uodoo.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;Huntnews：&lt;strong&gt;&lt;a href=&quot;http://huntnews.in/p/index?uc_param_str=dnfrpfbivesscpgimibtbmntnisieijblauputoggdnw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://huntnews.in&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用SPA的手机App、机顶盒TV App有：&lt;br&gt;爱班级、馋口街、Telkomsel Moovigo、Digice TV&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-SPA的优缺点&quot;&gt;&lt;a href=&quot;#4-SPA的优缺点&quot; class=&quot;headerlink&quot; title=&quot;4.SPA的优缺点&quot;&gt;&lt;/a&gt;4.SPA的优缺点&lt;/h3&gt;&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;良好的交互体验&lt;br&gt;前端进行的是局部渲染，避免了不必要的跳转和重复渲染。&lt;/li&gt;
&lt;li&gt;前后端职责分离，架构清晰&lt;br&gt;前端进行交互逻辑，后端负责数据处理。&lt;br&gt;前后端可以单独开发、单独测试。&lt;/li&gt;
&lt;li&gt;减轻服务器压力&lt;br&gt;服务器只用出数据就可以，不用管展示逻辑和页面合成。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初次加载耗时多&lt;br&gt;为实现单页Web应用功能及显示效果，需要在加载页面的时候将JavaScript、CSS统一加载，部分页面可以在需要的时候加载。&lt;/li&gt;
&lt;li&gt;前进后退路由管理&lt;br&gt;由于单页Web应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理。&lt;/li&gt;
&lt;li&gt;页面模板化和区分代码逻辑&lt;br&gt;由于单页Web应用在一个页面，当单页Web应用规模增大，页面会越来越多，我们需要将页面模板化；业务会越来越多，我们需要根据业务区分代码逻辑。&lt;/li&gt;
&lt;li&gt;SEO难度较大&lt;br&gt;单页Web应用因为只有一个页面主入口，所以很难被搜索引擎收录。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实上面说到的前三个问题都已经得到了解决，唯独最后一个还未找到解决方案。&lt;br&gt;因为单页Web应用最根本的缺陷就是不利于SEO，因为界面的绝大部分都是动态生成的，所以搜索引擎很不容易索引它。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-解决SPA的缺点&quot;&gt;&lt;a href=&quot;#5-解决SPA的缺点&quot; class=&quot;headerlink&quot; title=&quot;5.解决SPA的缺点&quot;&gt;&lt;/a&gt;5.解决SPA的缺点&lt;/h3&gt;&lt;p&gt;a.初次加载耗时多&lt;br&gt;可以使用模块化框架，按需加载资源。&lt;br&gt;如：使用SeaJS、RequireJS&lt;/p&gt;
&lt;p&gt;b.前进后退路由管理&lt;br&gt;可以使用原生H5 History API。&lt;br&gt;如：window.history.replaceState和window.history.pushState&lt;/p&gt;
&lt;p&gt;可以使用支持路由管理的集合框架。&lt;/p&gt;
&lt;p&gt;补充：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;深入说明就是如果用“location.href”实现页面来回跳转会出现资源重复获取、文件重新解析、javascript重新执行、css重新渲染等问题。&lt;br&gt;使用路由机制则不会出现该问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;c.页面模板化和区分代码逻辑&lt;br&gt;需要引入MV*框架，它们的基本思路都是在JS层创建模块分层和通信机制。&lt;br&gt;这类框架包括Ember.js，Backbone.js，Angular.js，Avalon.js、Vue.js等。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-完整SPA项目&quot;&gt;&lt;a href=&quot;#6-完整SPA项目&quot; class=&quot;headerlink&quot; title=&quot;6.完整SPA项目&quot;&gt;&lt;/a&gt;6.完整SPA项目&lt;/h3&gt;&lt;p&gt;张鑫旭写的&lt;strong&gt;&lt;a href=&quot;https://github.com/zhangxinxu/mobilebone/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mobilebone&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;自述：mobile移动端，PC桌面端页面无刷新过场JS骨架，简单、专注！&lt;/p&gt;
&lt;p&gt;赵达写的&lt;strong&gt;&lt;a href=&quot;https://github.com/zhaoda/spa/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spa&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;自述：SPA是为构建WebApp设计的路由控制和视图转换框架。&lt;/p&gt;
&lt;p&gt;dolymood的&lt;strong&gt;&lt;a href=&quot;https://github.com/mobile-router/mobile-router.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mobile-router&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;自述：轻量级web端单页面骨架。&lt;/p&gt;
&lt;p&gt;onlyurei的&lt;strong&gt;&lt;a href=&quot;https://github.com/onlyurei/knockout-spa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;knockout-spa&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;自述：用Knockout做个的SPA。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;7-SPA总结&quot;&gt;&lt;a href=&quot;#7-SPA总结&quot; class=&quot;headerlink&quot; title=&quot;7.SPA总结&quot;&gt;&lt;/a&gt;7.SPA总结&lt;/h3&gt;&lt;p&gt;最后总结下单页Web应用，SPA的出现最主要的目的是&lt;strong&gt;提升交互体验&lt;/strong&gt;。&lt;br&gt;难道使用了SPA就一定能提升交互体验吗？&lt;br&gt;带着这个问题，我对SPA的讲解就结束啦，谢谢！&lt;/p&gt;
&lt;p&gt;附上参考资源：&lt;br&gt;资源一：&lt;strong&gt;&lt;a href=&quot;http://www.cnblogs.com/axl234/p/5219840.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;单页面应用SPA架构&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;资源二：&lt;strong&gt;&lt;a href=&quot;https://github.com/xufei/blog/issues/5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;构建单页Web应用&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-什么是SPA？&quot;&gt;&lt;a href=&quot;#1-什么是SPA？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是SPA？&quot;&gt;&lt;/a&gt;1.什么是SPA？&lt;/h3&gt;&lt;p&gt;SPA是英文的缩写，全称是Single Page Application，即单页We
    
    </summary>
    
      <category term="架构" scheme="http://vmartaw.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="http://vmartaw.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>上海初印象</title>
    <link href="http://vmartaw.com/2016/03/14/%E4%B8%8A%E6%B5%B7%E5%88%9D%E5%8D%B0%E8%B1%A1/"/>
    <id>http://vmartaw.com/2016/03/14/上海初印象/</id>
    <published>2016-03-14T14:40:59.000Z</published>
    <updated>2016-03-19T04:05:03.000Z</updated>
    
    <content type="html">&lt;p&gt;今天是3.14星期一，该写点东西啦，该写点什么好呢？写些这几天到上海后的一些直观感受好了。&lt;br&gt;我最想说的一句话就是：老（小）子（弟）要（真）买（的）套（长）上（见）海（识）房（啦）！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-房价极高&quot;&gt;&lt;a href=&quot;#1-房价极高&quot; class=&quot;headerlink&quot; title=&quot;1.房价极高&quot;&gt;&lt;/a&gt;1.房价极高&lt;/h3&gt;&lt;p&gt;下面的图片是我昨晚在一家卖房店铺拍的：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/14/zhu.jpg&quot; alt=&quot;&amp;quot;卖房&amp;quot;&quot; title=&quot;卖房&quot;&gt;&lt;/p&gt;
&lt;p&gt;大华侨，&lt;strong&gt;68.3㎡&lt;/strong&gt;，售价&lt;strong&gt;490万&lt;/strong&gt;，要&lt;strong&gt;7万多1平米&lt;/strong&gt;啊！太贵啦！&lt;br&gt;看了售房信息，大致了解上海徐汇区这边的房价在5-7万左右，就打平均是&lt;strong&gt;6万/平米&lt;/strong&gt;来算，如果工资只有&lt;strong&gt;12K&lt;/strong&gt;，还不吃不喝，每月才买得起&lt;strong&gt;每平米的五分之一&lt;/strong&gt;，太牛批了，相当于&lt;strong&gt;5个月不吃不喝才买得起1平米&lt;/strong&gt;，而且面试过的公司也不会因房价高或租房贵而为工资能高点买单，这就更牛批了。。。还是成都好啊。。。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-住房太小&quot;&gt;&lt;a href=&quot;#2-住房太小&quot; class=&quot;headerlink&quot; title=&quot;2.住房太小&quot;&gt;&lt;/a&gt;2.住房太小&lt;/h3&gt;&lt;p&gt;因为房价极高的原因，导致的另一个结果就是每平米都显得十分珍贵，所以住房普遍都小啦。麻雀虽小，但五脏俱全。&lt;br&gt;比如我现在租的房子，是个套二的，两个单间，一对情侣一间，我和室友一间，加起来也就44㎡左右，但是该有的东西都有。从外地刚过来的朋友肯定会不习惯，因为空间确实太小了，适应一段时间就好了。&lt;br&gt;请看：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/a.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/b.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/c.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/d.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/e.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/f.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/g.jpg&quot; alt=&quot;room&quot; title=&quot;room&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-外地人多&quot;&gt;&lt;a href=&quot;#3-外地人多&quot; class=&quot;headerlink&quot; title=&quot;3.外地人多&quot;&gt;&lt;/a&gt;3.外地人多&lt;/h3&gt;&lt;p&gt;从我下飞机到租的房屋住再到坐地铁找工作，我所接触到的大部分都不是上海人，如：我的室友是河南的，五金老板是山东的，卖饼阿姨是安徽的…但是挨着我们住的隔壁是位老奶奶及其儿子儿媳，他们是本地上海人。&lt;br&gt;于是乎我自己评估了下上海本地人与外地人占的比例应该是4:6或3：7，外地人要占到6~7成。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/dong.jpg&quot; alt=&quot;东方明珠塔&quot; title=&quot;东方明珠塔&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/tower.jpg&quot; alt=&quot;tower&quot; title=&quot;tower&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/soft3.jpg&quot; alt=&quot;unity&quot; title=&quot;unity&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-竞争激烈&quot;&gt;&lt;a href=&quot;#4-竞争激烈&quot; class=&quot;headerlink&quot; title=&quot;4.竞争激烈&quot;&gt;&lt;/a&gt;4.竞争激烈&lt;/h3&gt;&lt;p&gt;为什么这么说呢？因为我最近都在面试，因此坐地铁的时间占了每天的大部分时间。不管什么时间段，每次进入地铁，都是人山人海的，坐地铁从来就没坐到过座位，而且还经常看到拎着大包小包的外地人在乘地铁。我每次面试都是错过上班高峰期去坐的地铁，如果是正常上下班的时间坐地铁的话，肯定人挤人，挤死人。想想外地人那么多，房租又那么高，生活压力又那么大，可想而知竞争该有多激烈呀！&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/p1.jpg&quot; alt=&quot;地铁&quot; title=&quot;地铁&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/p2.jpg&quot; alt=&quot;地铁&quot; title=&quot;地铁&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-地大路多&quot;&gt;&lt;a href=&quot;#5-地大路多&quot; class=&quot;headerlink&quot; title=&quot;5.地大路多&quot;&gt;&lt;/a&gt;5.地大路多&lt;/h3&gt;&lt;p&gt;来到上海后，瞬间觉得成都小多啦，因为上海地铁总共有&lt;strong&gt;16号线&lt;/strong&gt;！！！&lt;br&gt;请看：（可常按住图片，拷贝下载到手机看，这样看清楚点啦）&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/xianluda.gif&quot; alt=&quot;地铁&quot; title=&quot;地铁&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有就是我每次面试从地铁出口出来，还得走好长一段时间才能到面试的公司，有一次我在浦东软件园面试，地点在郭守敬路498号，然后我为了找到郭守敬路就一直走，结果找到后才发现，从居里路向右一直走到底就到了，明明5分钟的路程，我却走了整整30分钟。&lt;br&gt;（PS：街道命名太牛逼啦，好多伟人，李时珍、牛顿、居里夫人）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/road.jpg&quot; alt=&quot;road&quot; title=&quot;road&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/road2.jpg&quot; alt=&quot;road&quot; title=&quot;road&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/soft1.jpg&quot; alt=&quot;soft&quot; title=&quot;soft&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/soft2.jpg&quot; alt=&quot;soft&quot; title=&quot;soft&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-孤独感&quot;&gt;&lt;a href=&quot;#6-孤独感&quot; class=&quot;headerlink&quot; title=&quot;6.孤独感&quot;&gt;&lt;/a&gt;6.孤独感&lt;/h3&gt;&lt;p&gt;一个人来上海打拼是非常不易的，人生地不熟的，身边没有家人、亲戚可以依靠，只能靠自己。当然这个对于我来说并不是最痛苦的，我认为最痛苦的事情莫过于不能说四川话！&lt;br&gt;对于土生土长的四川人，由于环境因素不能说四川话（主要是给别人讲了也听不懂），只能说普通话，久而久之一种孤独感迎面扑来，好孤单呀！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/single.jpg&quot; alt=&quot;single&quot; title=&quot;single&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/15/house.jpg&quot; alt=&quot;house&quot; title=&quot;house&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后用一句话来概括我对上海的初印象：&lt;br&gt;上海是一个适合年轻人奋斗、追逐梦想、生活节奏快的城市；&lt;br&gt;成都是一个适合老年人养老、清闲安逸、生活节奏慢的城市。&lt;/p&gt;
&lt;p&gt;我愿接受命运的挑战，勇往直前，因为未来正等着我去改变，Fighting！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天是3.14星期一，该写点东西啦，该写点什么好呢？写些这几天到上海后的一些直观感受好了。&lt;br&gt;我最想说的一句话就是：老（小）子（弟）要（真）买（的）套（长）上（见）海（识）房（啦）！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-房价极高&quot;&gt;&lt;a href=&quot;#1-房价极高&quot; 
    
    </summary>
    
      <category term="Life" scheme="http://vmartaw.com/categories/Life/"/>
    
    
      <category term="Life" scheme="http://vmartaw.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>驾考宝典之经验分享</title>
    <link href="http://vmartaw.com/2016/03/02/%E9%A9%BE%E8%80%83%E5%AE%9D%E5%85%B8%E4%B9%8B%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    <id>http://vmartaw.com/2016/03/02/驾考宝典之经验分享/</id>
    <published>2016-03-02T11:44:56.000Z</published>
    <updated>2016-03-02T12:37:23.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在学驾校，希望自己总结的东西对将要考取驾校的人来说有指导性建议，希望大家和我都能一次性过关，早日拿到驾驶证。下面会将自己练车时的经验与大家分享，在这里着重讲解科目二、科目三的考试项目，因为科目一和科目四都是理论，所以考过它俩就两个字：多背。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;科目二&quot;&gt;&lt;a href=&quot;#科目二&quot; class=&quot;headerlink&quot; title=&quot;科目二&quot;&gt;&lt;/a&gt;科目二&lt;/h3&gt;&lt;p&gt;下面是成都毛家湾考场的科目二示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2.png&quot; alt=&quot;科目二&quot; title=&quot;科目二&quot;&gt;&lt;/p&gt;
&lt;p&gt;科目二考试共6个项目，一次性参加考试。&lt;br&gt;科目二考试顺序为：起点-单边桥-坡道定点停车-曲线行驶-直角转弯-侧方位停车-倒车入库-回到终点&lt;br&gt;每场两次机会，不用排队，直接开到起点重考。满分100分，80分及以上合格。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;起点&quot;&gt;&lt;a href=&quot;#起点&quot; class=&quot;headerlink&quot; title=&quot;起点&quot;&gt;&lt;/a&gt;起点&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不系安全带，扣100分；&lt;/li&gt;
&lt;li&gt;未关好车门，扣100分；&lt;/li&gt;
&lt;li&gt;不打左转向灯，扣10分；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/start.jpg&quot; alt=&quot;起点&quot; title=&quot;起点&quot;&gt;&lt;/p&gt;
&lt;p&gt;考前准备：&lt;br&gt;这项就是做好考试前的准备，然后向考官示意已经准备好了，因此在此之前需要：&lt;br&gt;1.调整好自己的座位，座位低了可以带个坐垫&lt;br&gt;2.调整好左右视镜的位置，左视镜可以看到左轮，右视镜可以看到右边车身1/3&lt;/p&gt;
&lt;p&gt;操作步骤：&lt;br&gt;当上车后，开始调整自己的座位，&lt;strong&gt;关上车门&lt;/strong&gt;，如果视镜位置不对则需要调整（一般不会出现该情况，毕竟有那么多考生考试），然后将&lt;strong&gt;安全带系上&lt;/strong&gt;，左脚踩离合，右脚踩刹车，接着向考官示意准备好可以开始考试了。&lt;br&gt;经考官回应后，开始&lt;strong&gt;打左转向灯&lt;/strong&gt;，放手刹，挂1档，松离合起步。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;单边桥（★★★★☆）&quot;&gt;&lt;a href=&quot;#单边桥（★★★★☆）&quot; class=&quot;headerlink&quot; title=&quot;单边桥（★★★★☆）&quot;&gt;&lt;/a&gt;单边桥（★★★★☆）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中途停车，扣100分；&lt;/li&gt;
&lt;li&gt;有一轮未上桥，每次扣10分；&lt;/li&gt;
&lt;li&gt;已经上桥，有一车轮掉下桥，每次扣10分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/dbq.jpg&quot; alt=&quot;单边桥&quot; title=&quot;单边桥&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/dbq3.jpg&quot; alt=&quot;单边桥&quot; title=&quot;单边桥&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作步骤：&lt;br&gt;听到“通过单边桥”指令后，双眼注视车盖左边&lt;strong&gt;&lt;em&gt;最凹处正对左桥左边缘&lt;/em&gt;&lt;/strong&gt;时上桥慢行，当感觉前轮下桥时，迅速&lt;strong&gt;向右打半圈&lt;/strong&gt;，车身向右转弯后，&lt;strong&gt;&lt;em&gt;最凹处正对右桥左边缘&lt;/em&gt;&lt;/strong&gt;时，迅速&lt;strong&gt;向左打一圈半&lt;/strong&gt;，车身摆正后，当&lt;strong&gt;&lt;em&gt;雨刷最高处的边缘正对右桥&lt;/em&gt;&lt;/strong&gt;时，迅速&lt;strong&gt;向右打一圈回&lt;/strong&gt;正上桥慢行。当所有步骤操作完后，在上桥后可以通过右视镜观看右轮，如果车身不正，可&lt;strong&gt;向左打1/4圈后回正&lt;/strong&gt;来修正车身。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/dbq2.jpg&quot; alt=&quot;最凹处&quot; title=&quot;最凹处&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;坡道定点停车（★★★★☆）&quot;&gt;&lt;a href=&quot;#坡道定点停车（★★★★☆）&quot; class=&quot;headerlink&quot; title=&quot;坡道定点停车（★★★★☆）&quot;&gt;&lt;/a&gt;坡道定点停车（★★★★☆）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未停车，扣100分；&lt;/li&gt;
&lt;li&gt;行驶时压道路边缘线，扣100分；&lt;/li&gt;
&lt;li&gt;停车后前保险杠未到停车线，扣100分； &lt;/li&gt;
&lt;li&gt;停车后后溜大于30厘米，扣100分； &lt;/li&gt;
&lt;li&gt;&lt;p&gt;起步时间超30秒，扣100分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;停车后右前轮距边缘线30厘米以上，扣10分 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;停车后前保险杠未到停车线，扣10分； &lt;/li&gt;
&lt;li&gt;停车后后溜小于30厘米，扣10分；&lt;/li&gt;
&lt;li&gt;起步未开左转向灯，扣10分；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/dbq4.jpg&quot; alt=&quot;坡道定点停车&quot; title=&quot;坡道定点停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/dbq5.jpg&quot; alt=&quot;坡道定点停车&quot; title=&quot;坡道定点停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作步骤：&lt;br&gt;听到“坡道定点停车”指令后，轻踩离合起步，上桥时建议离右边缘线远点，当上桥期间&lt;strong&gt;向右打1/4圈&lt;/strong&gt;慢慢靠近右边缘线，当&lt;strong&gt;&lt;em&gt;雨刷上的锚点正对右边缘线左边&lt;/em&gt;&lt;/strong&gt;时，&lt;strong&gt;向左打1/4圈&lt;/strong&gt;，车身摆正后继续轻踩离合缓缓控制车上桥，当&lt;strong&gt;&lt;em&gt;右边Logo正对停车杆&lt;/em&gt;&lt;/strong&gt;时，&lt;strong&gt;踩脚刹&lt;/strong&gt;停车。&lt;br&gt;停车10s，报完成绩后，准备坡道起步，首先&lt;strong&gt;打左转向灯&lt;/strong&gt;，然后&lt;strong&gt;*轻抬离合&lt;/strong&gt;，当感觉车身有较强的抖动感时，&lt;strong&gt;轻抬脚刹&lt;/strong&gt;下坡。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/pdqb.jpg&quot; alt=&quot;坡道定点停车&quot; title=&quot;坡道定点停车&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;曲线行驶（★★★☆☆）&quot;&gt;&lt;a href=&quot;#曲线行驶（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;曲线行驶（★★★☆☆）&quot;&gt;&lt;/a&gt;曲线行驶（★★★☆☆）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;压过线，扣100分；&lt;/li&gt;
&lt;li&gt;中途停车，扣100分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/s.jpg&quot; alt=&quot;曲线行驶&quot; title=&quot;曲线行驶&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/s2.jpg&quot; alt=&quot;曲线行驶&quot; title=&quot;曲线行驶&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作步骤：&lt;br&gt;进入曲线行驶后，控制好车速，然后假想你踩离合的左脚就是车的左轮，先&lt;strong&gt;向左打半圈至一圈之间&lt;/strong&gt;，眼睛注视左视镜看后轮是否压线，然后再&lt;strong&gt;向右打半圈至一圈之间&lt;/strong&gt;，看&lt;strong&gt;&lt;em&gt;雨刷上的锚点是否正对横着的黄线&lt;/em&gt;&lt;/strong&gt;，转弯后眼睛注视右视镜看后轮是否压线，缓缓驶出曲线道。&lt;br&gt;曲线行驶很简单，这里就不上图了！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;直角转弯（★★★☆☆）&quot;&gt;&lt;a href=&quot;#直角转弯（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;直角转弯（★★★☆☆）&quot;&gt;&lt;/a&gt;直角转弯（★★★☆☆）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;压过线，扣100分；&lt;/li&gt;
&lt;li&gt;中途停车，扣100分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/zhijiao.jpg&quot; alt=&quot;直角转弯&quot; title=&quot;直角转弯&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/zhijio2.jpg&quot; alt=&quot;直角转弯&quot; title=&quot;直角转弯&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作步骤：&lt;br&gt;当驶出曲线道，紧接着是直角转弯，先&lt;strong&gt;向右打死&lt;/strong&gt;，当&lt;strong&gt;&lt;em&gt;雨刷上的锚点正对右边缘线左边&lt;/em&gt;&lt;/strong&gt;时，&lt;strong&gt;向左打方向盘回正&lt;/strong&gt;，接着当驾驶到&lt;strong&gt;&lt;em&gt;车门把手正对左边缘线&lt;/em&gt;&lt;/strong&gt;时，迅速&lt;strong&gt;向左打死&lt;/strong&gt;，眼睛注视左视镜看后轮是否压线，然后当车身摆正后迅速&lt;strong&gt;向右打方向盘回正&lt;/strong&gt;。&lt;br&gt;直线行驶很简单，这里就不上图了！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;侧方位停车（★★★★★）&quot;&gt;&lt;a href=&quot;#侧方位停车（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;侧方位停车（★★★★★）&quot;&gt;&lt;/a&gt;侧方位停车（★★★★★）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;车辆入库停止后，车身出线，扣100分；&lt;/li&gt;
&lt;li&gt;未停车于库内，扣100分；&lt;/li&gt;
&lt;li&gt;中途停车，扣100分；&lt;/li&gt;
&lt;li&gt;行驶中车轮触压车道边线，扣10分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/cstop.jpg&quot; alt=&quot;侧方位停车&quot; title=&quot;侧方位停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/cstop2.jpg&quot; alt=&quot;侧方位停车&quot; title=&quot;侧方位停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作步骤：驾驶进去时先&lt;strong&gt;切线&lt;/strong&gt;（雨刷上的锚点正对右边缘线左边）将&lt;strong&gt;&lt;em&gt;车身与黄线距离控制在30cm~50cm&lt;/em&gt;&lt;/strong&gt;停车，&lt;strong&gt;挂倒档&lt;/strong&gt;后退，眼睛注视右视镜，当&lt;strong&gt;&lt;em&gt;库角消失在右视镜下端&lt;/em&gt;&lt;/strong&gt;时，迅速先&lt;strong&gt;向右打死&lt;/strong&gt;，在车身进入后，眼睛注视左视镜，当&lt;strong&gt;&lt;em&gt;左视镜出现库的右后角&lt;/em&gt;&lt;/strong&gt;时，迅速&lt;strong&gt;向左打方向盘回正&lt;/strong&gt;，继续注视左视镜，当&lt;strong&gt;&lt;em&gt;后轮即将压倒库边线&lt;/em&gt;&lt;/strong&gt;时，匀速&lt;strong&gt;向左打死&lt;/strong&gt;，当车轮完全进入库后，&lt;strong&gt;踩脚刹&lt;/strong&gt;停车。合格后，&lt;strong&gt;挂1档&lt;/strong&gt;离开即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/cstop3.jpg&quot; alt=&quot;侧方位停车&quot; title=&quot;侧方位停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/cstop4.jpg&quot; alt=&quot;侧方位停车&quot; title=&quot;侧方位停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/cstop5.jpg&quot; alt=&quot;侧方位停车&quot; title=&quot;侧方位停车&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;倒车入库（★★★★★）&quot;&gt;&lt;a href=&quot;#倒车入库（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;倒车入库（★★★★★）&quot;&gt;&lt;/a&gt;倒车入库（★★★★★）&lt;/h3&gt;&lt;p&gt;考试标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不按规定路线顺序行驶，扣100分；&lt;/li&gt;
&lt;li&gt;没有完全倒入库内，扣100分；&lt;/li&gt;
&lt;li&gt;车身出线，扣100分；&lt;/li&gt;
&lt;li&gt;中途停车，扣100分；&lt;/li&gt;
&lt;li&gt;4分钟未完成， 扣100分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2a.jpg&quot; alt=&quot;轨迹图&quot; title=&quot;轨迹图&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意事项：&lt;br&gt;下面从倒车入库过程中的大致位置入手，给大家讲解注意的地方。&lt;br&gt;简述大致经过：启动-向右打死-往回打-停车-倒档启动-向右打死-向左回一圈-向右一圈-往回打-停车-挂1档启动-向左打死-停车-倒档启动-往回打-停车&lt;br&gt;简述是不是觉得很复杂，但也不需要强记这些，因为这些东西只有在真正练的时候才能领悟到。&lt;br&gt;下面用图解给大家讲解下倒车入库向右向左转弯的注意事项：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;切线&quot;&gt;&lt;a href=&quot;#切线&quot; class=&quot;headerlink&quot; title=&quot;切线&quot;&gt;&lt;/a&gt;切线&lt;/h3&gt;&lt;p&gt;当车子行驶到倒车入库考场时，需要将车子切线到合适位置停车倒库，最佳位置是左黄线与左视镜的中间处。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;向右转弯&quot;&gt;&lt;a href=&quot;#向右转弯&quot; class=&quot;headerlink&quot; title=&quot;向右转弯&quot;&gt;&lt;/a&gt;向右转弯&lt;/h3&gt;&lt;p&gt;1.启动&lt;br&gt;系安全带、钥匙启动、踩离合、松手刹、挂1档&lt;/p&gt;
&lt;p&gt;2.向右打死&lt;br&gt;车子启动后，当左车轮完全离开黄线时向右打方向盘打死，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016%2F01%2F10%2Fkm2k.jpg&quot; alt=&quot;向右打死&quot; title=&quot;向右打死&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.往回打&lt;br&gt;车子向右转弯后，眼睛平视前方，当自己觉得车身与公路平行时，向左打方向盘往回打，当黄线出现在左车把上面时，踩死离合或踩刹车停车，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2c.jpg&quot; alt=&quot;往回打&quot; title=&quot;往回打&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.修车身&lt;br&gt;停车后，挂倒档准备倒车，然后轻彩离合启动车子。这步非常关键，当发现车子与黄线不是直角的时候，需要将其修成直角，至少要接近直角，原因是车正才能更好更精确地定位，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2e.jpg&quot; alt=&quot;修车身&quot; title=&quot;修车身&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2d.jpg&quot; alt=&quot;修车身&quot; title=&quot;修车身&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意修车身是边退边修的哦，切忌停车。&lt;/p&gt;
&lt;p&gt;5.向右打死&lt;br&gt;车身修成直角后，车子继续向后缓缓倒车，当左车轮将要压黄线时，向右打方向盘打死，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2f.jpg&quot; alt=&quot;向右打死&quot; title=&quot;向右打死&quot;&gt;&lt;/p&gt;
&lt;p&gt;6.向左回一圈&lt;br&gt;向右打死后，车子继续向后缓缓倒车，当右车把与黄线直角尖尖在同一线上或它俩距离在30cm时，向左打方向盘回一圈，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2g.jpg&quot; alt=&quot;向左回一圈&quot; title=&quot;向左回一圈&quot;&gt;&lt;/p&gt;
&lt;p&gt;7.向右一圈&lt;br&gt;黄线直角尖尖将要离开镜子时，向右打方向盘一圈，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2h.jpg&quot; alt=&quot;向右一圈&quot; title=&quot;向右一圈&quot;&gt;&lt;/p&gt;
&lt;p&gt;8.往回打&lt;br&gt;车子慢慢倒入库中，右把手与黄线成平行或成超过一点点的“梯形”（最佳）时，向左打方向盘往回打，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2i.jpg&quot; alt=&quot;往回打&quot; title=&quot;往回打&quot;&gt;&lt;/p&gt;
&lt;p&gt;9.修车身&lt;br&gt;车子直线倒退时，可关注左边镜子，当出现“上窄下宽”的梯形时，向右打方向盘调整后回正；当出现“上宽下窄”的梯形时，向左打方向盘调整后回正，使车子尽量与黄线平行。&lt;/p&gt;
&lt;p&gt;10.停车&lt;br&gt;当左车把的中间位置与后面的黄线在同一线上时，松离合或踩刹车停车，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2j.jpg&quot; alt=&quot;停车&quot; title=&quot;停车&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;向左转弯&quot;&gt;&lt;a href=&quot;#向左转弯&quot; class=&quot;headerlink&quot; title=&quot;向左转弯&quot;&gt;&lt;/a&gt;向左转弯&lt;/h3&gt;&lt;p&gt;1.修车身&lt;br&gt;当向右转弯结束后，紧接着是向左转弯。当你发现你车子的左边离黄线的距离很近的时候，就不需要修车身。相反就需要让你的车子向左靠近点，即将头伸出窗外，向左打方向盘，当离黄线很近时，往回打。&lt;/p&gt;
&lt;p&gt;2.向左打死&lt;br&gt;车子启动后，当左车轮刚离开黄线时向左打方向盘打死，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2l.jpg&quot; alt=&quot;向左打死&quot; title=&quot;向左打死&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.往回打&lt;br&gt;车子向左转弯后，因为方向盘是向左打死的，所以直接不动方向盘停车倒档后，会按照原路返回，当从右边镜子能够完全看到整个黄线时，迅速往回打，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2m.jpg&quot; alt=&quot;往回打&quot; title=&quot;往回打&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.停车&lt;br&gt;当左车把的中间位置与后面的黄线在同一线上时，松离合或踩刹车停车，如图所示：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/10/km2j.jpg&quot; alt=&quot;停车&quot; title=&quot;停车&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于倒车入库的整个流程及方法已经全部介绍完毕，注意目标对象：除了在向左、向右打死看车轮外，其余都看车把与黄线哦。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;科目二经验之谈&quot;&gt;&lt;a href=&quot;#科目二经验之谈&quot; class=&quot;headerlink&quot; title=&quot;科目二经验之谈&quot;&gt;&lt;/a&gt;科目二经验之谈&lt;/h3&gt;&lt;p&gt;我的科目二挂过一次，十分地忏愧，两次都死在侧方位停车。理由就是我离合踩得快，方向盘转得慢，压线死掉了。&lt;br&gt;最后用一句话来形容科目二：心脏控制好，离合踩好，速度控制好，慢慢完成项目就好。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;科目三&quot;&gt;&lt;a href=&quot;#科目三&quot; class=&quot;headerlink&quot; title=&quot;科目三&quot;&gt;&lt;/a&gt;科目三&lt;/h3&gt;&lt;p&gt;终于离成功又近一步了，科目三才算真正的学车环节，科目二都是浮云，就拿单边桥来说，在实际生活中哪儿会出现这个嘛，还有就是倒车入库中途不能停车，在实际生活中怎么可能不停车嘛。&lt;br&gt;科目三考试主要的关键点在于&lt;strong&gt;加减档&lt;/strong&gt;、&lt;strong&gt;车速控制&lt;/strong&gt;、&lt;strong&gt;转向灯使用&lt;/strong&gt;。&lt;br&gt;科目三考试项目虽多，但可以分为9个主要项目，分别是准备、灯光模拟、起步、直线加速加档、变更车道、通过场合、转弯减速减档、掉头、停车。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-准备（★★★☆☆）&quot;&gt;&lt;a href=&quot;#1-准备（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;1.准备（★★★☆☆）&quot;&gt;&lt;/a&gt;1.准备（★★★☆☆）&lt;/h3&gt;&lt;p&gt;为什么我要把上车准备也算个主要项目呢？理由是我科目二有一次就是准备没做好，造成后面观察出了问题。&lt;br&gt;在上车准备时，一定要记得调整镜子，科目三是路考，所以左右镜子需要&lt;strong&gt;看到车的两个门把手&lt;/strong&gt;，左右镜子的&lt;strong&gt;1/3&lt;/strong&gt;能看到车即可；其次就是需要调整好自己的座位，&lt;strong&gt;脚能踩离合到底&lt;/strong&gt;的位置就合适；最后记得系上安全带。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;看清门把手，离合能踩底，系上安全带&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-灯光模拟（★★★☆☆）&quot;&gt;&lt;a href=&quot;#2-灯光模拟（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;2.灯光模拟（★★★☆☆）&quot;&gt;&lt;/a&gt;2.灯光模拟（★★★☆☆）&lt;/h3&gt;&lt;p&gt;当准备好后，开始模拟夜间灯光的的考试，考生需要在5秒内根据语音播报的内容开启相应的灯光。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/02/car.png&quot; alt=&quot;灯光&quot; title=&quot;灯光&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/03/02/car2.png&quot; alt=&quot;灯光&quot; title=&quot;灯光&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.夜间在没有路灯、照明不良条件下行驶&lt;br&gt;大灯开启（近光灯）&lt;/p&gt;
&lt;p&gt;2.请将前照灯变换成远光&lt;br&gt;远光灯&lt;/p&gt;
&lt;p&gt;3.会车；跟车；&lt;br&gt;近光灯&lt;/p&gt;
&lt;p&gt;4.夜间通过拱桥、人行横道、急弯、陂路、没有交通信号灯控制的路口&lt;br&gt;远近光灯交替闪烁两次&lt;/p&gt;
&lt;p&gt;5.夜间在道路上发生故障妨碍交替又难以移动&lt;br&gt;示廓灯+警示灯&lt;/p&gt;
&lt;p&gt;6.雾天行驶&lt;br&gt;雾灯+警示灯&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;照明不良、会车、跟车&lt;/strong&gt;用近光；&lt;br&gt;&lt;strong&gt;通过危险路段&lt;/strong&gt;用远近交替；&lt;br&gt;&lt;strong&gt;发生故障&lt;/strong&gt;用示廓和警示；&lt;br&gt;&lt;strong&gt;雾天行驶&lt;/strong&gt;用雾灯和警示；&lt;br&gt;&lt;strong&gt;说用远光&lt;/strong&gt;才用远光。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-起步（★★★★☆）&quot;&gt;&lt;a href=&quot;#3-起步（★★★★☆）&quot; class=&quot;headerlink&quot; title=&quot;3.起步（★★★★☆）&quot;&gt;&lt;/a&gt;3.起步（★★★★☆）&lt;/h3&gt;&lt;p&gt;当灯光模拟语音结束后，说：“请起步，请继续完成考试”，就开始进入下一个阶段：“起步”。&lt;br&gt;具体步骤：&lt;br&gt;打转向灯，踩离合，挂1档，放手刹，左打点方向，松离合，踩点油门，左右观察。&lt;br&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;放-松-踩&lt;/strong&gt;，&lt;strong&gt;左松右踩&lt;/strong&gt;。&lt;br&gt;（放手刹-松离合-踩油门）（先松再踩）&lt;/p&gt;
&lt;p&gt;注意事项：半联动时，离合不能放太快，易熄火&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-直线加速加档（★★★★★）&quot;&gt;&lt;a href=&quot;#4-直线加速加档（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;4.直线加速加档（★★★★★）&quot;&gt;&lt;/a&gt;4.直线加速加档（★★★★★）&lt;/h3&gt;&lt;p&gt;起步后，需要马上换成2档，在此讲解之前，先说下档位和车速的关系。&lt;br&gt;低速档位：&lt;br&gt;1档不超过20km/h&lt;br&gt;2档不超过30km/h&lt;br&gt;3档不超过40km/h&lt;/p&gt;
&lt;p&gt;何时加挡：&lt;br&gt;1换2挡：10-20km/h合适&lt;br&gt;2换3挡：20-30km/h合适&lt;/p&gt;
&lt;p&gt;成功起步后，放离合，重踩油门，将转速提高到1500转左右。&lt;br&gt;当车速在&lt;strong&gt;10-20&lt;/strong&gt;之间，准备换2挡。&lt;br&gt;挡换完成后，重踩油门，当车速在&lt;strong&gt;20-30&lt;/strong&gt;之间，准备换3挡。&lt;br&gt;稳住油门，车速稳定在&lt;strong&gt;25&lt;/strong&gt;码左右即可。&lt;/p&gt;
&lt;p&gt;换挡建议先松油门，后踩离合，然后换挡。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;松-踩-换&lt;/strong&gt;，&lt;strong&gt;右松左踩&lt;/strong&gt;。&lt;br&gt;（松油门-踩离合-换挡）（先松再踩）&lt;/p&gt;
&lt;p&gt;注意事项：&lt;br&gt;1.松离合时前可以稍快中间稍停顿后稍慢，确保车子不后座，不前冲；&lt;br&gt;2.车速慢，松离合慢；车速快，松离合稍快&lt;br&gt;3.加档只能逐步加，减档可以跨级减&lt;br&gt;4.1挡起步后可马上换2挡&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-变更车道（★★★☆☆）&quot;&gt;&lt;a href=&quot;#5-变更车道（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;5.变更车道（★★★☆☆）&quot;&gt;&lt;/a&gt;5.变更车道（★★★☆☆）&lt;/h3&gt;&lt;p&gt;听到“前方请变更车道”口令后，&lt;strong&gt;打左转向灯&lt;/strong&gt;，等待&lt;strong&gt;开灯三秒&lt;/strong&gt;后，&lt;strong&gt;向左打方向盘&lt;/strong&gt;进入左车道，&lt;strong&gt;关闭转向灯&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;打灯等三秒，转盘关转灯&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-通过场合（★★★☆☆）&quot;&gt;&lt;a href=&quot;#6-通过场合（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;6.通过场合（★★★☆☆）&quot;&gt;&lt;/a&gt;6.通过场合（★★★☆☆）&lt;/h3&gt;&lt;p&gt;听到以下口令或遇到以下情况：&lt;br&gt;“前方路口直行”，&lt;br&gt;“通过公共汽车站”，&lt;br&gt;“通过学校区域”，&lt;br&gt;“前方人行横道”&lt;br&gt;需要立即&lt;strong&gt;踩一下刹车&lt;/strong&gt;，然后眼睛&lt;strong&gt;左右观看&lt;/strong&gt;即可。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;踩刹车，观两方&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;7-转弯减速减档（★★★★★）&quot;&gt;&lt;a href=&quot;#7-转弯减速减档（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;7.转弯减速减档（★★★★★）&quot;&gt;&lt;/a&gt;7.转弯减速减档（★★★★★）&lt;/h3&gt;&lt;p&gt;转弯分成向左转弯和向右转弯。&lt;/p&gt;
&lt;h3 id=&quot;向右转弯-1&quot;&gt;&lt;a href=&quot;#向右转弯-1&quot; class=&quot;headerlink&quot; title=&quot;向右转弯&quot;&gt;&lt;/a&gt;向右转弯&lt;/h3&gt;&lt;p&gt;听到“前方路口右转”的口令后，迅速&lt;strong&gt;打右转向灯&lt;/strong&gt;，&lt;strong&gt;踩刹车&lt;/strong&gt;减速，减速后&lt;strong&gt;松刹车&lt;/strong&gt;，准备换2挡。&lt;br&gt;向右转弯在考试中无须顾忌红路灯。&lt;/p&gt;
&lt;p&gt;注意事项：&lt;br&gt;踩完刹车一定要松刹车，记住只要是&lt;strong&gt;左脚踩离合，右脚都松开&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;向左转弯-1&quot;&gt;&lt;a href=&quot;#向左转弯-1&quot; class=&quot;headerlink&quot; title=&quot;向左转弯&quot;&gt;&lt;/a&gt;向左转弯&lt;/h3&gt;&lt;p&gt;听到“前方路口左转”的口令后，&lt;br&gt;情况一：遇到红灯&lt;br&gt;踩刹车减速，松刹车，踩离合，到停车的时候再踩刹车停住等红灯即可。&lt;br&gt;停住后，马上&lt;strong&gt;换1挡&lt;/strong&gt;。（要养成习惯）&lt;br&gt;当红灯倒计时8秒时，&lt;strong&gt;打左转向灯&lt;/strong&gt;，开始做起步准备。（放手刹-松离合-踩油门）&lt;/p&gt;
&lt;p&gt;情况二：在右边车道&lt;br&gt;在右边车道时，&lt;strong&gt;打左转向灯&lt;/strong&gt;，&lt;strong&gt;等待三秒&lt;/strong&gt;后准备变道到左边，然后继续&lt;strong&gt;打左转向灯&lt;/strong&gt;（没熄灭可不打），&lt;strong&gt;踩刹车&lt;/strong&gt;减速，松刹车，换2挡。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;打灯踩刹，松刹踩离换2挡&lt;/strong&gt;；&lt;br&gt;&lt;strong&gt;紧急停车，换1挡起步&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意事项：左转弯进入最左边那条道，右转弯进行最右边那条道&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;8-掉头（★★★★★）&quot;&gt;&lt;a href=&quot;#8-掉头（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;8.掉头（★★★★★）&quot;&gt;&lt;/a&gt;8.掉头（★★★★★）&lt;/h3&gt;&lt;p&gt;听到“前方请选择合适地点掉头”的口令后，迅速&lt;strong&gt;打左转向灯&lt;/strong&gt;，，踩刹车减速，到可以掉头的地方踩刹车停车，然后继续&lt;strong&gt;打左转向灯&lt;/strong&gt;（没熄灭可不打），接着做起步准备换1挡掉头。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;打灯踩刹，松刹踩离停车&lt;/strong&gt;；&lt;br&gt;&lt;strong&gt;换1挡起步，打方向掉头&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意事项：&lt;br&gt;1.记得打左转向灯，一档掉头&lt;br&gt;2.注意不要压到右边实现，因此在掉头时可以将车稍向右靠点&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;9-靠边停车（★★★★★）&quot;&gt;&lt;a href=&quot;#9-靠边停车（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;9.靠边停车（★★★★★）&quot;&gt;&lt;/a&gt;9.靠边停车（★★★★★）&lt;/h3&gt;&lt;p&gt;听到“请靠边停车”的口令后，迅速&lt;strong&gt;打右转向灯&lt;/strong&gt;，踩刹车减速，减速后松刹车，准备换2挡，线切好后，踩离合，踩刹车停车。停好车后，拉手刹，摘空挡，松离合，松刹车，松安全带，停车结束。&lt;/p&gt;
&lt;p&gt;用一句话简要概括就是：&lt;br&gt;&lt;strong&gt;打灯踩刹，松刹踩离换2挡&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;切线踩离踩刹车，停车步骤不能少&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意事项：不要在桥上停车。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前面说过，科目三的重点就是：&lt;strong&gt;起步的控制&lt;/strong&gt;、&lt;strong&gt;加减档的控制&lt;/strong&gt;、&lt;strong&gt;灯光的控制&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;1-起步的控制&quot;&gt;&lt;a href=&quot;#1-起步的控制&quot; class=&quot;headerlink&quot; title=&quot;1.起步的控制&quot;&gt;&lt;/a&gt;1.起步的控制&lt;/h3&gt;&lt;p&gt;首先起步，要看手刹是否在空挡位置，检查仪表盘，调节后视镜，座椅，系好安全带。打开左转向灯，再左右观察两边后视镜，看有没有人和车，然后放手刹，松一点离合，车子移动，就往左打一点方向，慢慢进入行车道中。&lt;/p&gt;
&lt;p&gt;注意路考的时候，千万不要猛打方向盘，忘掉科目二的飞快打方向盘吧。踩一点油门，听到发动机的咆哮，离合踩到底，右手摸到变速杆，往左边一拉到底，就挂到二档里面了。松离合，同时踩一点油门，松离合的时候要注意慢一点，不能快，否则车子会突然往前冲一下。用二档走个十几米远，再踩一点油门，踩离合，挂3档。松离合要慢一点，离合全部放完，左脚就放在左边。这时用油门和刹车来控制速度了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-加减档的控制&quot;&gt;&lt;a href=&quot;#2-加减档的控制&quot; class=&quot;headerlink&quot; title=&quot;2.加减档的控制&quot;&gt;&lt;/a&gt;2.加减档的控制&lt;/h3&gt;&lt;p&gt;加减档的控制，包括左脚离合，右脚刹车和油门，右手换挡，估计这个是难点，什么时候减速，什么时候加速。左右脚怎么配合，换挡时眼睛不能看挡。&lt;/p&gt;
&lt;p&gt;总之记住一句话，加速加油加档，减速丢油踩刹车减档。换挡就要先快速踩死离合，再换挡，再松离合。松离合，是快松还是慢松呢？一档二档慢松离合，三档四档五档快松离合。这是个技术活，一定要练好，开始练习时很容易手忙脚乱。加减档练好了，基本就能通过科目三了。&lt;/p&gt;
&lt;p&gt;加减档需要专门练习过，这个是非常重要，换挡的时候不能用眼睛看档，就凭脚的感觉和手的感觉，容易出现把油门和刹车踩错以及换错挡的问题。&lt;br&gt;练习加速加档—–踩油门，松油门的同时踩离合到底，换挡，慢松离合的同时踩油门。&lt;br&gt;练习减速减档——轻踩刹车，踩离合到底，换挡，慢松离合。&lt;br&gt;当看到路很直，没有什么车辆，就要加速，&lt;br&gt;一看到前面有车，有障碍，路口等，就要减速。&lt;br&gt;考试道路是限速30公里，开到三档加一点油门就可以了。遇到转弯路段，先要踩刹车减速，换到二档，用半联动控制车速，低速慢慢转弯&lt;br&gt;通过，通过后立刻加速加档。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-灯光的控制&quot;&gt;&lt;a href=&quot;#3-灯光的控制&quot; class=&quot;headerlink&quot; title=&quot;3.灯光的控制&quot;&gt;&lt;/a&gt;3.灯光的控制&lt;/h3&gt;&lt;p&gt;灯光的控制，先要把几个灯光的符号记住，科目一的时候考过的，估计大家现在全部忘记了。近光灯，远光灯，示廓灯，警示灯，雾灯，切换近远光灯，转向灯，雨刮器。&lt;br&gt;遇到交通标志的控制，只要一看到交通标志，先减速肯定错不了。&lt;br&gt;灯光的使用，主要是用转向灯，当要改变方向时候，就需要打灯。左转弯，打开左转向灯，听到“哒，哒，哒…”的声音，观察左右后视镜，然后方向盘往左边打一点点，慢慢地转弯，当方向盘往右边打的时候，转向灯会自动回位，这时会听到“咔擦”一声。这时如果转弯还没有完成，就要再次打开左转向灯，听到“哒，哒，哒…”的声音，直到完成转向，可以关闭转向灯。&lt;br&gt;开车途中，很容易忘记打转向灯，打灯练得太少造成的，打灯要放在第一位。&lt;/p&gt;
&lt;p&gt;希望成功啦，Fight!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在学驾校，希望自己总结的东西对将要考取驾校的人来说有指导性建议，希望大家和我都能一次性过关，早日拿到驾驶证。下面会将自己练车时的经验与大家分享，在这里着重讲解科目二、科目三的考试项目，因为科目一和科目四都是理论，所以考过它俩就两个字：多背。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 i
    
    </summary>
    
      <category term="驾考" scheme="http://vmartaw.com/categories/%E9%A9%BE%E8%80%83/"/>
    
    
      <category term="驾考" scheme="http://vmartaw.com/tags/%E9%A9%BE%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>App高性能优化之Crosswalk</title>
    <link href="http://vmartaw.com/2016/02/21/App%E9%AB%98%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BCrosswalk/"/>
    <id>http://vmartaw.com/2016/02/21/App高性能优化之Crosswalk/</id>
    <published>2016-02-21T06:23:34.000Z</published>
    <updated>2016-02-18T09:03:53.000Z</updated>
    
    <content type="html">&lt;p&gt;大家现在应该都知道常规Cordova是利用系统自带的webview来渲染一个html页面来模拟App效果的，但是在Android上面这个webview是个一等残废—-性能残废，功能也残废。&lt;br&gt;所以就有人想了，能不能让Cordova自己带一个性能强悍的webview，让这个HTML页面跑在自带的webview里面。&lt;br&gt;嗯，有人想到，也有人做的了。&lt;strong&gt;&lt;a href=&quot;https://crosswalk-project.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Crosswalk&lt;/a&gt;&lt;/strong&gt;，一个性能更加牛叉的webview（依然是Intel出品），在Android平台上面你可以把它打入到你的Cordova App中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;安装-Crosswalk-WebView-插件&quot;&gt;&lt;a href=&quot;#安装-Crosswalk-WebView-插件&quot; class=&quot;headerlink&quot; title=&quot;安装 Crosswalk WebView 插件&quot;&gt;&lt;/a&gt;安装 Crosswalk WebView 插件&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cordova plugin add cordova-plugin-crosswalk-webview&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;要不要crosswalk&quot;&gt;&lt;a href=&quot;#要不要crosswalk&quot; class=&quot;headerlink&quot; title=&quot;要不要crosswalk&quot;&gt;&lt;/a&gt;要不要crosswalk&lt;/h3&gt;&lt;p&gt;到底要不要crosswalk，首先我们先来分析一下利弊。&lt;/p&gt;
&lt;p&gt;打入crosswalk好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性能会带来一定的提升（尤其是当你的App展示的都是图片的时候，或者你的App优化的不够好的时候）。&lt;/li&gt;
&lt;li&gt;一致性。这是使用crosswalk的最大好处，你只需要针对一个安卓系统版本开发，不需要考虑其他版本的安卓系统，这个可以减少不少的工作量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打入crosswalk坏处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;体积立马变得庞大。一起玩吧App不打入crosswalk的时候只有不到1.3M大小，打入crosswalk后，立马增加到20M。&lt;/li&gt;
&lt;li&gt;下载时间变长。破坏了不打入crosswalk时候的秒下载特点。&lt;/li&gt;
&lt;li&gt;下载后安装时间变长。破坏了不打入crosswalk时候的秒安装特点。&lt;/li&gt;
&lt;li&gt;app启动时间变长。破坏了不打入crosswalk时候的秒启动特色。（实测“一起玩吧App”启动时间大约增加了3~5秒）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;要不要建议&quot;&gt;&lt;a href=&quot;#要不要建议&quot; class=&quot;headerlink&quot; title=&quot;要不要建议&quot;&gt;&lt;/a&gt;要不要建议&lt;/h3&gt;&lt;p&gt;如果你的App优化足够好，滚动的列表数据比较简单（例如没有比较大的图片），那么你的App要crosswalk和不要crosswalk性能区别不大。这时如果你想追求”秒下载，秒安装，秒启动“，那么你可以不打入crosswalk。&lt;br&gt;OK，如果不满足上述条件，那么你可以考虑打入crosswalk。&lt;br&gt;如果市场上面没有出现和你同类的App的时候，这个时候就不要犹豫了，直接打入crosswalk吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;crosswalk打入时间&quot;&gt;&lt;a href=&quot;#crosswalk打入时间&quot; class=&quot;headerlink&quot; title=&quot;crosswalk打入时间&quot;&gt;&lt;/a&gt;crosswalk打入时间&lt;/h3&gt;&lt;p&gt;在开发的时候，我们一开始最好不要打入crosswalk，因为打入crosswalk部署到真机调试时间增加不少。&lt;br&gt;先利用Android4.4+手机（Android4.4+的webview引擎核心和crosswalk是一样的，只不过crosswalk开发进度更快，对html5实现也比较完善等等）开发好了，再打入crosswalk做最后的调试和发布。&lt;/p&gt;
&lt;p&gt;关于”App高性能优化“的讲解就全部分享完了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大家现在应该都知道常规Cordova是利用系统自带的webview来渲染一个html页面来模拟App效果的，但是在Android上面这个webview是个一等残废—-性能残废，功能也残废。&lt;br&gt;所以就有人想了，能不能让Cordova自己带一个性能强悍的webview，让这
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>App高性能优化</title>
    <link href="http://vmartaw.com/2016/02/20/App%E9%AB%98%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://vmartaw.com/2016/02/20/App高性能优化/</id>
    <published>2016-02-20T06:23:34.000Z</published>
    <updated>2016-02-18T06:29:48.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;性能优秀的App标准&quot;&gt;&lt;a href=&quot;#性能优秀的App标准&quot; class=&quot;headerlink&quot; title=&quot;性能优秀的App标准&quot;&gt;&lt;/a&gt;性能优秀的App标准&lt;/h3&gt;&lt;p&gt;一个App体验好不好，关键一点在于性能，性能优秀的App，下面几个指标缺一不可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快速启动&lt;/li&gt;
&lt;li&gt;对用户点击事件的快速反应&lt;/li&gt;
&lt;li&gt;快速页面切换&lt;/li&gt;
&lt;li&gt;流畅的滚动&lt;/li&gt;
&lt;li&gt;流畅的动画&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Cordova开发难点&quot;&gt;&lt;a href=&quot;#Cordova开发难点&quot; class=&quot;headerlink&quot; title=&quot;Cordova开发难点&quot;&gt;&lt;/a&gt;Cordova开发难点&lt;/h3&gt;&lt;p&gt;使用Cordova开发App入门很容易，难点在于以下几点：&lt;br&gt;&lt;strong&gt;1.性能优化&lt;/strong&gt;&lt;br&gt;我们来张图看看为何Android Cordova App、IOS Cordova App，Android Native App，IOS Native App存在性能差异。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016%2F02%2F16%2Fb2.png&quot; alt=&quot;cordova&quot; title=&quot;DOM&quot;&gt;&lt;br&gt;从上图我们可以清晰的看出为何IOS Native App天生会比Android Native App快（理论上），因为它中间少了一层JAVA层（目前的Android5+系统已经跳过了这个中间层了（art模式））。&lt;br&gt;利用Cordova开发的App在两种系统上面又多加了一层JS层（其实还多加了一个渲染层（浏览器的渲染引擎）），所以Cordova App自然就会比Native App慢。&lt;br&gt;但是无论如何IOS上面的Cordova App天生还是会比Android上面的Cordova App快，因为Android多了一个JAVA层，更不用说IOS系统本身优化的就比Android好。&lt;br&gt;如果你前端水平还可以，比较有经验，又是个爱思考的孩子的话，写出的Cordova App在IOS上面基本不会有什么卡顿。因为IOS系统是很优秀的，IOS webview也没有什么严重的残疾，IPhone手机硬件本身配置也是很不错的。&lt;br&gt;综合上面可以知道Android Cordova App容易卡顿的原因有以下几个方面：&lt;br&gt;1.android机器配置参数不齐&lt;br&gt;市面上的Android手机种类很多，高、中、低端都有，Cordova App在中低端机器上面容易出现卡顿。&lt;br&gt;2.android系统碎片化&lt;br&gt;Android手机系统版本基本上是越高，系统优化的越好，尤其是webview的优化，4+以上版本系统的webview性能比2.3版本系统提升了一大截，Android4.4+比4.0~4.3版本系统的webview在性能上面又有明显提升。&lt;br&gt;问题在于android手机系统各个版本（4+以上）都占有不错的市场份额，所以开发的App必须兼顾到这些版本系统。&lt;br&gt;3.android webview天生残缺&lt;br&gt;例如android webview原生滚动功能就是个残废，滚动事件支持的非常不全。基于android webview原生的滚动，使用Cordova开发App是很难实现下拉刷新，无限滚动加载等App必备功能，通常只能利用JS滚动来模拟。&lt;br&gt;所以Cordova App绝大部分优化都是针对Android的，当然Android优化的越流畅，IOS上面自然就会更加流畅。&lt;br&gt;&lt;strong&gt;2.填坑&lt;/strong&gt;&lt;br&gt;上面的属于性能坑，这里的坑是指不同系统，不同系统版本而造成的css bug、浏览器 bug等。&lt;br&gt;&lt;strong&gt;3.原生插件开发&lt;/strong&gt;&lt;br&gt;这个没有什么好说的，如果你想做，你就老老实实学Andoid和IOS原生开发吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;性能优化&quot;&gt;&lt;a href=&quot;#性能优化&quot; class=&quot;headerlink&quot; title=&quot;性能优化&quot;&gt;&lt;/a&gt;性能优化&lt;/h3&gt;&lt;p&gt;Cordova App本质是一个浏览器壳子里面跑了一个网页，所以毫无疑问Cordova App首要优化工作在HTML、JS、CSS上面。在学习这篇文章之前，建议下看下这篇文章“&lt;a href=&quot;http://www.vmartaw.com/2016/02/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E9%83%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;浏览器内部工作原理&lt;/strong&gt;&lt;/a&gt;”，了解一下浏览器的工作原理，注意里面的“DOM树”、“渲染树”、“布局”、“重绘”等概念。因为下文的讲解中我会反复提到这些概念。只有理解了这些概念，你才能理解下文中的优化原理。下面将从HTML、CSS、JS三方面讲解性能优化。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;HTML优化&quot;&gt;&lt;a href=&quot;#HTML优化&quot; class=&quot;headerlink&quot; title=&quot;HTML优化&quot;&gt;&lt;/a&gt;HTML优化&lt;/h3&gt;&lt;p&gt;减少HTML的复杂性和页面的元素数量是构建极速网页，影响成功的关键性因素。在该节，将尽可能全面的介绍如何编写快速加载和易于维护的简洁干净的HTML。&lt;/p&gt;
&lt;p&gt;1.正确使用HTML、CSS和JS&lt;br&gt;HTML是一种标记语言，用于表示结构和给内容赋予意义的。&lt;br&gt;HTML不应被用来样式化内容。不要只是为了显得更大就把文字写在h1~h6中。相反，使用CSS来改变元素的外观和布局。&lt;/p&gt;
&lt;p&gt;2.基本原则&lt;br&gt;a.使用HTML确定结构；使用CSS确定展现；使用JavaScript确定行为。&lt;br&gt;b.使用HTML，必要时借助CSS，并且在不得已时再添加JS。例如：在多数情况下尽可能使用CSS3来代替JS动画。&lt;br&gt;c.将CSS和JS从你的HTML代码中分离。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-使用正确的文档结构&quot;&gt;&lt;a href=&quot;#1-使用正确的文档结构&quot; class=&quot;headerlink&quot; title=&quot;1.使用正确的文档结构&quot;&gt;&lt;/a&gt;1.使用正确的文档结构&lt;/h3&gt;&lt;p&gt;使用HTML5的文档类型，下面是一个正确的文档结构：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;一起玩吧&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/css/font-awesome.min.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/global.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;--&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./js/lib/doT.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./js/lib/banner.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通常我们在head元素中引入CSS，这样浏览器就可以在解析HTML前预先加载样式而不会呈现一个混乱的页面布局。&lt;br&gt;把JavaScriptS放在页面的最底部，在body封闭之前。这将提供页面渲染时间，因为浏览器可以在JavaScript加载前将页面渲染出来。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-书写正确的HTML代码&quot;&gt;&lt;a href=&quot;#2-书写正确的HTML代码&quot; class=&quot;headerlink&quot; title=&quot;2.书写正确的HTML代码&quot;&gt;&lt;/a&gt;2.书写正确的HTML代码&lt;/h3&gt;&lt;p&gt;Web网页成功的一个主要因素就是浏览器可以处理无效的HTML，现代浏览器都有容错机制，HTML5标准设置还规定了浏览器应该能够处理哪几种错误。&lt;br&gt;也许你认为这不值得一提，但是尤其对于用Cordova开发的App，写合法的HTML是极其正确的。因为在低端Android手机上面每个新手写出来的App基本上都会卡。&lt;br&gt;有效的HTML更容易调试，占用资源更少，因为它们会跳过浏览器的容错机制所以渲染速度更快，无效的HTLM只会影响渲染速度。&lt;br&gt;因此在编写HTML代码的时候，请务必在非自封闭的元素后加上结束标签。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-使用单页面应用架构（SPA）&quot;&gt;&lt;a href=&quot;#3-使用单页面应用架构（SPA）&quot; class=&quot;headerlink&quot; title=&quot;3.使用单页面应用架构（SPA）&quot;&gt;&lt;/a&gt;3.使用单页面应用架构（SPA）&lt;/h3&gt;&lt;p&gt;这个我在前面已经讲过，Cordova App本质就是在浏览器上看网页，非SAP应用每次切换页面需要做各种重复的初始化工作（这个会严重影响性能），使用SPA架构可以省去这些重复的初始化工作。另外使用SPA架构可以简化DOM结构，因为App不管有多少个页面，都是跑在一个Html页面里面。&lt;br&gt;具体参见：“&lt;a href=&quot;http://www.vmartaw.com/2015/11/27/%E5%BC%80%E5%8F%91Cordova-App%E7%9A%84%E9%BB%84%E9%87%91%E5%AE%88%E5%88%99/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;开发Cordova App的黄金守则&lt;/strong&gt;&lt;/a&gt;”。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-简化DOM结构&quot;&gt;&lt;a href=&quot;#4-简化DOM结构&quot; class=&quot;headerlink&quot; title=&quot;4.简化DOM结构&quot;&gt;&lt;/a&gt;4.简化DOM结构&lt;/h3&gt;&lt;p&gt;Cordova（本质就是增强型的浏览器）在加载完页面之后，首先解析HTML构建DOM树，然后解析CSS布局DOM树中可视化节点构建出Render树（渲染树），最后绘制页面到屏幕上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image025.png&quot; alt=&quot;tree&quot; title=&quot;tree&quot;&gt;&lt;/p&gt;
&lt;p&gt;图1：渲染树及对应的DOM树&lt;/p&gt;
&lt;p&gt;根据上图用最少的DOM去构建一个DOM元素，意味着浏览器创建DOM树越简单，构建就越快，占用内存越少。同理根据DOM树和CSS创建出来的渲染树也越简单，布局会越快，从而使Cordova绘制页面的速度也就越快。&lt;/p&gt;
&lt;p&gt;简化HTML结构，可以从两方面入手：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;去掉冗余的HTML代码（html不合理嵌套）&lt;/li&gt;
&lt;li&gt;减少数据展现（根据业务）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-其他注意事项&quot;&gt;&lt;a href=&quot;#5-其他注意事项&quot; class=&quot;headerlink&quot; title=&quot;5.其他注意事项&quot;&gt;&lt;/a&gt;5.其他注意事项&lt;/h3&gt;&lt;p&gt;a.不要在HTML中添加事件处理&lt;br&gt;这样非常难以维护，如以下代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;stop&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;stopTouch();&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;stop&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在JS文件里添加事件处理，这样就好多了：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#stop&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;b.正确使用HTML标记&lt;br&gt;例如HTML5引入了一些新的“语义化元素”，像&amp;lt;header&amp;gt;、&amp;lt;footer&amp;gt;和&amp;lt;nav&amp;gt;。&lt;br&gt;使用正确的元素表达正确的内容对于可读性，可维护性是非常有帮助的。&lt;br&gt;使用&amp;lt;h1&amp;gt; ~ &amp;lt;h6&amp;gt;代表标题，&amp;lt;ul&amp;gt;或&amp;lt;ol&amp;gt;代表列表。&lt;br&gt;使用&amp;lt;header&amp;gt;、&amp;lt;footer&amp;gt;、&amp;lt;nav&amp;gt;和&amp;lt;aside&amp;gt;表示文档正确的模块。&lt;br&gt;使用&amp;lt;p&amp;gt;写正文。&lt;br&gt;使用&amp;lt;em&amp;gt;和&amp;lt;strong&amp;gt;代替&amp;lt;i&amp;gt;和&amp;lt;b&amp;gt;表示强调。&lt;br&gt;使用&amp;lt;label&amp;gt;元素为input类型添加标签。&lt;br&gt;混合文字和元素会导致布局的问题，如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;姓名：&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最好用下面的表示：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;姓名：&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;c.不要用HTML来布局&lt;br&gt;HTML是用来组织结构和赋予内容一定意义，而不是用来设置页面显示成什么样子的。&lt;br&gt;Flex布局是CSS3的一种推荐响应式弹性布局，能用就用。&lt;br&gt;使用&amp;lt;p&amp;gt;元素代表文本，而不是用来布局。&lt;br&gt;避免使用&amp;lt;br&amp;gt;来换行，使用块级元素和CSS来代替。&lt;br&gt;避免使用水平分割线&amp;lt;hr&amp;gt;，使用CSS的border样式来控制。&lt;br&gt;不要使用table来布局，table渲染时间是div数倍以上。&lt;br&gt;不要使用不必要的Div。&lt;br&gt;要了解哪些元素是块级元素，避免在Div中放置不必要的块级元素。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;CSS优化&quot;&gt;&lt;a href=&quot;#CSS优化&quot; class=&quot;headerlink&quot; title=&quot;CSS优化&quot;&gt;&lt;/a&gt;CSS优化&lt;/h3&gt;&lt;p&gt;如果你不是个有代码洁癖的人，可能会想CSS都要优化，是不是有点“”挢抂过正“了。也许你在桌面PC浏览器或者手机浏览器上面甚至利用Cordova开发IOS App都不太会觉察到一个CSS能带来多么大的性能影响，但是在中低端Android手机上面有时一个CSS就能导致你整个App性能直线下降，手机能烤鸡蛋。&lt;/p&gt;
&lt;h3 id=&quot;浏览器解析CSS方式&quot;&gt;&lt;a href=&quot;#浏览器解析CSS方式&quot; class=&quot;headerlink&quot; title=&quot;浏览器解析CSS方式&quot;&gt;&lt;/a&gt;浏览器解析CSS方式&lt;/h3&gt;&lt;p&gt;浏览器解析选择器是从右到左的方式，和我们阅读的顺序是相反的。&lt;br&gt;如下面这个CSS代码：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#00f&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;浏览器会首先从最右边寻找a元素（可能会很多），然后沿着DOM树向上查找，筛选出在li元素里面的a元素，然后继续向上面筛选，最后筛选出匹配整条规则的a元素。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-浏览器本身对CSS选择器的优化（只需了解）&quot;&gt;&lt;a href=&quot;#1-浏览器本身对CSS选择器的优化（只需了解）&quot; class=&quot;headerlink&quot; title=&quot;1.浏览器本身对CSS选择器的优化（只需了解）&quot;&gt;&lt;/a&gt;1.浏览器本身对CSS选择器的优化（只需了解）&lt;/h3&gt;&lt;p&gt;如今的浏览器已经不是几年前傻乎乎的浏览器了，它们在CSS选择器优化方面已经做得很好了，从而使我们的CSS代码能够保持良好的结构，不必太担心性能问题。&lt;br&gt;下面我们看看WebKit为核心的浏览器主要做了哪些优化工作：&lt;/p&gt;
&lt;h3 id=&quot;样式共享策略&quot;&gt;&lt;a href=&quot;#样式共享策略&quot; class=&quot;headerlink&quot; title=&quot;样式共享策略&quot;&gt;&lt;/a&gt;样式共享策略&lt;/h3&gt;&lt;p&gt;”样式共享策略“使浏览器不必再为一个已经计算过的元素样式重新计算一次。请看下面的代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;WuWei&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello,World!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果浏览器渲染引擎已经计算了第一个&amp;lt;p&amp;gt;元素的样式，那么”样式共享策略“就会让浏览器避免计算第二个&amp;lt;p&amp;gt;元素的样式，直接共享第一个&amp;lt;p&amp;gt;计算出来的样式结果。&lt;br&gt;既然我们知道了浏览器本身有这么个优化策略，那么我们在编写CSS代码的时候就要多多投其所好，提高页面渲染速度。&lt;/p&gt;
&lt;h3 id=&quot;哈希规则策略&quot;&gt;&lt;a href=&quot;#哈希规则策略&quot; class=&quot;headerlink&quot; title=&quot;哈希规则策略&quot;&gt;&lt;/a&gt;哈希规则策略&lt;/h3&gt;&lt;p&gt;我们已经知道了浏览器是从右向左开发解析匹配样式规则的，所以最右边的选择器是非常重要的。&lt;br&gt;”哈希规则策略“根据选择器最右边的部分将样式表分为若干个组。&lt;br&gt;例如下面的代码：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.legal&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#sidebar&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#sidebar&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将被分为下图中的三个组：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/16/a.png&quot; alt=&quot;three&quot; title=&quot;three&quot;&gt;&lt;br&gt;这样在渲染的时候浏览器就不必检查样式表中的每个样式规则，而是从最有可能匹配到该元素的那个样式组里面开始查找，极大提高了效率。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-书写精简的CSS代码&quot;&gt;&lt;a href=&quot;#2-书写精简的CSS代码&quot; class=&quot;headerlink&quot; title=&quot;2.书写精简的CSS代码&quot;&gt;&lt;/a&gt;2.书写精简的CSS代码&lt;/h3&gt;&lt;p&gt;a.避免过度约束&lt;br&gt;一条普通规则，不要添加不必要的约束。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/*不良代码*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul#foot&amp;#123;..&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.footer#barid&amp;#123;..&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*良好代码*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#foot&amp;#123;..&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#barid&amp;#123;..&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;b.使用紧凑语法&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*不良代码*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.foot&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-top&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-bottom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-right&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(logo.png);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-position&lt;/span&gt;:bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-repeat&lt;/span&gt;:no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*良好代码*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.foot&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#000&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(logo.png) no-repeat bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;c.精简规则&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*不良代码*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.some&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.other&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*良好代码*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.some&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.other&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.some&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.other&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-删除无效的定义&quot;&gt;&lt;a href=&quot;#3-删除无效的定义&quot; class=&quot;headerlink&quot; title=&quot;3.删除无效的定义&quot;&gt;&lt;/a&gt;3.删除无效的定义&lt;/h3&gt;&lt;p&gt;无效的定义并不会影响页面功能显示，但会影戏渲染树的执行，从而影响页面展示的性能，增加代码量的同时，也增加了浏览器解析代码的时间。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-简化Render结构&quot;&gt;&lt;a href=&quot;#4-简化Render结构&quot; class=&quot;headerlink&quot; title=&quot;4.简化Render结构&quot;&gt;&lt;/a&gt;4.简化Render结构&lt;/h3&gt;&lt;p&gt;浏览器构建渲染树的时候要解析CSS来确定渲染对象的集合属性，从而完成最终渲染树的构建。&lt;br&gt;用最简单（注意简单不是少的意思，而是让浏览器以最快的方式计算出渲染对象布局信息的意思）的CSS去样式化一个DOM，越简单的CSS样式，意味着浏览器构建DOM渲染树越快越简单，绘制的速度也会越快。&lt;/p&gt;
&lt;p&gt;简化HTML结构，可以从两方面入手：&lt;br&gt;a.去掉冗余的CSS&lt;br&gt;b.减少视觉样式&lt;/p&gt;
&lt;p&gt;a.去掉冗余的CSS&lt;br&gt;演示代码如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;info cfx&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;:none;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#333&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;:hidden;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.cfx&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;clear&lt;/span&gt;:both;&lt;span class=&quot;attribute&quot;&gt;zoom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.price&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#aaa&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.likes&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#ff5a00&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在不改变展示样式的情况下，我们可以作如下处理：&lt;br&gt;去掉div.info元素的cfx样式class，cfx的作用是清楚浮动，但是info class里面有一条属性”overflow:hidden;”同样也是可以清除浮动的，所以重复了，并且后面这种清除浮动方式更高效，因为它不同cfx，cfx需要在元素的底部生成一个不可见元素来实现清除浮动。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;info&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结合上面去掉冗余HTML代码，我们可以简化一些CSS代码，如下：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;:none;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#333&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;:hidden;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.price&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#aaa&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.likes&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#ff5a00&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;b.减少视觉样式&lt;br&gt;这里的简化是指不要用过多的同种色彩，加粗等修饰性的css属性。&lt;br&gt;例如div.info元素里面的price class和likes class的color属性可以统一成a标签的color属性，简化后的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;:none;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#333&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#afui&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.wall_item&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;:hidden;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然简化需要html和css的配合，且还需要根据UI设计师给的标注图定。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-其他注意事项-1&quot;&gt;&lt;a href=&quot;#5-其他注意事项-1&quot; class=&quot;headerlink&quot; title=&quot;5.其他注意事项&quot;&gt;&lt;/a&gt;5.其他注意事项&lt;/h3&gt;&lt;p&gt;a.避免让选择符看起来像正则表达式&lt;br&gt;CSS3高级选择器执行耗时长且不易读懂，请避免使用。&lt;/p&gt;
&lt;p&gt;b.CSS类名做状态标记的注意事项（如:active伪元素）&lt;br&gt;如果在网页中使用CSS的类来对节点做状态标记，当这些节点的状态标记类修改时，可能会触发节点的重排和重绘。这时最好只改变颜色这样只会发生重绘，不要使用会触发重排或过多重绘的属性，这样你的页面在低端手机上面会发生抖动。&lt;/p&gt;
&lt;p&gt;c.坚决不使用JS动画使用CSS3动画&lt;br&gt;JavaScript在浏览器的主线程中运行，而其中还有很多需要运行的JavaScript、样式计算、布局、绘制等对其干扰。这也就导致了线程可能出现阻塞，从而造成丢帧的情况。而浏览器可以对CSS3动画进行优化，它必要时可以创建图层，然后在主线程之外运行。&lt;br&gt;利用CSS3实现动画的时候最好用CSS类来实现，而不是通过JS来一句一句的修改元素的CSS，这样可以降低页面的重排与重绘的次数，排除强制刷新Cordova浏览器渲染引擎缓存队列的风险。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在移动开发中，下面的CSS特性是不建议用的，这样可以加快页面CSS渲染，提高页面滚动流畅度。&lt;br&gt;d.不滥用float&lt;br&gt;Float在渲染时计算量比较大，尽量减少使用，使用flex弹性布局替代。&lt;/p&gt;
&lt;p&gt;e.不滥用border-radius&lt;br&gt;Border-radius属性是用来为元素添加圆角的，但是CSS圆角会产生严重的性能问题，尤其是在低端Android手机上面。&lt;/p&gt;
&lt;p&gt;f.不滥用border-shadow&lt;br&gt;Border-shadow属性是用来为元素添加阴影的，和CSS圆角一样，也会产生严重的性能问题，尤其是在低端Android手机上面。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在移动开发中，下面的CSS特性是建议用的，而且要常用，这样可以加快页面CSS渲染，提高页面滚动流畅度。&lt;/p&gt;
&lt;p&gt;g.使用transform属性&lt;br&gt;通过节点的transform可以修改节点的位置、旋转、大小等。使用绝对定位元素的left和top属性来修改节点的位置，仍然会发生局部重排，修改时的代价还是比较大，使用translate3d不会发生重排。&lt;br&gt;另外利用translate3d、scale3d、rotate3d做动画的DOM不要嵌套的太深，也不要包含太多的元素，因为如果元素太多，太深超过GPU内存时，你的页面性能会变得非常差。&lt;/p&gt;
&lt;p&gt;h.使用display属性&lt;br&gt;这是个非常好的属性，display=none是命令浏览器不要将该元素加到渲染树中，这样该元素也就不会绘制到屏幕，可以提高GPU效率，减少内存占用，从而大大提高页面的性能。&lt;br&gt;所以对于页面上面看不到的元素根据情况尽量display none掉，注意不要使用visibility:hidden来隐藏元素，它对提高页面性能没有丝毫帮助，因为它还是会留在浏览器构建的渲染树中。&lt;/p&gt;
&lt;p&gt;i.使用absolute或fixed定位&lt;br&gt;当元素的position为static和relative时，元素属于普通的文档流，当对元素的某个操作需要重新渲染时，浏览器会渲染整个页面。如将元素的position设置为absolute和fixed可以使元素从普通DOM文档流脱离出来而独立存在，而浏览器在需要渲染时只需要渲染该元素，其容器元素和其子元素即可，从而只发生局部重排与重绘。&lt;br&gt;举例，请看下面的代码：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.wall&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;479px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;130px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们固定了.wall元素的宽度，这样还有一个好处就是因为我们的元素使用了absolute定位，所以更新.wall里面的内容的时候不会发生全局性的重排。&lt;/p&gt;
&lt;p&gt;j.使用opacity属性&lt;br&gt;透明度改变后，GPU在绘画时只是简单的降低之前已经画好的图层位图alpha值来达到效果，并不需要整体的重绘。&lt;/p&gt;
&lt;p&gt;k.使用width属性（固定元素尺寸）&lt;br&gt;如果可能的话，我们应该利用JS来将元素交给浏览器渲染之前将元素的尺寸的宽和高都计算出来，写在内联CSS样式里，这样浏览器在渲染它们的时候就不用再计算元素的尺寸，这样做的目的是响应式设计和减少浏览器的“重排”时的计算。JS的计算是廉价的，浏览器的重排与重绘代价则是昂贵的。&lt;br&gt;举例，请看下面的代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;130&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;130&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;pic&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;xxx.jpg&#39;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面代码可以看出我们直接用JS写死高度和宽度。这样做的好处是图片没有加载之前就可以渲染页面，图片加载完成渲染到页面上面时，图片外的元素不会发生全局重排和重绘，浏览器只是将图片做了一下大小比例调整绘制到页面上。另外提取固定图片的尺寸将会极大提高滚动性能。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;JS优化&quot;&gt;&lt;a href=&quot;#JS优化&quot; class=&quot;headerlink&quot; title=&quot;JS优化&quot;&gt;&lt;/a&gt;JS优化&lt;/h3&gt;&lt;p&gt;JS优化这方面的东西不能泛泛而谈了，因为JS有很多框架，每个框架的优化也不尽相同。我开发“一起玩吧App”选择的框架是Appframework，所以下面写的东西都是围绕优化Appframework展开的，但是里面的很多理念也是很值得借鉴的。&lt;br&gt;有关“Appframework”的介绍，请参考之前写过的文章：&lt;a href=&quot;http://www.vmartaw.com/2016/02/17/Appframework/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Appframework&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-快速下载安装&quot;&gt;&lt;a href=&quot;#1-快速下载安装&quot; class=&quot;headerlink&quot; title=&quot;1.快速下载安装&quot;&gt;&lt;/a&gt;1.快速下载安装&lt;/h3&gt;&lt;p&gt;“一起玩吧App”打包之后不到1.3M。1.3M？也许你觉得不可思议，因为一起玩吧App看起来内容不少。这就是利用Cordova开发App的先天优势，木有办法啊！如果把里面一些不用的东西全部剔除掉，再把文件都压缩一下，估计1M就解决了。&lt;br&gt;这对下载体验来说是非常好的—-秒下载！这听起来很酷，因为它为你的用户节省了很多时间和流量。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-快速启动&quot;&gt;&lt;a href=&quot;#2-快速启动&quot; class=&quot;headerlink&quot; title=&quot;2.快速启动&quot;&gt;&lt;/a&gt;2.快速启动&lt;/h3&gt;&lt;p&gt;在手机上面很多用户愿意用App而不愿意用手机版网站的原因大致有以下几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用手机就用App，天经地义。这是一种习惯，和PC上网站就用浏览器一样。&lt;/li&gt;
&lt;li&gt;不愿意输入网站域名，手机上面打字很麻烦（也许你会说可以保持到桌面嘛，绝大多数非IT专业的人不知道这么做）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是如果你的App打开很慢的话，很可能用户就会投到其他App的怀抱里去了。&lt;br&gt;“一起玩吧App”看起来有很多页面，但是可以做到“秒启动”，即使在低端Android上面也可以做到3秒内冷启动（关闭刚刚打开的App叫做热启动，这时候系统一般不会立即释放App刚刚占用的内存，所以一般App热启动都很快）。&lt;br&gt;那么这是如何做到的呢？&lt;br&gt;a.真正的panel延迟加载&lt;br&gt;“一起玩吧App”是使用afui（appframework ui）框架来搭建应用的架构的，是一个SPA架构。App的一个个页面在afui框架中叫做panel，它被放到不同的页面模板文件中（views目录下）。panel切换时前一个panel会被隐藏（display:none）掉。&lt;br&gt;当用户第一次切换到一个新panel时，这个panel没有加载到内存中，所以也就没有构建到DOM树种去。这样做的好处是“一起玩吧App”刚启动时只需要加载第一个panel。&lt;br&gt;本来近百个panel需要一次加载进内存，然后浏览器进行DOM树构建，而现在只需加载一个panel就OK了。&lt;br&gt;下图是切换到一个新panel的流程图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/16/56074f1bd0.png&quot; alt=&quot;flow&quot; title=&quot;flow&quot;&gt;&lt;/p&gt;
&lt;p&gt;图4：切换到新panel的流程&lt;/p&gt;
&lt;p&gt;“一起玩吧App”就是通过这种“延迟加载panel”的方式来做到快速冷启动的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-快速页面切换&quot;&gt;&lt;a href=&quot;#3-快速页面切换&quot; class=&quot;headerlink&quot; title=&quot;3.快速页面切换&quot;&gt;&lt;/a&gt;3.快速页面切换&lt;/h3&gt;&lt;p&gt;当你的页面比较简单的时候一般你碰不到“页面切换反应迟钝”的问题，尤其在高端Android手机上面，IOS上面更是不在话下。&lt;br&gt;当一个列表页比较长的时候，尤其在中低端Android手机上面，你能够比较快速地进入详情页，但是在后退到原来列表页的时候反应常常会很慢。这是因为后退到原来列表页时，浏览器要渲染，重绘原来的页面，当这个带有图片的列表页比较长的时候，这个重绘过程可能会非常的慢。&lt;br&gt;“一起玩吧App”从以下几个方面来解决这个问题：&lt;br&gt;a.快速响应用户点击事件&lt;br&gt;如果你用Cordova开发App，没有对“click”点击事件进行优化的话，那么手机操作系统本身就会强加300ms延迟才会响应你的点击事件。“一起玩吧App”使用了afui框架，该框架本身对“click”事件做了优化，所以不存在这个问题。&lt;/p&gt;
&lt;p&gt;b.页面切换时不要做耗时操作&lt;br&gt;通常作为用户点击之后希望立即看到页面响应跳转，这时候最好其他的事情都停下来（不要去掉ajax请求），只作页面跳转，如果有特效切换，要等到切换完成时再进行新页面数据加载、渲染以及旧panel事件卸载处理等等。&lt;/p&gt;
&lt;p&gt;c.少使用或不使用页面切换特效&lt;br&gt;在低端Android手机上页面切换特效常常会导致出现卡顿的情况，所以在Android上面尽量不要做特效切换。&lt;/p&gt;
&lt;p&gt;d.隐藏部分列表元素&lt;br&gt;这是最关键一点，上面说了返回列表页面之所以会耗时很长，是因为重新渲染含有图片的大量列表所造成的。&lt;br&gt;那么很自然想到，跳到详情页的时候我们隐藏掉原来列表页的大部分元素就可以了，只留下可视区域的页面不就可以了。当返回到列表页的时候，延迟100ms再将原来隐藏的元素显示出来不久可以了，实际证明，这样做是OK的。&lt;br&gt;最后需要注意的是这种方式隐藏元素需要是绝对布局的，否则你就要注意滚动条的位置了。而且经过前面的介绍，绝对布局不会引起全局的重排重绘，对于利用JS操作这种布局的元素效率会很高。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-使用好滚动插件&quot;&gt;&lt;a href=&quot;#3-使用好滚动插件&quot; class=&quot;headerlink&quot; title=&quot;3.使用好滚动插件&quot;&gt;&lt;/a&gt;3.使用好滚动插件&lt;/h3&gt;&lt;p&gt;a.不要触发无谓的“scroll”事件&lt;br&gt;b.保持滚动容器里的元素简单&lt;br&gt;c.滚动过程中不要有立即点击的交互效果&lt;br&gt;d.请尽量使用原生滚动（IOS上使用元素滚动，Android上使用JS滚动）&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-使用快速的JS模板引擎&quot;&gt;&lt;a href=&quot;#4-使用快速的JS模板引擎&quot; class=&quot;headerlink&quot; title=&quot;4.使用快速的JS模板引擎&quot;&gt;&lt;/a&gt;4.使用快速的JS模板引擎&lt;/h3&gt;&lt;p&gt;对于App和服务器之间最正确的做法就是只进行数据交互，就是不要从服务器加载大量html片段，最好只加载JSON数据。对于加载过来的数据你只需使用JS将其添加到页面文档中即可。&lt;br&gt;这时候你就需要拼接字符串了，利用JS拼接字符串是一件很痛苦的事情，也不方便维护和修改。但是你可以借助JS模板引擎，“一起玩吧App”中使用了小巧，高性能的JS模板引擎doT。&lt;/p&gt;
&lt;p&gt;下面是各种常见的JS模板引擎的测试结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/16/1955785.png&quot; alt=&quot;jsTemplate&quot; title=&quot;jsTemplate&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过对各模板引擎测试结果，可以看出&lt;br&gt;&lt;a href=&quot;https://github.com/aui/artTemplate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;artTemplate&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://github.com/PaulGuo/Juicer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;juicer&lt;/strong&gt;&lt;/a&gt;与&lt;a href=&quot;https://github.com/olado/doT&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;doT&lt;/strong&gt;&lt;/a&gt;引擎模板整体性能要有绝对优势。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;写到这里，关于“App高性能优化”的内容基本上就讲完了。但是还有一个东西值得说说——-Crosswalk。下一篇将着重介绍Crosswalk，请大家尽请期待。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;性能优秀的App标准&quot;&gt;&lt;a href=&quot;#性能优秀的App标准&quot; class=&quot;headerlink&quot; title=&quot;性能优秀的App标准&quot;&gt;&lt;/a&gt;性能优秀的App标准&lt;/h3&gt;&lt;p&gt;一个App体验好不好，关键一点在于性能，性能优秀的App，下面几个指标缺一不
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>重排与重绘</title>
    <link href="http://vmartaw.com/2016/02/18/%E9%87%8D%E6%8E%92%E4%B8%8E%E9%87%8D%E7%BB%98/"/>
    <id>http://vmartaw.com/2016/02/18/重排与重绘/</id>
    <published>2016-02-18T10:33:37.000Z</published>
    <updated>2016-02-17T10:34:54.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什么是重排与重绘&quot;&gt;&lt;a href=&quot;#什么是重排与重绘&quot; class=&quot;headerlink&quot; title=&quot;什么是重排与重绘&quot;&gt;&lt;/a&gt;什么是重排与重绘&lt;/h3&gt;&lt;p&gt;浏览器加载完用户请求的页面之后会解析生成两个内部数据结构—-DOM树和渲染树。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/17/5600fc232c4eb2.png&quot; alt=&quot;browser&quot; title=&quot;browser&quot;&gt;&lt;/p&gt;
&lt;p&gt;图1：浏览器显示页面抽象图&lt;/p&gt;
&lt;p&gt;DOM树是页面文档的结构表示，当DOM树构建完成时，浏览器开始构建渲染树。&lt;br&gt;DOM树中的每一个可见的节点（包括visibility=hidden的元素）在渲染树中至少存在一个对应的节点（display值为none的元素在渲染树中没有对应的节点）。所以渲染树是文档的可视化表示，这棵树是为了正确的绘制文档内容而建立。&lt;br&gt;渲染树中的元素可称之为渲染对象。每个渲染对象用一个和该节点的CSS盒模型相对应的矩形区域来表示，它包含诸如宽、高和位置之类的几何信息。盒模型的类型受该节点相关的display样式属性的影响。&lt;br&gt;一个渲染对象知道怎么布局及绘制自己和它的子元素。&lt;br&gt;当DOM的变化影响了元素的几何属性（宽或者高等等），浏览器需要重新计算元素的几何属性，同样其他元素的几何属性和位置也有可能会因此受到影响。&lt;br&gt;浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树，这个过程称为“重排”。完成重排后，浏览器会重新绘制受到影响的部分到屏幕，该过程称为“重绘”。&lt;br&gt;由于浏览器的流布局，对渲染树的计算通常只需要遍历一次就可以完成。&lt;br&gt;并不是所有的DOM变化都会影响几何属性，比如改变一个元素的背景色并不会影响元素的宽和高，这种情况下只会发生重绘。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;现代浏览器渲染原理&quot;&gt;&lt;a href=&quot;#现代浏览器渲染原理&quot; class=&quot;headerlink&quot; title=&quot;现代浏览器渲染原理&quot;&gt;&lt;/a&gt;现代浏览器渲染原理&lt;/h3&gt;&lt;p&gt;现代浏览器大都利用了GPU来加速网页渲染。GPU是专用于图形渲染的芯片，它很擅长做如下事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绘制位图到屏幕上&lt;/li&gt;
&lt;li&gt;对图片进行处理，例如：修改位置、旋转或缩放等等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Webkit为核心的浏览器渲染&quot;&gt;&lt;a href=&quot;#Webkit为核心的浏览器渲染&quot; class=&quot;headerlink&quot; title=&quot;Webkit为核心的浏览器渲染&quot;&gt;&lt;/a&gt;Webkit为核心的浏览器渲染&lt;/h3&gt;&lt;p&gt;浏览器在渲染一个页面时，会做如下的一些工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将DOM分割为多个图层（每个图层上有一个或多个节点）&lt;/li&gt;
&lt;li&gt;根据样式计算每个图层中节点的最终样式&lt;/li&gt;
&lt;li&gt;根据样式结果对每个节点生成图形和位置&lt;/li&gt;
&lt;li&gt;绘制每个节点并填充到图层位图中&lt;/li&gt;
&lt;li&gt;将图层位图数据传给GPU&lt;/li&gt;
&lt;li&gt;GPU组合多个图层到页面上生成最终屏幕图像&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;图层分割依据&quot;&gt;&lt;a href=&quot;#图层分割依据&quot; class=&quot;headerlink&quot; title=&quot;图层分割依据&quot;&gt;&lt;/a&gt;图层分割依据&lt;/h3&gt;&lt;p&gt;Webkit类浏览器满足以下任意情况就会创建图层：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用CSS3进行3D变换（translate3d(x,y,z)）&lt;/li&gt;
&lt;li&gt;拥有3D（WebGL）上下文或加速的2D上下文&amp;lt;canvas&amp;gt;节点&lt;/li&gt;
&lt;li&gt;使用加速视频解码的&amp;lt;video&amp;gt;节点&lt;/li&gt;
&lt;li&gt;混合插件（如Flash）&lt;/li&gt;
&lt;li&gt;对自己的opacity做CSS动画或使用一个动画变换的元素&lt;/li&gt;
&lt;li&gt;拥有硬件加速CSS过滤器的元素&lt;/li&gt;
&lt;li&gt;元素拥有一个子元素，且该子元素在自己的层里&lt;/li&gt;
&lt;li&gt;元素在一个兄弟元素上面渲染（z-index比兄弟元素高），且该兄弟元素在自己的图层里面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果图层中某个元素需要重绘，那么整个图层都需要重绘。所以图层DOM节点越少，重排和重绘的性能越好。&lt;br&gt;比如一个图层包含很多节点，其中有个gif图，gif图的每一帧都会重绘整个图层的其他节点，然后生成最终的图层位图。这时候最好强制gif图片位于自己的一个图层中去，绝大部分浏览器自己会为CSS3动画的节点创建新的图层。&lt;/p&gt;
&lt;h3 id=&quot;强制元素属于自己的图层&quot;&gt;&lt;a href=&quot;#强制元素属于自己的图层&quot; class=&quot;headerlink&quot; title=&quot;强制元素属于自己的图层&quot;&gt;&lt;/a&gt;强制元素属于自己的图层&lt;/h3&gt;&lt;p&gt;利用translateZ(0)或者translate3d(0,0,0)开启硬件加速可以使一个元素属于自己的一个层。当有了单独的层之后，此元素的重排、重绘操作将只需要更新自己，不用影响到别人。可以看做是局部更新，所以开启了硬件加速的动画会变得流畅很多。&lt;/p&gt;
&lt;h3 id=&quot;图层和CSS3动画&quot;&gt;&lt;a href=&quot;#图层和CSS3动画&quot; class=&quot;headerlink&quot; title=&quot;图层和CSS3动画&quot;&gt;&lt;/a&gt;图层和CSS3动画&lt;/h3&gt;&lt;p&gt;简化一下上述过程，每一帧动画浏览器可能需要做如下工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;计算节点样式&lt;/li&gt;
&lt;li&gt;为每个节点生成图形和位置（重排）&lt;/li&gt;
&lt;li&gt;为每个节点填充到图层位图中（重绘）&lt;/li&gt;
&lt;li&gt;组合图层到页面上（重组）&lt;br&gt;如果我们需要使得动画的性能提高，需要做的就是减少浏览器在动画运行时所需要做的工作。最好的情况是，&lt;strong&gt;改变的属性仅仅影响图层的组合&lt;/strong&gt;，变换（transform）和透明度（opacity）就属于这种情况。&lt;br&gt;现代浏览器如Chrome、Firefox、Safari和Opera都对变换和透明度采用了硬件加速。&lt;br&gt;综合上面所述得知现代浏览器在使用CSS3动画时，以下四种情形绘制的效率较高，分别是：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;改变大小（scale3d）&lt;/li&gt;
&lt;li&gt;改变位置（translate3d）&lt;/li&gt;
&lt;li&gt;旋转（rotate3d）&lt;/li&gt;
&lt;li&gt;改变透明度（opacity）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制图层的数量&quot;&gt;&lt;a href=&quot;#控制图层的数量&quot; class=&quot;headerlink&quot; title=&quot;控制图层的数量&quot;&gt;&lt;/a&gt;控制图层的数量&lt;/h3&gt;&lt;p&gt;在做页面时需要控制图层的数量，因为层的创建和更新都会消耗内存。控制图层重绘的次数是为了减少位图更新的次数。每次位图的更新，线程就需要提交新的位图给GPU，频繁地更新位图也会拖慢GPU的效率。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;不当的重排和重绘代价&quot;&gt;&lt;a href=&quot;#不当的重排和重绘代价&quot; class=&quot;headerlink&quot; title=&quot;不当的重排和重绘代价&quot;&gt;&lt;/a&gt;不当的重排和重绘代价&lt;/h3&gt;&lt;p&gt;不当的重排和重绘代价有多大？看看下面这个例子就知道了：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; times=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//codeA times次（重排+重绘）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;times;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv1&#39;&lt;/span&gt;).innerHTML+=&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//codeB 一次（重排+重绘）+times次访问DOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;times;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tmp=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv2&#39;&lt;/span&gt;).innerHTML;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s+=&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv2&#39;&lt;/span&gt;).innerHTML=s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//codeC 一次（重排+重绘）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s1=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;times;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s1+=&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv3&#39;&lt;/span&gt;).innerHTML=s1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//三次输出时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1: 16603.308ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//2: 16.307ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//3: 11.244ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面的例子可以看出一次改变DOM内容和多次改变DOM内容性能相差了千倍，这是因为每次改变DOM内容都会引起浏览器渲染引擎的重排和重绘，而Cordova App编程消耗的很多性能瓶颈也正是在这里。&lt;/p&gt;
&lt;p&gt;从上面还能计算出每次重排与重绘的时间约为8.3ms((16603-11)/2000)。从而可以算出CodeC 2000次字符串拼接用了大约3ms。&lt;br&gt;总的来说，多次访问DOM对于重排和重绘来说，耗时不值得一提，JS本身的一些计算更不值得一提。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;重排重绘何时发生&quot;&gt;&lt;a href=&quot;#重排重绘何时发生&quot; class=&quot;headerlink&quot; title=&quot;重排重绘何时发生&quot;&gt;&lt;/a&gt;重排重绘何时发生&lt;/h3&gt;&lt;p&gt;总的来说，每次DOM元素的几何属性或者内容改变时将会导致重排和重绘同时发生；每次DOM元素的非几何样式发生改变时会重绘，大致有以下几种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加、删除可见DOM元素&lt;/li&gt;
&lt;li&gt;修改可见DOM元素的颜色属性（一般仅仅导致重绘）&lt;/li&gt;
&lt;li&gt;元素位置改变&lt;/li&gt;
&lt;li&gt;元素尺寸改变&lt;/li&gt;
&lt;li&gt;页面渲染初始化（这个无法避免）&lt;/li&gt;
&lt;li&gt;浏览器窗口尺寸改变&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这些改变有的会引起全局重排与重绘，有的只会引起局部或者叫增量的重排与重绘。有的只会引起重绘，有的会引起重排与重绘都发生，下面具体看看会引起重排和重绘的CSS属性。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;触发重排的属性&quot;&gt;&lt;a href=&quot;#触发重排的属性&quot; class=&quot;headerlink&quot; title=&quot;触发重排的属性&quot;&gt;&lt;/a&gt;触发重排的属性&lt;/h3&gt;&lt;p&gt;1.盒子模型相关属性会触发重排：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.model&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;定位属性及浮动也会触发重排：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.model&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;clear&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;改变节点内部文字样式也会触发重排：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.model&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;white-space&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，它们的特点就是可能修改整个节点的大小或位置，所以会触发重排。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;触发重绘的属性&quot;&gt;&lt;a href=&quot;#触发重绘的属性&quot; class=&quot;headerlink&quot; title=&quot;触发重绘的属性&quot;&gt;&lt;/a&gt;触发重绘的属性&lt;/h3&gt;&lt;p&gt;修改时只触发重绘的属性有：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.model&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;visibility&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-shadow&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;outline&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;:;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;渲染树变化的排队和刷新&quot;&gt;&lt;a href=&quot;#渲染树变化的排队和刷新&quot; class=&quot;headerlink&quot; title=&quot;渲染树变化的排队和刷新&quot;&gt;&lt;/a&gt;渲染树变化的排队和刷新&lt;/h3&gt;&lt;p&gt;请看下面代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.width=&lt;span class=&quot;string&quot;&gt;&#39;200px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.height=&lt;span class=&quot;string&quot;&gt;&#39;100px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.borderWidth=&lt;span class=&quot;string&quot;&gt;&#39;10px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;元素的几何样式改变了3次，每次改变都会引起重排和重绘，所以总共有4次重排重绘的过程。浏览器会通过队列缓存来合并3次为一次修改来优化重排与重绘，但是，有时候你可能会不知不觉强制刷新队列并要求任务立即执行。&lt;/p&gt;
&lt;p&gt;获取布局属性信息的操作会导致队列刷新，例如：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;offsetTop&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;offsetLeft&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;offsetWidth&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;offsetHeight&lt;/span&gt;，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;clientTop&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;clientLeft&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;clientWidth&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;clientHeight&lt;/span&gt;，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;scrollTop&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;scrollLeft&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;scrollWidth&lt;/span&gt;、&lt;span class=&quot;selector-tag&quot;&gt;scrollHeight&lt;/span&gt;，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;getComputedStyle&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将上面的代码稍加修改：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.width=&lt;span class=&quot;string&quot;&gt;&#39;200px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.height=&lt;span class=&quot;string&quot;&gt;&#39;100px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ot=el.offsetTop;&lt;span class=&quot;comment&quot;&gt;//获取offsetTop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.borderWidth=&lt;span class=&quot;string&quot;&gt;&#39;10px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为offsetTop属性需要返回最新的布局信息，因此浏览器不得不清空渲染队列立马触发重排以返回正确的值（就算渲染队列中的布局改变信息和我们要获取的没有关系），所以上面的代码，前两次的操作会缓存在渲染队列中等待处理，但是一旦offsetTop属性被请求了，队列就会立即执行，所以会有2次重排与重绘，所以尽量不要在布局信息改变时做查询。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;重排重绘优化&quot;&gt;&lt;a href=&quot;#重排重绘优化&quot; class=&quot;headerlink&quot; title=&quot;重排重绘优化&quot;&gt;&lt;/a&gt;重排重绘优化&lt;/h3&gt;&lt;p&gt;1.集中修改样式&lt;br&gt;我们还是看上面的这段代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.width=&lt;span class=&quot;string&quot;&gt;&#39;200px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.height=&lt;span class=&quot;string&quot;&gt;&#39;100px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.borderWidth=&lt;span class=&quot;string&quot;&gt;&#39;10px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3个样式属性被改变，每一个都会影响元素的几何结构。虽然现代浏览器都做了优化，只会引起一次重排，但是像上文一样，如果一个即时的CSS几何属性被请求，那么就会强制刷新队列，而且这段代码4次访问DOM，一个很显然的优化策略就是把它们的操作合成一次，这样只会重排和重绘DOM一次：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;myDiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*第一种优化：使用cssText*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.cssText=&lt;span class=&quot;string&quot;&gt;&#39;width:200px;height:100px;border-width:10px;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*第二种优化：使用css class*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.className =&lt;span class=&quot;string&quot;&gt;&#39;myDivClass&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.缓存元素几何属性值&lt;br&gt;对于元素几何属性值，如果需要多次访问则可以在一次访问时先储存到变量中，之后都使用该变量，这样可以避免每次读取属性时无意间造成浏览器的渲染。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; width=el.offsetWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollLeft=el.scrollLeft;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.fragment元素的应用&lt;br&gt;看如下代码，考虑一个问题：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;framework&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;appframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;ionic&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果要添加内容为jquery-mobile、sencha-touch两个选项，可以用如下代码实现：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; liWrap=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;framework&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li.innerHTML=&lt;span class=&quot;string&quot;&gt;&#39;jquery-mobile&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;liWrap.appendChild(li);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li2=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li2.innerHTML=&lt;span class=&quot;string&quot;&gt;&#39;sencha-touch&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;liWrap.appendChild(li2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是很显然，上面的代码会导致重排重绘两次，怎么优化？&lt;br&gt;隐藏的元素不在渲染树中，我们可以先把id为framework的ul元素隐藏（display=none），然后添加li元素，最后再显示，但是实际操作中可能会出现闪动，所以不推荐使用。&lt;br&gt;删除的元素不在渲染树中，我们可以先把id为framework的ul元素删除，然后添加li元素，最后再显示，但是实际操作中也可能会出现闪动，所以不推荐使用。&lt;br&gt;但是我们还可以使用fragment这个元素，利用如下代码就OK：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; liWrap=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;framework&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fragment=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createDocumentFragment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li.innerHTML=&lt;span class=&quot;string&quot;&gt;&#39;jquery-mobile&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fragment.appendChild(li);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li2=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li2.innerHTML=&lt;span class=&quot;string&quot;&gt;&#39;sencha-touch&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fragment.appendChild(li2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;liWrap.appendChild(fragment);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;文档片段是个轻量级的Document对象，它的设计初衷就是为了完成这类重复大量的更新和移动DOM节点的。&lt;br&gt;文档片段的一个语法特性是当你附加一个片断到节点时，实际上被添加的是该片断的子节点，而不是片断本身。只触发了一次重排，而且只访问了一次实时的DOM。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是重排与重绘&quot;&gt;&lt;a href=&quot;#什么是重排与重绘&quot; class=&quot;headerlink&quot; title=&quot;什么是重排与重绘&quot;&gt;&lt;/a&gt;什么是重排与重绘&lt;/h3&gt;&lt;p&gt;浏览器加载完用户请求的页面之后会解析生成两个内部数据结构—-DOM树和渲染树。&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="CSS" scheme="http://vmartaw.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://vmartaw.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Appframework</title>
    <link href="http://vmartaw.com/2016/02/17/Appframework/"/>
    <id>http://vmartaw.com/2016/02/17/Appframework/</id>
    <published>2016-02-17T04:38:58.000Z</published>
    <updated>2016-02-18T09:05:29.000Z</updated>
    
    <content type="html">&lt;p&gt;本章主要内容：&lt;br&gt;为什么使用UI框架&lt;br&gt;框架选择&lt;br&gt;什么是appframework&lt;/p&gt;
&lt;h3 id=&quot;为什么要使用UI框架&quot;&gt;&lt;a href=&quot;#为什么要使用UI框架&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用UI框架&quot;&gt;&lt;/a&gt;为什么要使用UI框架&lt;/h3&gt;&lt;p&gt;利用Cordova开发App，为了提高性能，一般都是利用单页面应用程序（SPA）架构，原因前面已经说过。&lt;br&gt;&lt;strong&gt;通常一个比较好的UI框架会提供对SPA程序的强大支持，会提供以下功能：&lt;/strong&gt;&lt;br&gt;1.通用的函数库；&lt;br&gt;2.强大的页面路由管理功能；&lt;br&gt;3.常用的UI组件；&lt;br&gt;4.带”下拉刷新”和”无限滚动加载功能”的滚动插件；&lt;br&gt;5.通用的触摸手势；&lt;br&gt;6.对于不同的系统，系统不同版本的webview的bug修正（这个通常是最令人头疼的事情）；&lt;br&gt;7.不同系统的主题切换和其他一些功能&lt;/p&gt;
&lt;p&gt;如果这些功能你都自己实现将会花费大量时间，尤其是你项目比较紧张的时候，可能根本没有时间去做这些东西。&lt;br&gt;另外如果你的前端经验不足，那么最好先学习使用一个现成的优秀框架，研习它的代码，这样才可能自己写出更好的框架出来。&lt;br&gt;你可以重复造轮子，但是要用自己的时间来造出一个更好的轮子来，在优秀框架的基础上面，你才可能造出一个更好的框架出来。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;框架选择&quot;&gt;&lt;a href=&quot;#框架选择&quot; class=&quot;headerlink&quot; title=&quot;框架选择&quot;&gt;&lt;/a&gt;框架选择&lt;/h3&gt;&lt;p&gt;从Cordova（最初的名字是PhoneGap，现在PhoneGap是Adobe旗下的一个商业版本的Cordova品牌，增加了在线打包等服务。）诞生以后，各种为编写手机应用（包括Web App和Hybrid App）的JS、CSS、HTML前端框架层出不穷。从老牌的jquery mobile、sencha touch到后来的apframework、ionic等等。&lt;br&gt;几乎各家都号称自己的UI框架是性能最好的，最优雅的。然而你只有把每个框架都研究一下，找他们的实际demo（注意app复杂度要类似，最好一样）体验一下，你才知道该选哪个框架。&lt;br&gt;“一起玩吧App”最初选型的标准是简单、快速，并且体验了各家的demo之后最后做出了选择appframework的决定，原因有以下几点：&lt;br&gt;1.appframework核心函数库（主要用来选择操作dom用的）JQuery的模仿子集，对于熟悉JQuery的人来说极容易上手。&lt;br&gt;2.appframework UI框架很小，整个加起来（包括主要的插件但包括仿JQuery核心函数库）六千行代码左右，意味着出问题你可以阅读代码，自己修改。&lt;br&gt;3.速度快、IOS支持原生滚动（虽然有bug，”一起玩吧App”中已经修复），体验上比号称最快的ionic还要快（ionic目前在IOS上面还不支持原生滚动）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;什么是appframework&quot;&gt;&lt;a href=&quot;#什么是appframework&quot; class=&quot;headerlink&quot; title=&quot;什么是appframework&quot;&gt;&lt;/a&gt;什么是appframework&lt;/h3&gt;&lt;p&gt;appframework UI框架是一个轻量级、高性能、跨平台的、极易上手的跨平台UI移动开发框架。配合Cordova开发出性能相当不错的手机App，支持Android、IOS、Windows Phone等手机平台。appframework的前身是jQmobi，后来被intel收购，现在由intel维护、开发、推广。&lt;br&gt;这是Appframework在开源Github上的链接：&lt;a href=&quot;https://github.com/01org/appframework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;https://github.com/01org/appframework&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;appframework主要由两个部分组成：&lt;br&gt;&lt;strong&gt;一是仿JQuery精简函数库：&lt;/strong&gt;&lt;br&gt;该函数库去除了JQuery对传统浏览器的支持，包含有极快速的查询选择库。所以有更好的查询，修改dom性能，总共大约70来个API，对熟悉JQuery的来说上手非常容易。&lt;br&gt;&lt;strong&gt;二是提供了一个跨平台的UI开发框架库&lt;/strong&gt;&lt;br&gt;该UI框架对开发SPA（即单页应用程序：指的是多个业务页面（在appframework中叫做panel）其实是跑在了一个html页面）提供了强大支持。该UI库提供了页面路由功能，页面传参功能，页面分开加载功能，不同平台切换不同主题，常见元素（表单、按钮）组件。&lt;br&gt;另外通过插件机制提供了其他许多功能：如touchLayer插件提供了一个虚拟的touch层消除了点击事件的300ms延迟bug，同上还消除了Android上面的许多bug，滚动插件为你的app提供了出色的滚动性能，手势插件提供了常见的各种触摸手势事件。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;一起玩吧App中的appframework&quot;&gt;&lt;a href=&quot;#一起玩吧App中的appframework&quot; class=&quot;headerlink&quot; title=&quot;一起玩吧App中的appframework&quot;&gt;&lt;/a&gt;一起玩吧App中的appframework&lt;/h3&gt;&lt;p&gt;OK，上面我们说了appframework这个框架比其他框架简单、易学、性能好。&lt;br&gt;然而你会很快发现和市场上常用的框架一样Intel原版的框架实际上也存在诸多的问题，在以后的章节中会一一讲解给大家。Intel芯片是做的好，但是这个框架搞得实在是不得不让人对它吐糟。它们号称是跨平台，而实际上它们所做的实际工作大多数是真对IOS的，让开发Android的人心真是碎一地。&lt;br&gt;但是要声明一点，这不是appframework的错，现在红的发紫，大家趋之若鹜的ionic坑那也是遍地都是，我到现在都没有见过谁用ionic开发出来的app没有显而易见bug的，开发出来的app在六百块的Android手机上面明显卡顿。这其实不是ionic的错，不信你用原版appframework写一个和它们一样复杂度的app，估计你也不比他们好多少。但是你用深度优化过的一起玩吧里的appframework，以及后面讲到的”一起玩吧App”里面使用的各种优化技巧就会明显感觉好很多。&lt;br&gt;OK，写到这儿你可能会说，那你干嘛用appframework？不用ionic，因为appframework简单，极易上手，整个框架所有JS代码加起来勉强1W行。这意味着有bug，你可以较容易去修改它的框架，而不是到论坛里去等答案。Ionic比较大，花样概念多，&lt;strong&gt;IOS居然不支持原生滚动&lt;/strong&gt;，坑也多，性能号称最好，其实还没有原版的appframework好，你可以找市面上的ionic app和appframework app对比一下就知道，加上学习曲线陡峭（如果你底子够好appframework顶多一天时间就可以开发了，ionic得要一个星期），那不如用个简单的多好。&lt;br&gt;一起玩吧App是用了appframework框架，但不是原版的appframework框架，是在2.1版本基础上深度优化和完善的框架，在开发一起玩吧App的过程中，这个appframework框架不断的爆出各种bug，所以一起玩吧appframework框架的完善和优化是由一起玩吧App驱动的。这里也劝各位一句，要选那种已有成熟的，性能令人满意的App发布出来的框架来开发你自己的App（没有令人满意的App驱使的移动开发框架都是耍流氓）！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;为什么一起玩吧App用了2-1版本的，而没有用2-2版本或者是3-0版本的appframework？&quot;&gt;&lt;a href=&quot;#为什么一起玩吧App用了2-1版本的，而没有用2-2版本或者是3-0版本的appframework？&quot; class=&quot;headerlink&quot; title=&quot;为什么一起玩吧App用了2.1版本的，而没有用2.2版本或者是3.0版本的appframework？&quot;&gt;&lt;/a&gt;为什么一起玩吧App用了2.1版本的，而没有用2.2版本或者是3.0版本的appframework？&lt;/h3&gt;&lt;p&gt;是因为2.1版本和2.2版本没改几行代码，而3.0版本变化太大，废除了自己的JS函数库，滚动插件，touchLayer层（这些东西都要你自己去东拼西凑，那还不如用自己原来优化过的东西呢，感觉intel的路子走歪了），而这些是一起玩吧优化、完善的重要地方。优化过的appframework性能得到了很好的提升，修复了众多bug。&lt;br&gt;也许你觉得自己修改完善框架对你来说有点难度，但是这是一条通往高手的必经之路！使用Cordova开发App的最大挑战就是&lt;strong&gt;性能优化&lt;/strong&gt;，UI做的再漂亮那也是设计和美工的功劳。天下武功无所不破，唯快不破，这是决定你是一流的Cordova程序员还是二流的Cordova程序员的最重要标志。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本章主要内容：&lt;br&gt;为什么使用UI框架&lt;br&gt;框架选择&lt;br&gt;什么是appframework&lt;/p&gt;
&lt;h3 id=&quot;为什么要使用UI框架&quot;&gt;&lt;a href=&quot;#为什么要使用UI框架&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用UI框架&quot;&gt;&lt;/a&gt;为
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>浏览器内部工作原理</title>
    <link href="http://vmartaw.com/2016/02/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E9%83%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://vmartaw.com/2016/02/15/浏览器内部工作原理/</id>
    <published>2016-02-15T15:27:56.000Z</published>
    <updated>2016-02-16T08:30:41.000Z</updated>
    
    <content type="html">&lt;p&gt;每个前端都应该仔细阅读的文章！&lt;br&gt;说明本文是&lt;strong&gt;&lt;a href=&quot;http://taligarsiel.com/Projects/howbrowserswork1.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How browsers work-Behind the scenes of modern web browsers&lt;/a&gt;&lt;/strong&gt;该文翻译的&lt;/p&gt;
&lt;h2 id=&quot;浏览器如何工作-隐藏在现代浏览器背后的故事&quot;&gt;&lt;a href=&quot;#浏览器如何工作-隐藏在现代浏览器背后的故事&quot; class=&quot;headerlink&quot; title=&quot;浏览器如何工作-隐藏在现代浏览器背后的故事&quot;&gt;&lt;/a&gt;浏览器如何工作-隐藏在现代浏览器背后的故事&lt;/h2&gt;&lt;hr&gt;
&lt;h2 id=&quot;简介（Introduction）&quot;&gt;&lt;a href=&quot;#简介（Introduction）&quot; class=&quot;headerlink&quot; title=&quot;简介（Introduction）&quot;&gt;&lt;/a&gt;简介（Introduction）&lt;/h2&gt;&lt;p&gt;浏览器可能是当今使用最广泛的软件了，本节将阐述浏览器背后的工作原理，我们将看到，当你从地址栏输入google.com直到你看到google主页的过程中都发生了些什么。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-我们将要讨论的浏览器（The-browsers-we-will-talk-about）&quot;&gt;&lt;a href=&quot;#1-我们将要讨论的浏览器（The-browsers-we-will-talk-about）&quot; class=&quot;headerlink&quot; title=&quot;1.我们将要讨论的浏览器（The browsers we will talk about）&quot;&gt;&lt;/a&gt;1.我们将要讨论的浏览器（The browsers we will talk about）&lt;/h3&gt;&lt;p&gt;目前，主流的浏览器有五种–IE、Firefox、Safari、Chrome及Opera。&lt;br&gt;本文将给一些基于开源项目的浏览器的例子–Firefox、Chrome及Safari，Safari是部分开源的。&lt;br&gt;根据2015年12月份&lt;strong&gt;&lt;a href=&quot;http://www.w3schools.com/browsers/browsers_stats.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C浏览器统计数据&lt;/a&gt;&lt;/strong&gt;,Firefox、Safari及Chrome的市场占有率综合已大于90%（译注：貌似和以前比出入较大），可见开源浏览器已经占据了浏览器市场的重要地位。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-浏览器的主要功能（main-funcionality）&quot;&gt;&lt;a href=&quot;#2-浏览器的主要功能（main-funcionality）&quot; class=&quot;headerlink&quot; title=&quot;2.浏览器的主要功能（main funcionality）&quot;&gt;&lt;/a&gt;2.浏览器的主要功能（main funcionality）&lt;/h3&gt;&lt;p&gt;浏览器的主要功能是请求服务器加载用户选择的web资源并将其显示在浏览器窗口中。资源的格式通常是HTML，也包括PDF、图片等其他更多格式。用户请求的资源位置通过URI（Uniform Resource Identifier统一资源标识符）来标识，更多讨论请参加网络一篇。&lt;/p&gt;
&lt;p&gt;浏览器解释HTML文档的规则由HTML和CSS规范确定，规范由W3C组织进行维护，W3C是负责制定web标准的组织。&lt;br&gt;HTML规范的最新版本是HTML5（&lt;strong&gt;&lt;a href=&quot;https://www.w3.org/TR/html/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.w3.org/TR/html/&lt;/a&gt;&lt;/strong&gt;），CSS规范的最新版本是CSS3（&lt;a href=&quot;https://www.w3.org/TR/CSS/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;https://www.w3.org/TR/CSS/&lt;/strong&gt;&lt;/a&gt;）。&lt;br&gt;多少年来，浏览器厂商纷纷开发自己的扩展，对规范的遵循不够统一，这为web开发者带来了严重的兼容性问题。&lt;br&gt;但是，各个浏览器之间的用户界面却差不多，常见的用户界面包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用来输入URI的地址栏&lt;/li&gt;
&lt;li&gt;后退、前进按钮&lt;/li&gt;
&lt;li&gt;书签选项&lt;/li&gt;
&lt;li&gt;用于刷新及暂停当前加载文档的按钮&lt;/li&gt;
&lt;li&gt;用于返回主页的按钮&lt;br&gt;很奇怪的是，并没有哪个正式规范对用户界面做出了规定，这只是多年来各浏览器厂商之间相互模仿和不断改进的结果。&lt;br&gt;HTML5并没有规定浏览器必须具有的UI元素，但列出了一些常用元素，包括地址栏、状态栏及工具栏。当然也有一些浏览器有自己的专有功能，比如Firefox的下载管理。更多相关内容参见用户界面。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-浏览器的主要结构（High-Level-Structure）&quot;&gt;&lt;a href=&quot;#3-浏览器的主要结构（High-Level-Structure）&quot; class=&quot;headerlink&quot; title=&quot;3.浏览器的主要结构（High Level Structure）&quot;&gt;&lt;/a&gt;3.浏览器的主要结构（High Level Structure）&lt;/h3&gt;&lt;p&gt;浏览器的主要组件包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户界面－ 包括地址栏、后退/前进按钮、书签目录等，也就是你所看到的除了用来显示你所请求页面的主窗口之外的其他部分&lt;/li&gt;
&lt;li&gt;浏览器引擎－ 用来查询及操作渲染引擎的接口&lt;/li&gt;
&lt;li&gt;渲染引擎－ 用来显示请求的内容，例如，如果请求内容为html，它负责解析html及css，并将解析后的结果显示出来&lt;/li&gt;
&lt;li&gt;网络－ 用来完成网络调用，例如http请求，它具有平台无关的接口，可以在不同平台上工作&lt;/li&gt;
&lt;li&gt;UI 后端－ 用来绘制类似组合选择框及对话框等基本组件，具有不特定于某个平台的通用接口，底层使用操作系统的用户接口&lt;/li&gt;
&lt;li&gt;JS解释器－ 用来解释执行JS代码&lt;/li&gt;
&lt;li&gt;数据存储－ 属于持久层，浏览器需要在硬盘中保存类似cookie的各种数据，HTML5定义了web database技术，这是一种轻量级完整的客户端存储技术&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/layers.png&quot; alt=&quot;layers&quot; title=&quot;layers&quot;&gt;&lt;br&gt;图1：浏览器主要组件&lt;/p&gt;
&lt;p&gt;需要注意的是，不同于大部分浏览器，Chrome为每个Tab分配了各自的渲染引擎实例，每个Tab就是一个独立的进程。&lt;br&gt;对于构成浏览器的这些组件，后面会逐一详细讨论。&lt;/p&gt;
&lt;h3 id=&quot;4-组件间的通信（Communication-between-the-components）&quot;&gt;&lt;a href=&quot;#4-组件间的通信（Communication-between-the-components）&quot; class=&quot;headerlink&quot; title=&quot;4.组件间的通信（Communication between the components）&quot;&gt;&lt;/a&gt;4.组件间的通信（Communication between the components）&lt;/h3&gt;&lt;p&gt;Firefox和Chrome都开发了一个特殊的通信结构，后面将有专门的一章进行讨论。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;渲染引擎（The-rendering-engine）&quot;&gt;&lt;a href=&quot;#渲染引擎（The-rendering-engine）&quot; class=&quot;headerlink&quot; title=&quot;渲染引擎（The rendering engine）&quot;&gt;&lt;/a&gt;渲染引擎（The rendering engine）&lt;/h2&gt;&lt;p&gt;渲染引擎的职责就是渲染，即在浏览器窗口中显示所请求的内容。&lt;br&gt;默认情况下，渲染引擎可以显示html、xml文档及图片，它也可以借助插件（一种浏览器扩展）显示其他类型数据，例如使用PDF阅读器插件，可以显示PDF格式，将由专门一章讲解插件及扩展，这里只讨论渲染引擎最主要的用途——显示应用了CSS之后的html及图片。&lt;/p&gt;
&lt;h3 id=&quot;1-渲染引擎（Rendering-engines）&quot;&gt;&lt;a href=&quot;#1-渲染引擎（Rendering-engines）&quot; class=&quot;headerlink&quot; title=&quot;1.渲染引擎（Rendering engines）&quot;&gt;&lt;/a&gt;1.渲染引擎（Rendering engines）&lt;/h3&gt;&lt;p&gt;我们所讨论的浏览器–Firefox、Chrome和Safari是基于两种渲染引擎构建的。Firefox使用Gecko–Mozilla自主研发的渲染引擎，Safari和Chrome都使用webkit开源引擎。&lt;br&gt;Webkit是一款开源渲染引擎，它本来是为Linux平台研发的，后来由Apple移植到Mac及Windows上，相关内容请参考&lt;a href=&quot;https://webkit.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://webkit.org&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-主流程（The-main-flow）&quot;&gt;&lt;a href=&quot;#2-主流程（The-main-flow）&quot; class=&quot;headerlink&quot; title=&quot;2.主流程（The main flow）&quot;&gt;&lt;/a&gt;2.主流程（The main flow）&lt;/h3&gt;&lt;p&gt;渲染引擎首先通过网络获得所请求文档的内容，通常以8K分块的方式完成。&lt;br&gt;下面是渲染引擎在取得内容之后的基本流程：&lt;br&gt;解析html以构建dom树-&amp;gt;构建render树-&amp;gt;布局render树-&amp;gt;绘制render树&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/flow.png&quot; alt=&quot;flow&quot; title=&quot;flow&quot;&gt;&lt;/p&gt;
&lt;p&gt;图2：渲染引擎基本流程&lt;/p&gt;
&lt;p&gt;渲染引擎开始解析html，并将标签转化为内容树中的dom节点。接着，它解析外部CSS文件及style标签中的样式信息。这些样式信息以及html中的可见性指令将被用来构建另一棵树——render树。&lt;br&gt;Render树由一些包含有颜色和大小等属性的矩形组成，它们将被按照正确的顺序显示到屏幕上。&lt;br&gt;Render树构建好了之后，将会执行布局过程，它将确定每个节点在屏幕上的确切坐标。再下一步就是绘制，即遍历render树，并使用UI后端层绘制每个节点。&lt;br&gt;值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的html都解析完成之后再去构建和布局render树。它是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其余内容。&lt;/p&gt;
&lt;h3 id=&quot;3-主流程实例（Main-flow-examples）&quot;&gt;&lt;a href=&quot;#3-主流程实例（Main-flow-examples）&quot; class=&quot;headerlink&quot; title=&quot;3.主流程实例（Main flow examples）&quot;&gt;&lt;/a&gt;3.主流程实例（Main flow examples）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/webkitflow.png&quot; alt=&quot;webkitflow&quot; title=&quot;webkitflow&quot;&gt;&lt;/p&gt;
&lt;p&gt;图3：webkit渲染流程&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image008.jpg&quot; alt=&quot;geckoflow&quot; title=&quot;geckoflow&quot;&gt;&lt;/p&gt;
&lt;p&gt;图4：gecko渲染流程&lt;/p&gt;
&lt;p&gt;从图3和4中可以看出，尽管webkit和Gecko使用的术语稍有不同，他们的主要流程基本相同。Gecko称可见的格式化元素组成的树为frame树，每个元素都是一个frame，webkit则使用render树这个名词来命名由渲染对象组成的树。Webkit中元素的定位称为布局，而Gecko中称为回流。Webkit称利用dom节点及样式信息去构建render树的过程为attachment，Gecko在html和dom树之间附加了一层，这层称为内容接收器，相当制造dom元素的工厂。下面将讨论流程中的各个阶段。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-解析DOM结构（Parsing-and-DOM-tree-construction）&quot;&gt;&lt;a href=&quot;#4-解析DOM结构（Parsing-and-DOM-tree-construction）&quot; class=&quot;headerlink&quot; title=&quot;4.解析DOM结构（Parsing and DOM tree construction）&quot;&gt;&lt;/a&gt;4.解析DOM结构（Parsing and DOM tree construction）&lt;/h3&gt;&lt;h3 id=&quot;4-1-解析（Parsing-general）&quot;&gt;&lt;a href=&quot;#4-1-解析（Parsing-general）&quot; class=&quot;headerlink&quot; title=&quot;4.1 解析（Parsing-general）&quot;&gt;&lt;/a&gt;4.1 解析（Parsing-general）&lt;/h3&gt;&lt;p&gt;既然解析是渲染引擎中一个非常重要的过程，我们将稍微深入的研究它。首先简要介绍一下解析。&lt;br&gt;解析一个文档即将其转换为具有一定意义的结构——编码可以理解和使用的东西。解析的结果通常是表达文档结构的节点树，称为解析树或语法树。&lt;br&gt;例如，解析“2＋3－1”这个表达式，可能返回这样一棵树：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image009.png&quot; alt=&quot;numberTrees&quot; title=&quot;numberTrees&quot;&gt;&lt;/p&gt;
&lt;p&gt;图5：数字表达式树节点&lt;/p&gt;
&lt;p&gt;4.1.1 文法（Grammars）&lt;br&gt;解析基于文档依据的语法规则——文档的语言或格式。每种可被解析的格式必须具有由词汇及语法规则组成的特定的文法，称为上下文无关文法。人类语言不具有这一特性，因此不能被一般的解析技术所解析。&lt;/p&gt;
&lt;p&gt;4.1.2 解析器－词法分析器（Parser－Lexer combination）&lt;br&gt;解析可以分为两个子过程——语法分析及词法分析&lt;br&gt;词法分析就是将输入分解为符号，符号是语言的词汇表——基本有效单元的集合。对于人类语言来说，它相当于我们字典中出现的所有单词。&lt;br&gt;语法分析指对语言应用语法规则。&lt;br&gt;解析器一般将工作分配给两个组件——词法分析器（有时也叫分词器）负责将输入分解为合法的符号，解析器则根据语言的语法规则分析文档结构，从而构建解析树，词法分析器知道怎么跳过空白和换行之类的无关字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image011.png&quot; alt=&quot;parseTrees&quot; title=&quot;parseTrees&quot;&gt;&lt;/p&gt;
&lt;p&gt;图6：从源文档到解析树&lt;/p&gt;
&lt;p&gt;解析过程是迭代的，解析器从词法分析器处取道一个新的符号，并试着用这个符号匹配一条语法规则， 如果匹配了一条规则，这个符号对应的节点将被添加到解析树上，然后解析器请求另一个符号。如果没有匹配到规则，解析器将在内部保存该符号，并从词法分析器取下一个符号，直到所有内部保存的符号能够匹配一项语法规则。如果最终没有找到匹配的规则，解析器将抛出一个异常，这意味着文档无效或是包含语法错误。&lt;/p&gt;
&lt;p&gt;4.1.3 转换（Translation）&lt;br&gt;很多时候，解析树并不是最终结果。解析一般在转换中使用——将输入文档转换为另一种格式。编译就是个例子，编译器在将一段源码编译为机器码的时候，先将源码解析为解析树，然后将该树转换为一个机器码文档。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image013.png&quot; alt=&quot;translation&quot; title=&quot;translation&quot;&gt;&lt;/p&gt;
&lt;p&gt;图7：编译流程&lt;/p&gt;
&lt;p&gt;4.1.4 解析实例（Parsing example）&lt;br&gt;图5中，我们从一个数学表达式构建了一个解析树，这里定义一个简单的数学语言来看下解析过程。&lt;br&gt;词汇表：我们的语言包括整数、加号及减号。&lt;br&gt;语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该语言的语法基本单元包括表达式、term及操作符&lt;/li&gt;
&lt;li&gt;该语言可以包括多个表达式&lt;/li&gt;
&lt;li&gt;一个表达式定义为两个term通过一个操作符连接&lt;/li&gt;
&lt;li&gt;操作符可以是加号或减号&lt;/li&gt;
&lt;li&gt;term可以是一个整数或一个表达式&lt;br&gt;现在来分析一下“2＋3－1”这个输入&lt;br&gt;第一个匹配规则的子字符串是“2”，根据规则5，它是一个term，第二个匹配的是“2＋3”，它符合第2条规则——一个操作符连接两个term，下一次匹配发生在输入的结束处。“2＋3－1”是一个表达式，因为我们已经知道“2＋3”是一个term，所以我们有了一个term紧跟着一个操作符及另一个term。“2＋＋”将不会匹配任何规则，因此是一个无效输入。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.1.5 词汇表及语法的定义（Formal definitions for vocabulary and syntax）&lt;br&gt;词汇表通常利用&lt;a href=&quot;http://www.regular-expressions.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;&lt;/a&gt;来定义。&lt;br&gt;例如上面的语言可以定义为：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INTEGER：&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;｜［&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;－&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;］［&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;－&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;］＊&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PLUS：＋&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MINUS：－&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;正如看到的，这里用正则表达式定义整数。&lt;br&gt;语法通常用&lt;a href=&quot;https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;BNF&lt;/strong&gt;&lt;/a&gt;格式定义，我们的语言可以定义为：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;expression :＝ term operation term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;operation := PLUS | MINUS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;term := INTEGER | expression&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果一个语言的文法是上下文无关的，则它可以用正则解析器来解析。对上下文无关文法的一个直观的定义是，该文法可以用BNF来完整的表达。可查看&lt;a href=&quot;http://en.wikipedia.org/wiki/Context-free_grammar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://en.wikipedia.org/wiki/Context-free_grammar&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;4.1.6 解析器类型（Types of parsers）&lt;br&gt;有两种基本的解析器——自顶向下解析及自底向上解析。比较直观的解释是，自顶向下解析，查看语法的最高层结构并试着匹配其中一个；自底向上解析则从输入开始，逐步将其转换为语法规则，从底层规则开始直到匹配高层规则。&lt;br&gt;来看一下这两种解析器如何解析上面的例子：&lt;br&gt;自顶向下解析器从最高层规则开始——它先识别出“2＋3“，将其视为一个表达式，然后识别出”2＋3－1“为一个表达式（识别表达式的过程中匹配了其他规则，但出发点是最高层规则）。&lt;br&gt;自底向上解析会扫描输入直到匹配了一条规则，然后用该规则取代匹配的输入，直到解析完所有输入。部分匹配的表达式被放置在解析堆栈中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/QQ20160215-0@2x.png&quot; alt=&quot;stack&quot; title=&quot;stack&quot;&gt;&lt;/p&gt;
&lt;p&gt;自底向上解析器称为shift reduce 解析器，因为输入向右移动（想象一个指针首先指向输入开始处，并向右移动），并逐渐简化为语法规则。&lt;/p&gt;
&lt;p&gt;4.1.7 自动化解析（Generating parse automatically）&lt;br&gt;解析器生成器这个工具可以自动生成解析器，只需要指定语言的文法——词汇表及语法规则，它就可以生成一个解析器。创建一个解析器需要对解析有深入的理解，而且手动的创建一个由较好性能的解析器并不容易，所以解析生成器很有用。Webkit使用两个知名的解析生成器——用于创建语法分析器的Flex及创建解析器的Bison（你可能接触过Lex和Yacc）。Flex的输入是一个包含了符号定义的正则表达式，Bison的输入是用BNF格式表示的语法规则。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-2-HTML解析器（HTML-Parser）&quot;&gt;&lt;a href=&quot;#4-2-HTML解析器（HTML-Parser）&quot; class=&quot;headerlink&quot; title=&quot;4.2 HTML解析器（HTML Parser）&quot;&gt;&lt;/a&gt;4.2 HTML解析器（HTML Parser）&lt;/h3&gt;&lt;p&gt;HTML解析器的工作是将html标识解析为解析树。&lt;/p&gt;
&lt;p&gt;4.2.1 HTML文法定义（The HTML grammar definition）&lt;br&gt;W3C组织制定规范定义了HTML的词汇表和语法。&lt;/p&gt;
&lt;p&gt;4.2.2 非上下文无关文法（Not a context free grammar）&lt;br&gt;正如在解析简介中提到的，上下文无关文法的语法可以用类似BNF的格式来定义。&lt;br&gt;不幸的是，所有的传统解析方式都不适用于html（当然我提出它们并不只是因为好玩，它们将用来解析css和js），html不能简单的用解析所需的上下文无关文法来定义。&lt;br&gt;Html 有一个正式的格式定义——DTD（Document Type Definition 文档类型定义）——但它并不是上下文无关文法，html更接近于xml，现在有很多可用的xml解析器，html有个xml的变体——xhtml，它们间的不同在于，html更宽容，它允许忽略一些特定标签，有时可以省略开始或结束标签。总的来说，它是一种soft语法，不像xml呆板、固执。&lt;br&gt;显然，这个看起来很小的差异却带来了很大的不同。一方面，这是html流行的原因——它的宽容使web开发人员的工作更加轻松，但另一方面，这也使很难去写一个格式化的文法。所以，html的解析并不简单，它既不能用传统的解析器解析，也不能用xml解析器解析。&lt;/p&gt;
&lt;p&gt;4.2.3 HTML DTD&lt;br&gt;Html适用DTD格式进行定义，这一格式是用于定义&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language&quot; title=&quot;DOM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;SGML&lt;/strong&gt;&lt;/a&gt;家族的语言，包括了对所有允许元素及它们的属性和层次关系的定义。正如前面提到的，html DTD并没有生成一种上下文无关文法。&lt;br&gt;DTD有一些变种，标准模式只遵守规范，而其他模式则包含了对浏览器过去所使用标签的支持，这么做是为了兼容以前内容。最新的标准DTD在&lt;a href=&quot;http://www.w3.org/TR/html4/strict.dtd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/html4/strict.dtd&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.2.4 DOM&lt;br&gt;输出的树，也就是解析树，是由DOM元素及属性节点组成的。DOM是文档对象模型的缩写，它是html文档的对象表示，作为html元素的外部接口供js等调用。&lt;br&gt;树的根是“&lt;a href=&quot;https://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#i-Document&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;document&lt;/strong&gt;&lt;/a&gt;”对象。&lt;br&gt;DOM和标签基本是一一对应的关系，例如，如下的标签：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello DOM&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”example.png”&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将会被转换为下面的DOM树：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image015.png&quot; alt=&quot;DOM&quot;&gt;&lt;/p&gt;
&lt;p&gt;图8：示例标签对应的DOM树&lt;/p&gt;
&lt;p&gt;和html一样，DOM的规范也是由W3C组织制定的。访问&lt;a href=&quot;http://www.w3.org/DOM/DOMTR&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/DOM/DOMTR&lt;/strong&gt;&lt;/a&gt;，这是使用文档的一般规范。一个模型描述一种特定的html元素，可以在&lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/idl-definitions.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/idl-definitions.htm&lt;/strong&gt;&lt;/a&gt; 查看html定义。&lt;br&gt;这里所谓的树包含了DOM节点是说树是由实现了DOM接口的元素构建而成的，浏览器使用已被浏览器内部使用的其他属性的具体实现。&lt;/p&gt;
&lt;p&gt;4.2.5 解析算法（The parsing algorithm）&lt;br&gt;正如前面章节中讨论的，hmtl不能被一般的自顶向下或自底向上的解析器所解析。&lt;br&gt;原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这门语言本身的宽容特性&lt;/li&gt;
&lt;li&gt;浏览器对一些常见的非法html有容错机制&lt;/li&gt;
&lt;li&gt;解析过程是往复的，通常源码不会在解析过程中发生改变，但在html中，脚本标签包含的“document.write ”可能添加标签，这说明在解析过程中实际上修改了输入&lt;br&gt;不能使用正则解析技术，浏览器为html定制了专属的解析器。&lt;br&gt;Html5规范中描述了这个解析算法，算法包括两个阶段——符号化及构建树。&lt;br&gt;符号化是词法分析的过程，将输入解析为符号，html的符号包括开始标签、结束标签、属性名及属性值。&lt;br&gt;符号识别器识别出符号后，将其传递给树构建器，并读取下一个字符，以识别下一个符号，这样直到处理完所有输入。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image017.png&quot; alt=&quot;parsingAlgorithm&quot; title=&quot;parsingAlgorithm&quot;&gt;&lt;/p&gt;
&lt;p&gt;图9：HTML解析流程&lt;/p&gt;
&lt;p&gt;4.2.6 符号识别算法（The tokenization algorithm）&lt;br&gt;算法输出html符号，该算法用状态机表示。每次读取输入流中的一个或多个字符，并根据这些字符转移到下一个状态，当前的符号状态及构建树状态共同影响结果，这意味着，读取同样的字符，可能因为当前状态的不同，得到不同的结果以进入下一个正确的状态。&lt;br&gt;这个算法很复杂，这里用一个简单的例子来解释这个原理。&lt;br&gt;基本示例——符号化下面的html：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;初始状态为“Data State”，当遇到“&amp;lt;”字符，状态变为“Tag open state”，读取一个a－z的字符将产生一个开始标签符号，状态相应变为“Tag name state”，一直保持这个状态直到读取到“&amp;gt;”，每个字符都附加到这个符号名上，例子中创建的是一个html符号。&lt;br&gt;当读取到“&amp;gt;”，当前的符号就完成了，此时，状态回到“Data state”，“&amp;lt;body&amp;gt;”重复这一处理过程。到这里，html和body标签都识别出来了。现在，回到“Data state”，读取“Hello world”中的字符“H”将创建并识别出一个字符符号，这里会为“Hello world”中的每个字符生成一个字符符号。&lt;br&gt;这样直到遇到“&amp;lt;/body&amp;gt;”中的“&amp;lt;”。现在，又回到了“Tag open state”，读取下一个字符“/”将创建一个闭合标签符号，并且状态转移到“Tag name state”，还是保持这一状态，直到遇到“&amp;gt;”。然后，产生一个新的标签符号并回到“Data state”。后面的“&amp;lt;/html&amp;gt;”将和“&amp;lt;/body&amp;gt;”一样处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image019.png&quot; alt=&quot;tokenizationAlgorithm&quot; title=&quot;tokenizationAlgorithm&quot;&gt;&lt;/p&gt;
&lt;p&gt;图10：符号化示例输入&lt;/p&gt;
&lt;p&gt;4.2.7 树的构建算法（Tree construction algorithm）&lt;br&gt;在树的构建阶段，将修改以Document为根的DOM树，将元素附加到树上。每个由符号识别器识别生成的节点将会被树构造器进行处理，规范中定义了每个符号相对应的Dom元素，对应的Dom元素将会被创建。这些元素除了会被添加到Dom树上，还将被添加到开放元素堆栈中。这个堆栈用来纠正嵌套的未匹配和未闭合标签，这个算法也是用状态机来描述，所有的状态采用插入模式。&lt;br&gt;来看一下示例中树的创建过程：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;构建树这一阶段的输入是符号识别阶段生成的符号序列。&lt;br&gt;首先是“initial mode”，接收到html符号后将转换为“before html”模式，在这个模式中对这个符号进行再处理。此时，创建了一个HTMLHtmlElement元素，并将其附加到根Document对象上。&lt;br&gt;状态此时变为“before head”，接收到body符号时，即使这里没有head符号，也将自动创建一个HTMLHeadElement元素并附加到树上。&lt;br&gt;现在，转到“in head”模式，然后是“after head”。到这里，body符号会被再次处理，将创建一个HTMLBodyElement并插入到树中，同时，转移到“in body”模式。&lt;br&gt;然后，接收到字符串“Hello world”的字符符号，第一个字符将导致创建并插入一个text节点，其他字符将附加到该节点。&lt;br&gt;接收到body结束符号时，转移到“after body”模式，接着接收到html结束符号，这个符号意味着转移到了“after after body”模式，当接收到文件结束符时，整个解析过程结束。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image022.gif&quot; alt=&quot;constructionAlgorithm&quot; title=&quot;constructionAlgorithm&quot;&gt;&lt;/p&gt;
&lt;p&gt;图11：示例html树的构建过程&lt;/p&gt;
&lt;p&gt;4.2.8 解析结束时的处理（Action when the parsing is finished）&lt;br&gt;在这个阶段，浏览器将文档标记为可交互的，并开始解析处于延时模式中的脚本——这些脚本在文档解析后执行。&lt;br&gt;文档状态将被设置为完成，同时触发一个load事件。&lt;br&gt;Html5规范中有符号化及构建树的完整算法(&lt;a href=&quot;http://www.w3.org/TR/html5/syntax.html#html-parser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/html5/syntax.html#html-parser&lt;/strong&gt;&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;4.2.9 浏览器容错（Browsers error tolerance）&lt;br&gt;你从来不会在一个html页面上看到“无效语法”这样的错误，浏览器修复了无效内容并继续工作。&lt;br&gt;以下面这段html为例：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;mytag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;mytag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Really lousy HTML&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段html违反了很多规则（mytag不是合法的标签，p及div错误的嵌套等等），但是浏览器仍然可以没有任何怨言的继续显示，它在解析的过程中修复了html作者的错误。&lt;br&gt;浏览器都具有错误处理的能力，但是，另人惊讶的是，这并不是html最新规范的内容，就像书签及前进后退按钮一样，它只是浏览器长期发展的结果。一些比较知名的非法html结构，在许多站点中出现过，浏览器都试着以一种和其他浏览器一致的方式去修复。&lt;br&gt;Html5规范定义了这方面的需求，webkit在html解析类开始部分的注释中做了很好的总结。&lt;br&gt;解析器将符号化的输入解析为文档并创建文档，但不幸的是，我们必须处理很多没有很好格式化的html文档，至少要小心下面几种错误情况。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在未闭合的标签中添加明确禁止的元素。这种情况下，应该先将前一标签闭合&lt;/li&gt;
&lt;li&gt;不能直接添加元素。有些人在写文档的时候会忘了中间一些标签（或者中间标签是可选的），比如HTML HEAD BODY TR TD LI等&lt;/li&gt;
&lt;li&gt;想在一个行内元素中添加块状元素。关闭所有的行内元素，直到下一个更高的块状元素&lt;/li&gt;
&lt;li&gt;如果这些都不行，就闭合当前标签直到可以添加该元素。&lt;br&gt;下面来看一些webkit容错的例子：&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;替代&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一些网站使用“&amp;lt;/br&amp;gt;”替代“&amp;lt;br&amp;gt;”，为了兼容IE和Firefox，webkit将其看作“&amp;lt;br&amp;gt;”。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t-&amp;gt;isCloseTag(brTag) &amp;amp;&amp;amp; m_document-&amp;gt;inCompatMode()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reportError(MalformedBRError);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t-&amp;gt;beginTag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Note－这里的错误处理在内部进行，用户看不到。&lt;/p&gt;
&lt;p&gt;迷路的表格（A stray table）&lt;br&gt;这指一个表格嵌套在另一个表格中，但不在它的某个单元格内。&lt;br&gt;比如下面这个例子：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;inner table&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;outer table&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webkit将会将嵌套的表格变为两个兄弟表格：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;outer table&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;inner table&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (m_inStrayTableContent &amp;amp;&amp;amp; localName == tableTag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;popBlock(tableTag);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;webkit使用堆栈存放当前的元素内容，它将从外部表格的堆栈中弹出内部的表格，则它们变为了兄弟表格。&lt;/p&gt;
&lt;p&gt;嵌套的表单元素（Nested form elements）&lt;br&gt;用户将一个表单嵌套到另一个表单中，则第二个表单将被忽略。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!m_currentFormElement) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m_currentFormElement = new HTMLFormElement(formTag, m_document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;太深的标签继承（A too deep tag hierarchy）&lt;br&gt;www.liceo.edu.mx是一个由嵌套层次的站点的例子，最多只允许20个相同类型的标签嵌套，多出来的将被忽略。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; HTMLParser::allowNestedRedundantTag(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AtomicString&amp;amp; tagName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (HTMLStackElem* curr = m_blockStack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i &amp;lt; cMaxRedundantTagDepth &amp;amp;&amp;amp; curr &amp;amp;&amp;amp; curr-&amp;gt;tagName == tagName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curr = curr-&amp;gt;next, i++) &amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return i != cMaxRedundantTagDepth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;放错了地方的html、body闭合标签（Misplaced html or body end tags）&lt;br&gt;又一次不言自明。&lt;br&gt;支持不完整的html。我们从来不闭合body，因为一些愚蠢的网页总是在还未真正结束时就闭合它。我们依赖调用end方法去执行关闭的处理。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t-&amp;gt;tagName == htmlTag || t-&amp;gt;tagName == bodyTag )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以，web开发者要小心了，除非你想成为webkit容错代码的范例，否则还是写格式良好的html吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-3-CSS解析（CSS-parsing）&quot;&gt;&lt;a href=&quot;#4-3-CSS解析（CSS-parsing）&quot; class=&quot;headerlink&quot; title=&quot;4.3 CSS解析（CSS parsing）&quot;&gt;&lt;/a&gt;4.3 CSS解析（CSS parsing）&lt;/h3&gt;&lt;p&gt;还记得简介中提到的解析的概念吗，不同于html，css属于上下文无关文法，可以用前面所描述的解析器来解析。Css规范定义了css的词法及语法文法 (&lt;a href=&quot;http://www.w3.org/TR/CSS2/grammar.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/CSS2/grammar.html&lt;/strong&gt;&lt;/a&gt;)。&lt;br&gt;看一些例子：&lt;br&gt;每个符号都由正则表达式定义了词法文法（词汇表）：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;comment &lt;span class=&quot;comment&quot;&gt;///*[^*]*/*+([^/*][^*]*/*+)*//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;]+|[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;]*”.”[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;]+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nonascii [/&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;-/&lt;span class=&quot;number&quot;&gt;377&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nmstart [_a-z]|&amp;#123;nonascii&amp;#125;|&amp;#123;escape&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nmchar [_a-z0&lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;-]|&amp;#123;nonascii&amp;#125;|&amp;#123;escape&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name &amp;#123;nmchar&amp;#125;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ident &amp;#123;nmstart&amp;#125;&amp;#123;nmchar&amp;#125;*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;“ident”是识别器的缩写，相当于一个class名，“name”是一个元素id（用“＃”引用）。&lt;br&gt;语法用BNF进行描述：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruleset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: selector [ &#39;,&#39; S* selector ]*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‘&amp;#123;’ S* declaration [ &#39;;&#39; S* declaration ]* ‘&amp;#125;’ S*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;selector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: simple_selector [ combinator selector | S+ [ combinator selector ] ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;simple_selector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: element_name [ HASH | class | attrib | pseudo ]*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| [ HASH | class | attrib | pseudo ]+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: ‘.’ IDENT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;element_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: IDENT | ‘*’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;attrib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: ‘[&#39; S* IDENT S* [ [ &#39;=&#39; | INCLUDES | DASHMATCH ] S*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ IDENT | STRING ] S* ] ‘]’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pseudo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;: ‘:’ [ IDENT | FUNCTION S* [IDENT S*] ‘)’ ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;说明：一个规则集合有这样的结构&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.error&lt;/span&gt; , &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.error&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;:bold;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;div.error和a.error时选择器，大括号中的内容包含了这条规则集合中的规则，这个结构在下面的定义中正式的定义了：&lt;br&gt;ruleset&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;: selector [ &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt; S* selector ]*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‘&amp;#123;’ S* declaration [ &lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt; S* declaration ]* ‘&amp;#125;’ S*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这说明，一个规则集合具有一个或是可选个数的多个选择器，这些选择器以逗号和空格（S表示空格）进行分隔。每个规则集合包含大括号及大括号中的一条或多条以分号隔开的声明。声明和选择器在后面进行定义。&lt;/p&gt;
&lt;p&gt;4.3.1 Webkit CSS 解析器 Webkit CSS parser&lt;br&gt;Webkit使用Flex和Bison解析生成器从CSS语法文件中自动生成解析器。回忆一下解析器的介绍，Bison创建一个自底向上的解析器，Firefox使用自顶向下解析器。它们都是将每个css文件解析为样式表对象，每个对象包含css规则，css规则对象包含选择器和声明对象，以及其他一些符合css语法的对象。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image023.png&quot; alt=&quot;WebkitCSSParser&quot; title=&quot;WebkitCSSParser&quot;&gt;&lt;/p&gt;
&lt;p&gt;图12：解析css&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-4-脚本解析（Parsing-scripts）&quot;&gt;&lt;a href=&quot;#4-4-脚本解析（Parsing-scripts）&quot; class=&quot;headerlink&quot; title=&quot;4.4 脚本解析（Parsing scripts）&quot;&gt;&lt;/a&gt;4.4 脚本解析（Parsing scripts）&lt;/h3&gt;&lt;p&gt;本章将介绍Javascript。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-5-处理脚本及样式表的顺序（The-order-of-processing-scripts-and-style-sheets）&quot;&gt;&lt;a href=&quot;#4-5-处理脚本及样式表的顺序（The-order-of-processing-scripts-and-style-sheets）&quot; class=&quot;headerlink&quot; title=&quot;4.5 处理脚本及样式表的顺序（The order of processing scripts and style sheets）&quot;&gt;&lt;/a&gt;4.5 处理脚本及样式表的顺序（The order of processing scripts and style sheets）&lt;/h3&gt;&lt;p&gt;4.5.1 脚本（Scripts）&lt;br&gt;web的模式是同步的，开发者希望解析到一个script标签时立即解析执行脚本，并阻塞文档的解析直到脚本执行完。如果脚本是外引的，则网络必须先请求到这个资源——这个过程也是同步的，会阻塞文档的解析直到资源被请求到。这个模式保持了很多年，并且在html4及html5中都特别指定了。开发者可以将脚本标识为defer，以使其不阻塞文档解析，并在文档解析结束后执行。Html5增加了标记脚本为异步的选项，以使脚本的解析执行使用另一个线程。&lt;/p&gt;
&lt;p&gt;4.5.2 预解析（Speculative parsing）&lt;br&gt;Webkit和Firefox都做了这个优化，当执行脚本时，另一个线程解析剩下的文档，并加载后面需要通过网络加载的资源。这种方式可以使资源并行加载从而使整体速度更快。需要注意的是，预解析并不改变Dom树，它将这个工作留给主解析过程，自己只解析外部资源的引用，比如外部脚本、样式表及图片。&lt;/p&gt;
&lt;p&gt;4.5.3 样式表（Style sheets）&lt;br&gt;样式表采用另一种不同的模式。理论上，既然样式表不改变Dom树，也就没有必要停下文档的解析等待它们，然而，存在一个问题，脚本可能在文档的解析过程中请求样式信息，如果样式还没有加载和解析，脚本将得到错误的值，显然这将会导致很多问题，这看起来是个边缘情况，但确实很常见。Firefox在存在样式表还在加载和解析时阻塞所有的脚本，而chrome只在当脚本试图访问某些可能被未加载的样式表所影响的特定的样式属性时才阻塞这些脚本。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-渲染树的构造（Render-tree-construction）&quot;&gt;&lt;a href=&quot;#5-渲染树的构造（Render-tree-construction）&quot; class=&quot;headerlink&quot; title=&quot;5.渲染树的构造（Render tree construction）&quot;&gt;&lt;/a&gt;5.渲染树的构造（Render tree construction）&lt;/h3&gt;&lt;p&gt;当Dom树构建完成时，浏览器开始构建另一棵树——渲染树。渲染树由元素显示序列中的可见元素组成，它是文档的可视化表示，构建这棵树是为了以正确的顺序绘制文档内容。&lt;br&gt;Firefox将渲染树中的元素称为frames，webkit则用renderer或渲染对象来描述这些元素。&lt;br&gt;一个渲染对象直到怎么布局及绘制自己及它的children。&lt;br&gt;RenderObject是Webkit的渲染对象基类，它的定义如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RenderObject&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;virtual &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;virtual &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;paint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PaintInfo)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;virtual &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; rect &lt;span class=&quot;title&quot;&gt;repaintRect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Node* node; &lt;span class=&quot;comment&quot;&gt;//the DOM node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RenderStyle* style; &lt;span class=&quot;comment&quot;&gt;// the computed style&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RenderLayer* containgLayer; &lt;span class=&quot;comment&quot;&gt;//the containing z-index layer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每个渲染对象用一个和该节点的css盒模型相对应的矩形区域来表示，正如css2所描述的那样，它包含诸如宽、高和位置之类的几何信息。盒模型的类型受该节点相关的display样式属性的影响（参考样式计算章节）。下面的webkit代码说明了如何根据display属性决定某个节点创建何种类型的渲染对象。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RenderObject* RenderObject::createObject(Node* node, RenderStyle* style)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document* doc = node-&amp;gt;document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RenderArena* arena = doc-&amp;gt;renderArena();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RenderObject* o = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (style-&amp;gt;display()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NONE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; INLINE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o = new (arena) RenderInline(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; BLOCK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o = new (arena) RenderBlock(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; INLINE_BLOCK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o = new (arena) RenderBlock(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LIST_ITEM:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o = new (arena) RenderListItem(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return o;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;元素的类型也需要考虑，例如，表单控件和表格带有特殊的框架。&lt;br&gt;在webkit中，如果一个元素想创建一个特殊的渲染对象，它需要复写“createRenderer”方法，使渲染对象指向不包含几何信息的样式对象。&lt;/p&gt;
&lt;p&gt;5.1 渲染树和Dom树的关系（The render tree relation to the DOM tree）&lt;br&gt;渲染对象和Dom元素相对应，但这种对应关系不是一对一的，不可见的Dom元素不会被插入渲染树，例如head元素。另外，display属性为none的元素也不会在渲染树中出现（visibility属性为hidden的元素将出现在渲染树中）。&lt;br&gt;还有一些Dom元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。例如，select元素有三个渲染对象——一个显示区域、一个下拉列表及一个按钮。同样，当文本因为宽度不够而折行时，新行将作为额外的渲染元素被添加。另一个多个渲染对象的例子是不规范的html，根据css规范，一个行内元素只能仅包含行内元素或仅包含块状元素，在存在混合内容时，将会创建匿名的块状渲染对象包裹住行内元素。&lt;br&gt;一些渲染对象和所对应的Dom节点不在树上相同的位置，例如，浮动和绝对定位的元素在文本流之外，在两棵树上的位置不同，渲染树上标识出真实的结构，并用一个占位结构标识出它们原来的位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image025.png&quot; alt=&quot;corresponding&quot; title=&quot;corresponding&quot;&gt;&lt;/p&gt;
&lt;p&gt;图12：渲染树及对应的Dom树&lt;/p&gt;
&lt;p&gt;5.2 创建树的流程（The flow of constructing the tree）&lt;br&gt;Firefox中，表述为一个监听Dom更新的监听器，将frame的创建委派给Frame Constructor，这个构建器计算样式（参看样式计算）并创建一个frame。&lt;br&gt;Webkit中，计算样式并生成渲染对象的过程称为attachment，每个Dom节点有一个attach方法，attachment的过程是同步的，调用新节点的attach方法将节点插入到Dom树中。&lt;br&gt;处理html和body标签将构建渲染树的根，这个根渲染对象对应被css规范称为containing block的元素——包含了其他所有块元素的顶级块元素。它的大小就是viewport——浏览器窗口的显示区域，Firefox称它为viewPortFrame，webkit称为RenderView，这个就是文档所指向的渲染对象，树中其他的部分都将作为一个插入的Dom节点被创建。&lt;/p&gt;
&lt;p&gt;5.3 样式计算（Style Computation）&lt;br&gt;创建渲染树需要计算出每个渲染对象的可视属性，这可以通过计算每个元素的样式属性得到。&lt;br&gt;样式包括各种来源的样式表，行内样式元素及html中的可视化属性（例如bgcolor），可视化属性转化为css样式属性。&lt;br&gt;样式表来源于浏览器默认样式表，及页面作者和用户提供的样式表——有些样式是浏览器用户提供的（浏览器允许用户定义喜欢的样式，例如，在Firefox中，可以通过在Firefox Profile目录下放置样式表实现）。&lt;br&gt;计算样式的一些困难：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;样式数据是非常大的结构，保存大量的样式属性会带来内存问题&lt;/li&gt;
&lt;li&gt;如果不进行优化，找到每个元素匹配的规则会导致性能问题，为每个元素查找匹配的规则都需要遍历整个规则表，这个过程有很大的工作量。选择符可能有复杂的结构，匹配过程如果沿着一条开始看似正确，后来却被证明是无用的路径，则必须去尝试另一条路径。&lt;br&gt;例如，下面这个复杂选择符&lt;br&gt;div div div div｛…｝&lt;br&gt;这意味着规则应用到三个div的后代div元素，选择树上一条特定的路径去检查，这可能需要遍历节点树，最后却发现它只是两个div的后代，并不使用该规则，然后则需要沿着另一条路径去尝试&lt;/li&gt;
&lt;li&gt;应用规则涉及非常复杂的级联，它们定义了规则的层次&lt;br&gt;我们来看一下浏览器如何处理这些问题：&lt;br&gt;共享样式数据（Sharing style data）&lt;br&gt;webkit节点引用样式对象（渲染样式），某些情况下，这些对象可以被节点间共享，这些节点需要是兄弟或是表兄弟节点，并且：&lt;br&gt;1）这些元素必须处于相同的鼠标状态（比如不能一个处于hover，而另一个不是）&lt;br&gt;2）不能有元素具有id&lt;br&gt;3）标签名必须匹配&lt;br&gt;4）lass属性必须匹配&lt;br&gt;5）对应的属性必须相同&lt;br&gt;6）链接状态必须匹配&lt;br&gt;7）焦点状态必须匹配&lt;br&gt;8）不能有元素被属性选择器影响&lt;br&gt;9）元素不能有行内样式属性&lt;br&gt;10）不能有生效的兄弟选择器，webcore在任何兄弟选择器相遇时只是简单的抛出一个全局转换，并且在它们显示时使整个文档的样式共享失效，这些包括＋选择器和类似:first-child和:last-child这样的选择器。 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Firefox规则树（Firefox rule tree）&lt;br&gt;Firefox用两个树用来简化样式计算－规则树和样式上下文树，webkit也有样式对象，但它们并没有存储在类似样式上下文树这样的树中，只是由Dom节点指向其相关的样式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image035.png&quot; alt=&quot;FirefoxTree&quot; title=&quot;FirefoxTree&quot;&gt;&lt;/p&gt;
&lt;p&gt;图14：Firefox样式上下文树&lt;/p&gt;
&lt;p&gt;样式上下文包含最终值，这些值是通过以正确顺序应用所有匹配的规则，并将它们由逻辑值转换为具体的值，例如，如果逻辑值为屏幕的百分比，则通过计算将其转化为绝对单位。样式树的使用确实很巧妙，它使得在节点中共享的这些值不需要被多次计算，同时也节省了存储空间。&lt;br&gt;所有匹配的规则都存储在规则树中，一条路径中的底层节点拥有最高的优先级，这棵树包含了所找到的 所有规则匹配的路径（译注：可以取巧理解为每条路径对应一个节点，路径上包含了该节点所匹配的所有规则）。规则树并不是一开始就为所有节点进行计算，而是 在某个节点需要计算样式时，才进行相应的计算并将计算后的路径添加到树中。&lt;br&gt;我们将树上的路径看成辞典中的单词，假如已经计算出了如下的规则树：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/tree.png&quot; alt=&quot;tree&quot; title=&quot;tree&quot;&gt;&lt;/p&gt;
&lt;p&gt;假如需要为内容树中的另一个节点匹配规则，现在知道匹配的规则（以正确的顺序）为B-E-I，因为我们已经计算出了路径A-B-E-I-L，所以树上已经存在了这条路径，剩下的工作就很少了。&lt;br&gt;现在来看一下树如何保存。&lt;/p&gt;
&lt;p&gt;结构化（Division into structs）&lt;br&gt;样式上下文按结构划分，这些结构包括类似border或color这样的特定分类的样式信息。一个结构中的所有特性不是继承的就是非继承的，对继承的特性，除非元素自身有定义，否则就从它的parent继承。非继承的特性（称为reset特性）如果没有定义，则使用默认的值。&lt;br&gt;样式上下文树缓存完整的结构（包括计算后的值），这样，如果底层节点没有为一个结构提供定义，则使用上层节点缓存的结构。&lt;/p&gt;
&lt;p&gt;使用规则树计算样式上下文（Computing the style contexts using the rule tree）&lt;br&gt;当为一个特定的元素计算样式时，首先计算出规则树中的一条路径，或是使用已经存在的一条，然后使 用路径中的规则去填充新的样式上下文，从样式的底层节点开始，它具有最高优先级（通常是最特定的选择器），遍历规则树，直到填满结构。如果在那个规则节点 没有定义所需的结构规则，则沿着路径向上，直到找到该结构规则。&lt;br&gt;如果最终没有找到该结构的任何规则定义，那么如果这个结构是继承型的，则找到其在内容树中的parent的结构，这种情况下，我们也成功的共享了结构；如果这个结构是reset型的，则使用默认的值。&lt;br&gt;如果特定的节点添加了值，那么需要做一些额外的计算以将其转换为实际值，然后在树上的节点缓存该值，使它的children可以使用。&lt;br&gt;当一个元素和它的一个兄弟元素指向同一个树节点时，完整的样式上下文可以被它们共享。&lt;br&gt;来看一个例子：假设有下面这段html&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”err”&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”div1″&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;this is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”big”&lt;/span&gt;&amp;gt;&lt;/span&gt; big error &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this is also a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”big”&lt;/span&gt;&amp;gt;&lt;/span&gt; very big error&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”err”&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”div2″&lt;/span&gt;&amp;gt;&lt;/span&gt;another error&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以及下面这些规则：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:black&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.err&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.big&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#div1&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:blue&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#div2&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:green&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简化下问题，我们只填充两个结构——color和margin，color结构只包含一个成员－颜色，margin结构包含四边。&lt;br&gt;生成的规则树如下（节点名：指向的规则）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image027.png&quot; alt=&quot;ruleTree&quot; title=&quot;ruleTree&quot;&gt;&lt;/p&gt;
&lt;p&gt;上下文树如下（节点名：指向的规则节点）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image029.png&quot; alt=&quot;contextTree&quot; title=&quot;contextTree&quot;&gt;&lt;/p&gt;
&lt;p&gt;假设我们解析html，遇到第二个div标签，我们需要为这个节点创建样式上下文，并填充它的样式结构。&lt;br&gt;我们进行规则匹配，找到这个div匹配的规则为1、2、6，我们发现规则树上已经存在了一条我们可以使用的路径1、2，我们只需为规则6新增一个节点添加到下面（就是规则树中的F）。&lt;br&gt;然后创建一个样式上下文并将其放到上下文树中，新的样式上下文将指向规则树中的节点F。&lt;br&gt;现在我们需要填充这个样式上下文，先从填充margin结构开始，既然最后一个规则节点没有添加margin结构，沿着路径向上，直到找到缓存的前面插入节点计算出的结构，我们发现B是最近的指定margin值的节点。因为已经有了color结构的定义，所以不能使用缓存的结构，既然color只有一个属性，也就不需要沿着路径向上填充其他属性。计算出最终值（将字符串转换为RGB等），并缓存计算后的结构。&lt;br&gt;第二个span元素更简单，进行规则匹配后发现它指向规则G，和前一个span一样，既然有兄弟节点指向同一个节点，就可以共享完整的样式上下文，只需指向前一个span的上下文。&lt;br&gt;因为结构中包含继承自parent的规则，上下文树做了缓存（color特性是继承来的，但Firefox将其视为reset并在规则树中缓存）。&lt;br&gt;例如，如果我们为一个paragraph的文字添加规则：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;p &amp;#123;font-family:Verdana;font size:10px;font-weight:bold&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么这个p在内容树中的子节点div，会共享和它parent一样的font结构，这种情况发生在没有为这个div指定font规则时。&lt;br&gt;Webkit中，并没有规则树，匹配的声明会被遍历四次，先是应用非important的高优先级属性（之所以先应用这些属性，是因为其他的依赖于它们－比如display），其次是高优先级important的，接着是一般优先级非important的，最后是一般优先级important的规则。这样，出现多次的属性将被按照正确的级联顺序进行处理，最后一个生效。&lt;br&gt;总结一下，共享样式对象（结构中完整或部分内容）解决了问题1和3，Firefox的规则树帮助以正确的顺序应用规则。&lt;/p&gt;
&lt;p&gt;对规则进行处理以简化匹配过程（Manipulating the rules for an easy match）&lt;br&gt;样式规则有几个来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外部样式表或style标签内的css规则&lt;/li&gt;
&lt;li&gt;行内样式属性&lt;/li&gt;
&lt;li&gt;html可视化属性（映射为相应的样式规则）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后面两个很容易匹配到元素，因为它们所拥有的样式属性和html属性可以将元素作为key进行映射。&lt;br&gt;就像前面问题2所提到的，css的规则匹配可能很狡猾，为了解决这个问题，可以先对规则进行处理，以使其更容易被访问。&lt;br&gt;解析完样式表之后，规则会根据选择符添加一些hash映射，映射可以是根据id、class、标签名或是任何不属于这些分类的综合映射。如果选择符为id，规则将被添加到id映射，如果是class，则被添加到class映射，等等。&lt;br&gt;这个处理是匹配规则更容易，不需要查看每个声明，我们能从映射中找到一个元素的相关规则，这个优化使在进行规则匹配时减少了95＋％的工作量。&lt;/p&gt;
&lt;p&gt;来看下面的样式规则：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.error&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:red&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#messageDiv&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一条规则将被插入class映射，第二条插入id映射，第三条是标签映射。&lt;br&gt;下面这个html片段：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”error”&lt;/span&gt;&amp;gt;&lt;/span&gt;an error occurred &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;messageDiv&lt;/span&gt;”&amp;gt;&lt;/span&gt;this is a message&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们首先找到p元素对应的规则，class映射将包含一个“error”的key，找到p.error的规则，div在id映射和标签映射中都有相关的规则，剩下的工作就是找出这些由key对应的规则中哪些确实是正确匹配的。&lt;br&gt;例如，如果div的规则是&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &amp;#123;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这也是标签映射产生的，因为key是最右边的选择符，但它并不匹配这里的div元素，因为这里的div没有table祖先。&lt;br&gt;Webkit和Firefox都会做这个处理。&lt;/p&gt;
&lt;p&gt;以正确的级联顺序应用规则（Applying the rules in the correct cascade order）&lt;br&gt;样式对象拥有对应所有可见属性的属性，如果特性没有被任何匹配的规则所定义，那么一些特性可以从parent的样式对象中继承，另外一些使用默认值。&lt;br&gt;这个问题的产生是因为存在不止一处的定义，这里用级联顺序解决这个问题。&lt;/p&gt;
&lt;p&gt;样式表的级联顺序（Style sheet cascade order）&lt;br&gt;一个样式属性的声明可能在几个样式表中出现，或是在一个样式表中出现多次，因此，应用规则的顺序至关重要，这个顺序就是级联顺序。根据css2的规范，级联顺序为（从低到高）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器声明&lt;/li&gt;
&lt;li&gt;用户声明&lt;/li&gt;
&lt;li&gt;作者的一般声明&lt;/li&gt;
&lt;li&gt;作者的important声明&lt;/li&gt;
&lt;li&gt;用户important声明&lt;br&gt;浏览器声明是最不重要的，用户只有在声明被标记为important时才会覆盖作者的声明。具有同等级别的声明将根据specifity以及它们被定义时的顺序进行排序。Html可视化属性将被转换为匹配的css声明，它们被视为最低优先级的作者规则。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;特异性（Specifity）&lt;br&gt;CSS2规范中定义的选择符specifity如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果声明来自style属性，而不是一个选择器的规则，则计1，否则计0（＝a）&lt;/li&gt;
&lt;li&gt;计算选择器中id属性的数量（＝b）&lt;/li&gt;
&lt;li&gt;计算选择器中class及伪类的数量（＝c）&lt;/li&gt;
&lt;li&gt;计算选择器中元素名及伪元素的数量（＝d）&lt;br&gt;连接a－b－c－d四个数量（用一个大基数的计算系统）将得到specifity。这里使用的基数由分类中最高的基数定义。例如，如果a为14，可以使用16进制。不同情况下，a为17时，则需要使用阿拉伯数字17作为基数，这种情况可能在这个选择符时发生html body div div …（选择符中有17个标签，一般不太可能）。&lt;br&gt;一些例子：&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* &amp;#123;&amp;#125; /* a=0 b=0 c=0 d=0 -&amp;gt; specificity = 0,0,0,0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li &amp;#123;&amp;#125; /* a=0 b=0 c=0 d=1 -&amp;gt; specificity = 0,0,0,1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li:first-line &amp;#123;&amp;#125; /* a=0 b=0 c=0 d=2 -&amp;gt; specificity = 0,0,0,2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul li &amp;#123;&amp;#125; /* a=0 b=0 c=0 d=2 -&amp;gt; specificity = 0,0,0,2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul ol+li &amp;#123;&amp;#125; /* a=0 b=0 c=0 d=3 -&amp;gt; specificity = 0,0,0,3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h1 + *[rel=up]&amp;#123;&amp;#125; /* a=0 b=0 c=1 d=1 -&amp;gt; specificity = 0,0,1,1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul ol li.red &amp;#123;&amp;#125; /* a=0 b=0 c=1 d=3 -&amp;gt; specificity = 0,0,1,3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;li.red.level &amp;#123;&amp;#125; /* a=0 b=0 c=2 d=1 -&amp;gt; specificity = 0,0,2,1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#x34y &amp;#123;&amp;#125; /* a=0 b=1 c=0 d=0 -&amp;gt; specificity = 0,1,0,0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;style=”” /* a=1 b=0 c=0 d=0 -&amp;gt; specificity = 1,0,0,0 */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;规则排序（Sorting the rules）&lt;br&gt;规则匹配后，需要根据级联顺序对规则进行排序，webkit先将小列表用冒泡排序，再将它们合并为一个大列表，webkit通过为规则复写“&amp;gt;”操作来执行排序：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; &amp;gt;(CSSRuleData&amp;amp; r1, CSSRuleData&amp;amp; r2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; spec1 = r1.selector()-&amp;gt;specificity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; spec2 = r2.selector()-&amp;gt;specificity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return (spec1 == spec2) : r1.position() &amp;gt; r2.position() : spec1 &amp;gt; spec2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.4 逐步处理（Gradual process）&lt;br&gt;webkit使用一个标志位标识所有顶层样式表都已加载，如果在attch时样式没有完全加载，则放置占位符，并在文档中标记，一旦样式表完成加载就重新进行计算。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-布局（Layout）&quot;&gt;&lt;a href=&quot;#6-布局（Layout）&quot; class=&quot;headerlink&quot; title=&quot;6.布局（Layout）&quot;&gt;&lt;/a&gt;6.布局（Layout）&lt;/h3&gt;&lt;p&gt;当渲染对象被创建并添加到树中，它们并没有位置和大小，计算这些值的过程称为layout或reflow。&lt;br&gt;Html使用基于流的布局模型，意味着大部分时间，可以以单一的途径进行几何计算。流中靠后的元素并不会影响前面元素的几何特性，所以布局可以在文档中从右向左、自上而下的进行。也存在一些例外，比如html tables。&lt;br&gt;坐标系统相对于根frame，使用top和left坐标。&lt;br&gt;布局是一个递归的过程，由根渲染对象开始，它对应html文档元素，布局继续递归的通过一些或所有的frame层级，为每个需要几何信息的渲染对象进行计算。&lt;br&gt;根渲染对象的位置是0,0，它的大小是viewport－浏览器窗口的可见部分。&lt;br&gt;所有的渲染对象都有一个layout或reflow方法，每个渲染对象调用需要布局的children的layout方法。&lt;/p&gt;
&lt;p&gt;6.1 Dirty bit 系统（Dirty bit system）&lt;br&gt;为了不因为每个小变化都全部重新布局，浏览器使用一个dirty bit系统，一个渲染对象发生了变化或是被添加了，就标记它及它的children为dirty－需要layout。存在两个标识－dirty及children are dirty，children are dirty说明即使这个渲染对象可能没问题，但它至少有一个child需要layout。&lt;/p&gt;
&lt;p&gt;6.2 全局和增量layout（Global and incremental layout）&lt;br&gt;当layout在整棵渲染树触发时，称为全局layout，这可能在下面这些情况下发生：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个全局的样式改变影响所有的渲染对象，比如字号的改变&lt;/li&gt;
&lt;li&gt;窗口resize&lt;br&gt;layout也可以是增量的，这样只有标志为dirty的渲染对象会重新布局（也将导致一些额外的布局）。增量layout会在渲染对象dirty时异步触发，例如，当网络接收到新的内容并添加到Dom树后，新的渲染对象会添加到渲染树中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/reflow.png&quot; alt=&quot;reflow&quot; title=&quot;reflow&quot;&gt;&lt;/p&gt;
&lt;p&gt;图20：增量layout&lt;/p&gt;
&lt;p&gt;6.3 异步和同步layout（Asynchronous and Synchronous layout）&lt;br&gt;增量layout的过程是异步的，Firefox为增量layout生成了reflow队列，以及一个调度执行这些批处理命令。Webkit也有一个计时器用来执行增量layout－遍历树，为dirty状态的渲染对象重新布局。&lt;br&gt;另外，当脚本请求样式信息时，例如“offsetHeight”，会同步的触发增量布局。&lt;br&gt;全局的layout一般都是同步触发。&lt;br&gt;有些时候，layout会被作为一个初始layout之后的回调，比如滑动条的滑动。&lt;/p&gt;
&lt;p&gt;6.4 优化（Optimizations）&lt;br&gt;当一个layout因为resize或是渲染位置改变（并不是大小改变）而触发时，渲染对象的大小将会从缓存中读取，而不会重新计算。&lt;br&gt;一般情况下，如果只有子树发生改变，则layout并不从根开始。这种情况发生在，变化发生在元素自身并且不影响它周围元素，例如，将文本插入文本域（否则，每次击键都将触发从根开始的重排）。&lt;/p&gt;
&lt;p&gt;6.5 layout过程（The layout process）：&lt;br&gt;layout一般有下面这几个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;parent渲染对象决定它的宽度&lt;/li&gt;
&lt;li&gt;parent渲染对象读取chilidren，并：&lt;/li&gt;
&lt;li&gt;放置child渲染对象（设置它的x和y）&lt;/li&gt;
&lt;li&gt;在需要时（它们当前为dirty或是处于全局layout或者其他原因）调用child渲染对象的layout，这将计算child的高度&lt;/li&gt;
&lt;li&gt;parent渲染对象使用child渲染对象的累积高度，以及margin和padding的高度来设置自己的高度－这将被parent渲染对象的parent使用&lt;/li&gt;
&lt;li&gt;将dirty标识设置为false&lt;br&gt;Firefox使用一个“state”对象（nsHTMLReflowState）做为参数去布局（firefox称为reflow），state包含parent的宽度及其他内容。&lt;br&gt;Firefox布局的输出是一个“metrics”对象（nsHTMLReflowMetrics）。它包括渲染对象计算出的高度。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;6.6 宽度计算（Width calculation）&lt;br&gt;渲染对象的宽度使用容器的宽度、渲染对象样式中的宽度及margin、border进行计算。例如，下面这个div的宽度：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div style=”width:30%”/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;webkit中宽度的计算过程是（RenderBox类的calcWidth方法）：&lt;br&gt;· 容器的宽度是容器的可用宽度和0中的最大值，这里的可用宽度为：contentWidth=clientWidth()-paddingLeft()-paddingRight()，clientWidth和clientHeight代表一个对象内部的不包括border和滑动条的大小&lt;br&gt;· 元素的宽度指样式属性width的值，它可以通过计算容器的百分比得到一个绝对值&lt;br&gt;· 加上水平方向上的border和padding&lt;br&gt;到这里是最佳宽度的计算过程，现在计算宽度的最大值和最小值，如果最佳宽度大于最大宽度则使用最大宽度，如果小于最小宽度则使用最小宽度。最后缓存这个值，当需要layout但宽度未改变时使用。&lt;/p&gt;
&lt;p&gt;6.7 断行（Line breaking）&lt;br&gt;当一个渲染对象在布局过程中需要折行时，则暂停并告诉它的parent它需要折行，parent将创建额外的渲染对象并调用它们的layout。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;7-绘制（Painting）&quot;&gt;&lt;a href=&quot;#7-绘制（Painting）&quot; class=&quot;headerlink&quot; title=&quot;7.绘制（Painting）&quot;&gt;&lt;/a&gt;7.绘制（Painting）&lt;/h3&gt;&lt;p&gt;绘制阶段，遍历渲染树并调用渲染对象的paint方法将它们的内容显示在屏幕上，绘制使用UI基础组件，这在UI的章节有更多的介绍。&lt;/p&gt;
&lt;p&gt;7.1 全局和增量（Global and Incremental）&lt;br&gt;和布局一样，绘制也可以是全局的－绘制完整的树－或增量的。在增量的绘制过程中，一些渲染对象以不影响整棵树的方式改变，改变的渲染对象使其在屏幕上的矩形区域失效，这将导致操作系统将其看作dirty区域，并产生一个paint事件，操作系统很巧妙的处理这个过程，并将多个区域合并为一个。Chrome中，这个过程更复杂些，因为渲染对象在不同的进程中，而不是在主进程中。Chrome在一定程度上模拟操作系统的行为，表现为监听事件并派发消息给渲染根，在树中查找到相关的渲染对象，重绘这个对象（往往还包括它的children）。&lt;/p&gt;
&lt;p&gt;7.2 绘制顺序（The painting order）&lt;br&gt;css2定义了绘制过程的顺序－&lt;a href=&quot;http://www.w3.org/TR/CSS21/zindex.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/CSS21/zindex.html&lt;/strong&gt;&lt;/a&gt;。这个就是元素压入堆栈的顺序，这个顺序影响着绘制，堆栈从后向前进行绘制。&lt;br&gt;一个块渲染对象的堆栈顺序是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;背景色&lt;/li&gt;
&lt;li&gt;背景图&lt;/li&gt;
&lt;li&gt;border&lt;/li&gt;
&lt;li&gt;children&lt;/li&gt;
&lt;li&gt;outline&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;7.3 Firefox显示列表（Firefox display list）&lt;br&gt;Firefox读取渲染树并为绘制的矩形创建一个显示列表，该列表以正确的绘制顺序包含这个矩形相关的渲染对象。&lt;br&gt;用这样的方法，可以使重绘时只需查找一次树，而不需要多次查找——绘制所有的背景、所有的图片、所有的border等等。&lt;br&gt;Firefox优化了这个过程，它不添加会被隐藏的元素，比如元素完全在其他不透明元素下面。&lt;/p&gt;
&lt;p&gt;7.4 Webkit矩形存储（Webkit rectangle storage）&lt;br&gt;重绘前，webkit将旧的矩形保存为位图，然后只绘制新旧矩形的差集。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;8-动态变化（Dynamic-changes）&quot;&gt;&lt;a href=&quot;#8-动态变化（Dynamic-changes）&quot; class=&quot;headerlink&quot; title=&quot;8.动态变化（Dynamic changes）&quot;&gt;&lt;/a&gt;8.动态变化（Dynamic changes）&lt;/h3&gt;&lt;p&gt;浏览器总是试着以最小的动作响应一个变化，所以一个元素颜色的变化将只导致该元素的重绘，元素位置的变化将大致元素的布局和重绘，添加一个Dom节点，也会大致这个元素的布局和重绘。一些主要的变化，比如增加html元素的字号，将会导致缓存失效，从而引起整数的布局和重绘。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;9-渲染引擎的线程（The-rendering-engine’s-threads）&quot;&gt;&lt;a href=&quot;#9-渲染引擎的线程（The-rendering-engine’s-threads）&quot; class=&quot;headerlink&quot; title=&quot;9.渲染引擎的线程（The rendering engine’s threads）&quot;&gt;&lt;/a&gt;9.渲染引擎的线程（The rendering engine’s threads）&lt;/h3&gt;&lt;p&gt;渲染引擎是单线程的，除了网络操作以外，几乎所有的事情都在单一的线程中处理，在Firefox和Safari中，这是浏览器的主线程，Chrome中这是tab的主线程。&lt;br&gt;网络操作由几个并行线程执行，并行连接的个数是受限的（通常是2－6个）。&lt;/p&gt;
&lt;p&gt;9.1 事件循环（Event loop）&lt;br&gt;浏览器主线程是一个事件循环，它被设计为无限循环以保持执行过程的可用，等待事件（例如layout和paint事件）并执行它们。下面是Firefox的主要事件循环代码。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!mExiting)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NS_ProcessNextEvent(thread);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;10-CSS2-可视模型（CSS2-visual-model）&quot;&gt;&lt;a href=&quot;#10-CSS2-可视模型（CSS2-visual-model）&quot; class=&quot;headerlink&quot; title=&quot;10.CSS2 可视模型（CSS2 visual model）&quot;&gt;&lt;/a&gt;10.CSS2 可视模型（CSS2 visual model）&lt;/h3&gt;&lt;p&gt;10.1 画布（The Canvas）&lt;br&gt;根据CSS2规范，术语canvas用来描述格式化的结构所渲染的空间——浏览器绘制内容的地方。画布对每个维度空间都是无限大的，但浏览器基于viewport的大小选择了一个初始宽度。&lt;br&gt;根据&lt;a href=&quot;**http://www.w3.org/TR/CSS2/zindex.html**&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/CSS2/zindex.html&lt;/strong&gt;&lt;/a&gt;的定义，画布如果是包含在其他画布内则是透明的，否则浏览器会指定一个颜色。&lt;/p&gt;
&lt;p&gt;10.2CSS盒模型（CSS Box model）&lt;br&gt;CSS盒模型描述了矩形盒，这些矩形盒是为文档树中的元素生成的，并根据可视的格式化模型进行布局。每个box包括内容区域（如图片、文本等）及可选的四周padding、border和margin区域。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image046.jpg&quot; alt=&quot;BoxModel&quot; title=&quot;BoxModel&quot;&gt;&lt;/p&gt;
&lt;p&gt;每个节点生成0－n个这样的box。&lt;br&gt;所有的元素都有一个display属性，用来决定它们生成box的类型，例如：&lt;br&gt;block－生成块状box&lt;br&gt;inline－生成一个或多个行内box&lt;br&gt;none－不生成box&lt;br&gt;默认的是inline，但浏览器样式表设置了其他默认值，例如，div元素默认为block。可以访问&lt;a href=&quot;http://www.w3.org/TR/CSS2/sample.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.w3.org/TR/CSS2/sample.html&lt;/strong&gt;&lt;/a&gt;查看更多的默认样式表示例。&lt;/p&gt;
&lt;p&gt;10.3 定位策略（Positioning scheme）&lt;br&gt;这里有三种策略：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;normal－对象根据它在文档的中位置定位，这意味着它在渲染树和在Dom树中位置一致，并根据它的盒模型和大小进行布局&lt;/li&gt;
&lt;li&gt;float－对象先像普通流一样布局，然后尽可能的向左或是向右移动&lt;/li&gt;
&lt;li&gt;absolute－对象在渲染树中的位置和Dom树中位置无关&lt;br&gt;static和relative是normal，absolute和fixed属于absolute。&lt;br&gt;在static定位中，不定义位置而使用默认的位置。其他策略中，作者指定位置——top、bottom、left、right。&lt;br&gt;Box布局的方式由这几项决定：box的类型、box的大小、定位策略及扩展信息（比如图片大小和屏幕尺寸）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;10.4 Box类型（Box types）&lt;br&gt;Block box：构成一个块，即在浏览器窗口上有自己的矩形&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image057.png&quot; alt=&quot;Block&quot; title=&quot;Block&quot;&gt;&lt;/p&gt;
&lt;p&gt;Inline box：并没有自己的块状区域，但包含在一个块状区域内&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image059.png&quot; alt=&quot;Inline&quot; title=&quot;Inline&quot;&gt;&lt;/p&gt;
&lt;p&gt;Block一个挨着一个垂直格式化，inline则在水平方向上格式化。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image061.png&quot; alt=&quot;block&quot; title=&quot;Block&quot;&gt;&lt;/p&gt;
&lt;p&gt;Inline盒模型放置在行内或是line box中，每行至少和最高的box一样高，当box以baseline对齐时——即一个元素的底部和另一个box上除底部以外的某点对齐，行高可以比最高的box高。当容器宽度不够时，行内元素将被放到多行中，这在一个p元素中经常发生。&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image063.png&quot; alt=&quot;Inline&quot; title=&quot;Inline&quot;&gt;&lt;/p&gt;
&lt;p&gt;10.5 定位（Positioning）&lt;br&gt;10.5.1 相对（Relative）&lt;br&gt;相对定位——先按照一般的定位，然后按所要求的差值移动。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image065.png&quot; alt=&quot;Relative&quot; title=&quot;Relative&quot;&gt;&lt;/p&gt;
&lt;p&gt;10.5.2 浮动（Floats）&lt;br&gt;一个浮动的box移动到一行的最左边或是最右边，其余的box围绕在它周围。下面这段html：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”float:right”&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”images/image.gif”&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”100″&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”100″&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetuer…&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将显示为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image067.png&quot; alt=&quot;float&quot; title=&quot;float&quot;&gt;&lt;/p&gt;
&lt;p&gt;10.5.3 绝对和固定（Absolute and fixed）&lt;br&gt;这种情况下的布局完全不顾普通的文档流，元素不属于文档流的一部分，大小取决于容器。Fixed时，容器为viewport（可视区域）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image069.png&quot; alt=&quot;Absolute&quot; title=&quot;Absolute&quot;&gt;&lt;/p&gt;
&lt;p&gt;图17：fixed&lt;br&gt;注意－fixed即使在文档流滚动时也不会移动。&lt;/p&gt;
&lt;p&gt;10.6 分层表示（Layered representation）&lt;br&gt;这个由CSS属性中的z-index指定，表示盒模型的第三个大小，即在z轴上的位置。Box分发到堆栈中（称为堆栈上下文），每个堆栈中靠后的元素将被较早绘制，栈顶靠前的元素离用户最近，当发生交叠时，将隐藏靠后的元素。堆栈根据z-index属性排序，拥有z-index属性的box形成了一个局部堆栈，viewport有外部堆栈，例如：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”text/css”&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;css&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2in&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2in&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”z-index:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;3&lt;/span&gt;;&lt;span class=&quot;attr&quot;&gt;background-color:red&lt;/span&gt;; &lt;span class=&quot;attr&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;1in&lt;/span&gt;; &lt;span class=&quot;attr&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;1in&lt;/span&gt;; “&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”z-index:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;attr&quot;&gt;background-color:green&lt;/span&gt;;&lt;span class=&quot;attr&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;2in&lt;/span&gt;; &lt;span class=&quot;attr&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;2in&lt;/span&gt;;”&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果是：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/02/15/image071.png&quot; alt=&quot;zindex&quot; title=&quot;zindex&quot;&gt;&lt;/p&gt;
&lt;p&gt;虽然绿色div排在红色div后面，可能在正常流中也已经被绘制在后面，但z-index有更高优先级，所以在根box的堆栈中更靠前。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每个前端都应该仔细阅读的文章！&lt;br&gt;说明本文是&lt;strong&gt;&lt;a href=&quot;http://taligarsiel.com/Projects/howbrowserswork1.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How browser
    
    </summary>
    
      <category term="Browser" scheme="http://vmartaw.com/categories/Browser/"/>
    
    
      <category term="Browser" scheme="http://vmartaw.com/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>移动App之经验总结（一）</title>
    <link href="http://vmartaw.com/2016/01/05/%E7%A7%BB%E5%8A%A8App%E4%B9%8B%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://vmartaw.com/2016/01/05/移动App之经验总结（一）/</id>
    <published>2016-01-05T13:07:33.000Z</published>
    <updated>2016-02-18T04:23:42.000Z</updated>
    
    <content type="html">&lt;p&gt;时间过得真快，转眼间自己花时间做App已经一个多月了。在这一个多月的时间里，自己掌握的东西和了解的东西都会一一介绍给大家。&lt;/p&gt;
&lt;p&gt;在使用前端技术开发移动App前，首先给大家简单介绍下移动App可以是下面的任意一类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web App（网页应用）&lt;/li&gt;
&lt;li&gt;Hybrid App（混合式应用）&lt;/li&gt;
&lt;li&gt;Native App（原生应用）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;三类移动App简介及各自优缺点&quot;&gt;&lt;a href=&quot;#三类移动App简介及各自优缺点&quot; class=&quot;headerlink&quot; title=&quot;三类移动App简介及各自优缺点&quot;&gt;&lt;/a&gt;三类移动App简介及各自优缺点&lt;/h3&gt;&lt;p&gt;Web App：使用纯前端技术，HTML、CSS、JavaScript去绘制和操作页面，使用媒体查询、响应式布局去适应不同的设备，比如：使用手机浏览器访问到的网站（官网、博客等）、原生应用里面嵌套的页面（微信公众平台、手机QQ的QQ空间等）&lt;br&gt;优点：跨平台、开发成本低、维护更新简单&lt;br&gt;缺点：体验性差、不能安装&lt;br&gt;特点：必须依赖浏览器&lt;/p&gt;
&lt;p&gt;Native App：使用原生代码做的移动App，Android使用Java语言进行开发，IOS使用Object-C或Swift语言进行开发，比如：去App Store下载的大部分App，应用中心的大部分App等&lt;br&gt;优点：体验性高、可以安装&lt;br&gt;缺点：不跨平台，开发成本高，维护更新复杂&lt;br&gt;特点：必须下载安装&lt;/p&gt;
&lt;p&gt;如果前端人员也想做一款App并发布到AppStore、安装应用市场上面的话，难道还要去学习下Java和Object-C？&lt;br&gt;No，使用前端技术做Hybrid App实现啦。&lt;/p&gt;
&lt;p&gt;Hybrid App：使用前端技术负责界面展示，使用原生代码进行移动设备调用，比如：爱班级App、Telkomsel Moovigo等&lt;br&gt;优点：一套前端代码适配所有Androd手机和IOS手机App，可以安装、开发成本低、维护更新简单&lt;br&gt;缺点：性能问题，不同终端不同设备产生的兼容性bug&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;开发App前的准备工作&quot;&gt;&lt;a href=&quot;#开发App前的准备工作&quot; class=&quot;headerlink&quot; title=&quot;开发App前的准备工作&quot;&gt;&lt;/a&gt;开发App前的准备工作&lt;/h3&gt;&lt;p&gt;因为苹果大部分东西都是闭源的，就连IOS的开发环境必须用到OS X系统（不建议使用虚拟机、黑苹果），所以下面介绍前端开发手机App需要做以下准备：&lt;br&gt;IOS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一台Mac电脑&lt;/li&gt;
&lt;li&gt;一部苹果设备（IPhone、ITouch）&lt;/li&gt;
&lt;li&gt;一个苹果账号ID&lt;/li&gt;
&lt;li&gt;一个苹果开发者账号 688元/年&lt;br&gt;Android&lt;/li&gt;
&lt;li&gt;安装JDK并配置环境变量&lt;/li&gt;
&lt;li&gt;安装Android SDK或Adt-bundle&lt;/li&gt;
&lt;li&gt;一部安卓设备&lt;/li&gt;
&lt;li&gt;Android File Transfer for mac&lt;br&gt;编码及编译工具&lt;/li&gt;
&lt;li&gt;Xcode、Sublime Text、Eclipse&lt;/li&gt;
&lt;li&gt;Cordova&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;App产品的组成部分&quot;&gt;&lt;a href=&quot;#App产品的组成部分&quot; class=&quot;headerlink&quot; title=&quot;App产品的组成部分&quot;&gt;&lt;/a&gt;App产品的组成部分&lt;/h3&gt;&lt;p&gt;前面讲到的都是硬件或软件工具的搭建，接下来讲解下一款App产品的组成部分：&lt;br&gt;1.产品构思：这个阶段需要一些有想法的人。&lt;br&gt;这个App的作用是什么？&lt;br&gt;给用户带来哪些价值？&lt;br&gt;用户的哪些需求可以满足？&lt;/p&gt;
&lt;p&gt;2.产品设计：这个阶段需要美工和研发人员。&lt;br&gt;包括功能设计和UI设计，功能设计侧重于产品的功能；UI设计包括App的界面和美化。&lt;/p&gt;
&lt;p&gt;3.产品实现：这个阶段需要web前端、后台及DBA等研发人员。&lt;br&gt;包括开发框架和开发工具的选择，平台接口和页面的编写，服务器搭建、数据库搭建等。&lt;/p&gt;
&lt;p&gt;4 产品上架：这个阶段需要对各个平台发布了如指掌的人。&lt;br&gt;包括注册各个平台的账号发布产品，使用苹果开发者账号，提供必要的上架资料，将App提交应用到App Store；使用谷歌账号提交到Google Play商城等&lt;/p&gt;
&lt;p&gt;5.产品推广：这个阶段需要销售、营销、SEO、运维等服务人员。&lt;br&gt;包括开发一个自己的网站、微信公众号、微博、博客，也可以打广告，百度推广等。&lt;/p&gt;
&lt;p&gt;可见，对于一个人做App是多么大的挑战，明知山有虎，偏向虎山行，我就是这样的人。下面根据以上五点，讲解下我对App的付出。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-产品构想&quot;&gt;&lt;a href=&quot;#1-产品构想&quot; class=&quot;headerlink&quot; title=&quot;1.产品构想&quot;&gt;&lt;/a&gt;1.产品构想&lt;/h3&gt;&lt;p&gt;当我想自己做一款App出来的时候，我的第一步想的是我该做哪类的App呢？如今成千上万的App层出不穷，竞争也是相当的激烈，如果自己找到的需求或思路与其他App相同，那么一定会死掉。我应该找到用户的一个痛点，然后服务于他们，那么我的产品才会有市场。&lt;/p&gt;
&lt;p&gt;我认为好的产品应该确定使用人群，该人群会用手机App才行，那么反过来问，会用手机App的人群有哪些呢？于是我确定自己做的App的第一点：&lt;strong&gt;针对的人群是80、90、00后&lt;/strong&gt;。接着思考，在这些人群里面他们还需要怎样的App呢？带着这个问题，我把移动App产品从衣食住行耍五个方面思考我需要做个怎样的App出来。&lt;br&gt;1.衣&lt;br&gt;关于“衣”的产品，比如：淘宝、京东、亚马逊、唯品会…敢跟马云、刘强东他们比吗？于是乎我放弃这方面需求。&lt;br&gt;2.食&lt;br&gt;关于“食”的产品，比如：美团、饿了么、大众点评，美团与饿了么都在大战，都在为自己做推广与优惠来抢占市场，这场PK我就不参与啦！于是乎我也放弃这方面需求。&lt;br&gt;3.住&lt;br&gt;关于“住”的产品，比如：百度地图、携程、艺龙、58同城、赶集网、搜淘网，除了上面提到的，其实关于住的产品还有很多很多，比如还有每个酒店的产品等，于是乎我也放弃这方面需求。&lt;br&gt;4.行&lt;br&gt;关于“行”的产品，比如：去哪儿网、12306、途牛网、驴妈妈、穷游，除了上面提到的，其实关于行的产品还有很多，而且去哪儿网和12306的用户量碾压其他产品，实力如此强大，何必和它们抢呢？于是乎我也放弃这方面需求。&lt;br&gt;5.耍&lt;br&gt;关于“耍”的产品，其实有很多种类，比如我想去旅游，那么关于“行”的产品足够满足你了；我想看视频，那么各种视频App产品（土豆、优酷、腾讯、爱奇艺、搜狐、芒果、乐视、暴风）足够满足你了，所以“耍”的产品很广泛。&lt;/p&gt;
&lt;p&gt;我在想大部分上班族除了节假日放假才会去旅游，那么平时周六、周日去旅游的话时间肯定不够，只能在“本地玩”，好，想到这，我准备做一款“&lt;strong&gt;本地玩&lt;/strong&gt;”App产品。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;App产品的特点及简介&quot;&gt;&lt;a href=&quot;#App产品的特点及简介&quot; class=&quot;headerlink&quot; title=&quot;App产品的特点及简介&quot;&gt;&lt;/a&gt;App产品的特点及简介&lt;/h3&gt;&lt;p&gt;产品名：一起玩吧（待定）&lt;br&gt;域名：play8b.com&lt;br&gt;简介：一款能一起玩的产品&lt;br&gt;详介：通过使用该App，可以找到附近想一起约来玩的年轻人，可以一起健身、一起运动、一起唱歌、一起跳舞、一起吃饭、一起打牌、一起看书、一起逛街、一起冒险、一起逛公园、一起LOL，只要是健康的，什么都可以一起。&lt;br&gt;显性需求：帮助大家在本地与陌生人一起玩&lt;br&gt;隐性需求：以玩会友，人这辈子真心朋友不多，希望通过该App能让大家找到真心朋友，同性也好、异性也罢。&lt;br&gt;特点：功能简单、安全&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-产品设计&quot;&gt;&lt;a href=&quot;#2-产品设计&quot; class=&quot;headerlink&quot; title=&quot;2.产品设计&quot;&gt;&lt;/a&gt;2.产品设计&lt;/h3&gt;&lt;p&gt;当自己想做的产品确定好后，下一步就是设计。&lt;br&gt;产品设计首先需要原型，制作原型的常用工具有Axure、Mockup Builder等，这些工具都是重量级的，我想给大家介绍下我使用的原型工具—–墨刀。&lt;br&gt;我使用墨刀做的引导页及首页，详情可以点击&lt;a href=&quot;https://modao.cc/app/2Nl1STXGxDVI9BDr5RWy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;一起玩吧&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;该工具很好用，非常适合做移动端的原型，具体的实现在这里就不一一细说啦。&lt;/p&gt;
&lt;p&gt;对于无UI设计经验的我，用到的图片是从网上Copy的，只是借用，等功能完善差不多的时候，会把图片都改掉的，所以请放心，不会出现版权问题的哦。&lt;/p&gt;
&lt;p&gt;产品设计的原型图与自己真正做的产品图对比：&lt;br&gt;墨刀做的首页：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/index.png&quot; alt=&quot;首页&quot; title=&quot;首页&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;真正做的首页：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/index.jpg&quot; alt=&quot;首页&quot; title=&quot;首页&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;墨刀做的选择城市：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/city.png&quot; alt=&quot;选择城市&quot; title=&quot;选择城市&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;真正做的选择城市：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/city.jpg&quot; alt=&quot;选择城市&quot; title=&quot;选择城市&quot;&gt;&lt;/p&gt;
&lt;p&gt;尽管原型图与真正做App的图有差异，但是原型图的借鉴是必不可少的。因为原型设计出来才知道可不可行，以免给第三步产品实现填坑。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-产品实现（着重介绍该内容）&quot;&gt;&lt;a href=&quot;#3-产品实现（着重介绍该内容）&quot; class=&quot;headerlink&quot; title=&quot;3.产品实现（着重介绍该内容）&quot;&gt;&lt;/a&gt;3.产品实现（着重介绍该内容）&lt;/h3&gt;&lt;p&gt;当产品原型有个大概的体系后，就进入了下一步最最重要的环节：产品实现。在这个阶段，你可以想尽任何办法去实现和开发原型，想要高效率、少走弯路地开发产品，你可以挑选已有的任何框架、选择有用的技术及服务，更可以挑选别人已做好的半成品。&lt;br&gt;因为有些框架（公司自主研发的）不是开源且涉及到版权等问题，在这里我就不一一说明，只要记住一句话：产品实现你可以不折手段。&lt;/p&gt;
&lt;p&gt;当框架选择好后，接下来做的是将每个模块的每个功能点进行细化，即你需要把每个功能点详细罗列出来，然后好挨个实现。&lt;br&gt;我当时想既然是个完整的app，模块必不可少的肯定有引导页，主页，选择城市，因此我在这一个多月的时间做了以下功能：&lt;/p&gt;
&lt;p&gt;1.P图（android与ios）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;制作app的icon图标&lt;/li&gt;
&lt;li&gt;制作splash screen启动界面图片&lt;/li&gt;
&lt;li&gt;制作引导界面图片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/foot.png&quot; alt=&quot;p图&quot; title=&quot;p图&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.引导页：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左右滑动图片及小点点切换&lt;/li&gt;
&lt;li&gt;最后一页，点击“马上体验”进入主页&lt;/li&gt;
&lt;li&gt;引导页只能进入一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/foot2.jpg&quot; alt=&quot;foot&quot; title=&quot;foot&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.首页：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首次进入定位城市&lt;/li&gt;
&lt;li&gt;点击“城市名”进入选择城市页面&lt;/li&gt;
&lt;li&gt;页面的banner&lt;/li&gt;
&lt;li&gt;页面的响应式布局&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/home.jpg&quot; alt=&quot;home&quot; title=&quot;home&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.选择城市：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入页面后定位城市&lt;/li&gt;
&lt;li&gt;点击“返回图标”返回到首页&lt;/li&gt;
&lt;li&gt;点击“选择城市title”返回到最上面&lt;/li&gt;
&lt;li&gt;点击“城市名”可切换城市&lt;/li&gt;
&lt;li&gt;调用ajax获取数据绘制页面&lt;/li&gt;
&lt;li&gt;上下滑动锚点到达对应位置&lt;/li&gt;
&lt;li&gt;向下滑动进行下拉分页&lt;/li&gt;
&lt;li&gt;输入值进行搜索城市&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/city2.jpg&quot; alt=&quot;选择城市&quot; title=&quot;选择城市&quot;&gt;&lt;/p&gt;
&lt;p&gt;尽管只有简简单单的三个页面，但是里面的业务逻辑和功能点还是挺多的，当功能点确定后，就需要找到每个功能点的解决方案或具体实现。&lt;/p&gt;
&lt;p&gt;在接下来的章节里，我会一一介绍我是怎么实现上面说到的每个功能点的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;P图&quot;&gt;&lt;a href=&quot;#P图&quot; class=&quot;headerlink&quot; title=&quot;P图&quot;&gt;&lt;/a&gt;P图&lt;/h3&gt;&lt;p&gt;1.IOS图标、图形尺寸详解：&lt;br&gt;高清晰度的iPhone和iPod touch（单位：像素）&lt;br&gt;启动影像：640x960&lt;br&gt;APP图标：114x114&lt;br&gt;App Store商店：1024x1024&lt;br&gt;Spotlight搜索小图标：58x58&lt;br&gt;文档图标：44x58&lt;br&gt;Web Clip图标：114x114&lt;br&gt;工具栏和导航栏图标：约40x40&lt;br&gt;标签栏的图标：约60x60&lt;br&gt;报刊杂志：最长的边缘1024像素（最小）&lt;/p&gt;
&lt;p&gt;iPhone和iPod touch（单位：像素）&lt;br&gt;启动影像：320x480&lt;br&gt;APP图标：57x57&lt;br&gt;App Store商店：1024x1024&lt;br&gt;Spotlight搜索小图标：29x29&lt;br&gt;文档图标：22x29&lt;br&gt;Web Clip图标：57x57&lt;br&gt;工具栏和导航栏图标：约20x20&lt;br&gt;标签栏的图标：约30x30&lt;br&gt;报刊杂志：最长的边缘1024像素（最小）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/icon.png&quot; alt=&quot;icon&quot; title=&quot;icon&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.Android图标、图形尺寸详解：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/icon2.png&quot; alt=&quot;icon&quot; title=&quot;icon&quot;&gt;&lt;/p&gt;
&lt;p&gt;Splash尺寸大小：（单位：像素）&lt;br&gt;320X480、480X800、720X1280&lt;/p&gt;
&lt;p&gt;3.修改App名字所在位置&lt;br&gt;Android：res/values/strings.xml里面&lt;br&gt;IOS：打开Xcode，选中项目后点击Info，键名为”Bundle display name”&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;引导页&quot;&gt;&lt;a href=&quot;#引导页&quot; class=&quot;headerlink&quot; title=&quot;引导页&quot;&gt;&lt;/a&gt;引导页&lt;/h3&gt;&lt;p&gt;功能点：左右滑动图片及小点点切换&lt;br&gt;实现原理：强行将4个背景图div放在同一行，注册touch相关事件改变容器的平移坐标位置，小点点用css3绘制，添加个css样式，切换时添移该样式即可。&lt;br&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#slides&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;white-space&lt;/span&gt;: nowrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translate3d&lt;/span&gt;(0px,0,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.circle&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-sizing&lt;/span&gt;:border-box;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;#ccc&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.current&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;slideObj.on(&lt;span class=&quot;string&quot;&gt;&#39;touchstart&#39;&lt;/span&gt;, slideStart).on(&lt;span class=&quot;string&quot;&gt;&#39;touchend&#39;&lt;/span&gt;, slideEnd).on(&lt;span class=&quot;string&quot;&gt;&#39;touchmove&#39;&lt;/span&gt;, slide);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slideObj.css(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;-webkit-transform&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;translate3d(&#39;&lt;/span&gt; + pixelOffset + &lt;span class=&quot;string&quot;&gt;&#39;px,0,0)&#39;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.circle&#39;&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;current&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.circle:nth-child(&#39;&lt;/span&gt;+currentSlide+&lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;current&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;功能点：最后一页，点击“马上体验”进入主页&lt;br&gt;实现原理：“马上体验”按钮其实是图片的一部分，于是可以在“马上体验”字上面弄一个同等大小的div，默认是隐藏的，只有当用户滑到最后一个div时将其显示出来，添加个隐藏css样式，切换时添移该样式即可。&lt;br&gt;效果图：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/foot2.png&quot; alt=&quot;foot&quot; title=&quot;foot&quot;&gt;&lt;/p&gt;
&lt;p&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.displayNone&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(currentSlide == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(slideBtn.hasClass(&lt;span class=&quot;string&quot;&gt;&#39;displayNone&#39;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     slideBtn.removeClass(&lt;span class=&quot;string&quot;&gt;&#39;displayNone&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!slideBtn.hasClass(&lt;span class=&quot;string&quot;&gt;&#39;displayNone&#39;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      slideBtn.addClass(&lt;span class=&quot;string&quot;&gt;&#39;displayNone&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;功能点：引导页只能进入一次&lt;br&gt;实现原理：用户安装app后首先进入引导页，如果用户点击了“马上体验”，则以后都不会再进入引导页，而直接进入首页，如果用户没点击则还会进入引导页，于是需要一个永久标识符去判断即可。&lt;br&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化时第一个加载的panel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(localStorage.getItem(&lt;span class=&quot;string&quot;&gt;&#39;isFirstShow&#39;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.ui.defaultPanel = &lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.ui.defaultPanel = &lt;span class=&quot;string&quot;&gt;&#39;foot&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//进入首页时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!localStorage.getItem(&lt;span class=&quot;string&quot;&gt;&#39;isFirstShow&#39;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    localStorage.setItem(&lt;span class=&quot;string&quot;&gt;&#39;isFirstShow&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;true&#39;&lt;/span&gt;);   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;首页&quot;&gt;&lt;a href=&quot;#首页&quot; class=&quot;headerlink&quot; title=&quot;首页&quot;&gt;&lt;/a&gt;首页&lt;/h3&gt;&lt;p&gt;功能点：首次进入定位城市&lt;br&gt;实现原理：用户在首次进入主页时存一个永久标识符且使用百度SDK定位即可。&lt;br&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(localStorage.getItem(&lt;span class=&quot;string&quot;&gt;&#39;user_city&#39;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取城市名到页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通过百度SDK获取用户位置并存储到localStorage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.wwIndex.locateMyPos();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;功能点：点击“城市名”进入选择城市页面&lt;br&gt;实现原理：对包在“城市名”和向下图标的div注册click事件即可。&lt;br&gt;核心代码：过于简单，所以无&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;功能点：页面的banner&lt;br&gt;实现原理：以前封装的banner，所以直接拿来用就可以了。大致原理就是监听window.onresize事件获取不同设备屏幕的宽度和高度，计算出每张图片div的宽度及包图片的容器的宽度，使用相对、绝对布局、改变left值即可。&lt;br&gt;核心代码：封装后压缩混淆了js导致不可读，所以无&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;功能点：页面的响应式布局&lt;br&gt;实现原理：&lt;br&gt;    疑点一.因为不同手机设备尺寸不同，如：iphone4s：320X460，魅蓝note2：360X615，所以四行三列的分类Logo需要写算法。&lt;br&gt;    疑点二：border边框属性在android上无效，所以只能用背景色充当边框，留1px的缝隙出来即可。&lt;br&gt;    疑点三：整个主页页面由头部、面板、底部导航构成，头部和底部高度不变，计算出四行三列的分类Logo的高度和，剩余的高度让banner填满即可。虽然这样不怎么好看，待后期再考虑啦。还要注意的是头部高度，ios比android要多20px。&lt;br&gt;效果图：&lt;br&gt;魅蓝note2的效果&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/meilan.jpg&quot; alt=&quot;魅蓝note2&quot; title=&quot;魅蓝note2&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;iPhone4s的效果&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/2016/01/05/4s.jpg&quot; alt=&quot;iphone4s&quot; title=&quot;iphone4s&quot;&gt;&lt;/p&gt;
&lt;p&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//总高度，是苹果设备则少20px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cHeight = os.ios ? cfg.cHeight - &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; : cfg.cHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//每个方块宽度和高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; girdWandH=cfg.cWidth/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第二行中间合并两个方块后div的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imgWidth=(cfg.cWidth/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//banner高度=总高度-头部高度-底部导航高度-四行三列高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bannerH=cfg.cHeight&lt;span class=&quot;number&quot;&gt;-43&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-48&lt;/span&gt;-(cfg.cWidth/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置第二行中间合并两个方块后div的高度和宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.logoCenter&#39;&lt;/span&gt;).css(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;:imgWidth+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;height&#39;&lt;/span&gt;:girdWandH+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置每个方块的高度和宽度，且向右向上1px把背景色显示出来当边框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.(&lt;span class=&quot;string&quot;&gt;&#39;.blk&#39;&lt;/span&gt;).css(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;: girdWandH+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;height&#39;&lt;/span&gt;: girdWandH+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;margin-right&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;1px&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;margin-top&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;1px&#39;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;选择城市&quot;&gt;&lt;a href=&quot;#选择城市&quot; class=&quot;headerlink&quot; title=&quot;选择城市&quot;&gt;&lt;/a&gt;选择城市&lt;/h3&gt;&lt;p&gt;功能点：进入页面后定位城市&lt;br&gt;实现原理：与首页“首次进入定位城市”功能点相同，使用百度SDK定位即可，唯一区别是首页页面定位城市只会执行一次，选择城市页面定位城市会执行多次，如进入选择城市页面后返回到主页，又进入，又返回主页，又进入，还是可以定位。&lt;br&gt;核心代码：与“首次进入定位城市”代码相同，但无判断。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;功能点：点击“返回图标”返回到首页、点击“选择城市title”返回到最上面、上下滑动锚点到达对应位置、点击“城市名”可切换城市&lt;br&gt;实现原理：即进行事件的注册与绑定，前一个实现可用history锚点，中间两个实现可用scrollTo，最后一个实现可获取li的value改变即可。&lt;br&gt;核心代码：较简单，无&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;功能点：调用ajax获取数据绘制页面，向下滑动进行下拉分页、输入值进行搜索城市&lt;br&gt;实现原理：&lt;br&gt;疑点一：因为有几百上千个城市名，所以在网上找了个json文件，模拟从后台接口获取。&lt;br&gt;疑点二：返回后的数据不可能全部将其绘制到页面，如有1000个城市名就要绘制1000个li出来，对于移动web来说重排与重绘性能消耗是巨大的，曾试过一个办法，即显示前20个，剩余的都将其隐藏掉，结果手机卡顿了几秒，为了影响用户体验度，所以放弃了该想法。最终的解决方案是：缓存+前端分页+模板引擎&lt;br&gt;疑点三：当用户输入值进行搜索城市时，用户每打一个字，就会查询一次，很慢也很卡顿。最终的解决方案是：用户在输入时延迟800ms执行ajax查询数据。&lt;br&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;JdotTplCitys&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/x-dot-template&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;handlebars&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;~ it.rlist :city &amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;? city.pinyin == &#39;A&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;定位城市&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-cell localCityLi&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;localCityDiv&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fa fa-spinner fa-spin&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;定位中...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;热门城市&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-cell hotCityLi&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;北京&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;上海&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;广州&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;深圳&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;成都&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;武汉&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;天津&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;西安&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;南京&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;杭州&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hotCityDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;重庆&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;B&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;B&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;C&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;C&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;D&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;D&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;E&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;E&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;E&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;F&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;F&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;F&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;G&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;G&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;G&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;H&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;H&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;H&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;J&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;J&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;J&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;K&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;K&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;K&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;L&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;L&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;L&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;M&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;M&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;N&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;N&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;N&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;P&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;P&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;P&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;Q&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Q&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Q&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;R&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;R&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;R&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;S&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;S&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;S&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;T&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;T&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;T&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;W&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;W&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;W&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;X&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;X&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;Y&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Y&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Y&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?? city.pinyin == &#39;Z&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-group&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Z&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-divider mui-group-list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Z&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;??&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;mui-table-view-cell mui-group-list-item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;=city.label&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;=city.name&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;?&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123;~&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//前端分页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;queryByPage:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr,pageNo,pageSize&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pageTotal=arr.length % pageSize == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? arr.length/pageSize : &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(arr.length/pageSize)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;pageTotal:pageTotal,data:arr.slice((pageNo&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*pageSize,pageNo*pageSize)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//前端查询后分页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;queryBySearch:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr,keyword&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data=[];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; arr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(arr[i][&lt;span class=&quot;string&quot;&gt;&#39;label&#39;&lt;/span&gt;].toUpperCase().indexOf(keyword.toUpperCase()) != &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                data.push(arr[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对执行ajax后缓存的data进行分页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dataObj=$.feed.queryByPage(data,nSpage,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;searchInput.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; keyword = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clearTimeout(cfg.flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cfg.flag=setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.search(keyword);&lt;span class=&quot;comment&quot;&gt;//调用ajax查询数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//如果没有生成模板的方法，则先生成模板，再调用模板生成html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!$.isFunction(dotRenders.citys)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dotRenders.citys=doT.template(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;JdotTplCitys&#39;&lt;/span&gt;).text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotRenders.citys(data);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;虽然看上去只有简简单单的三个页面，但是页面与页面的交互和细节功能都还没展示出来。因为我的app还没有做完，所以关于第四步“产品上架”与第五步“产品推广”的内容等以后再补充。&lt;br&gt;这些东西就先讲到这里，接下来的日子我会接着从第二步产品设计开始继续设计和完善自己的app，所以博客的更新又会延迟一段时间，请大家多多谅解。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;时间过得真快，转眼间自己花时间做App已经一个多月了。在这一个多月的时间里，自己掌握的东西和了解的东西都会一一介绍给大家。&lt;/p&gt;
&lt;p&gt;在使用前端技术开发移动App前，首先给大家简单介绍下移动App可以是下面的任意一类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web App（网页应用
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>初识AngularJS</title>
    <link href="http://vmartaw.com/2015/12/07/%E5%88%9D%E8%AF%86AngularJS/"/>
    <id>http://vmartaw.com/2015/12/07/初识AngularJS/</id>
    <published>2015-12-07T15:51:05.000Z</published>
    <updated>2016-04-12T14:38:53.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什么是Angular？&quot;&gt;&lt;a href=&quot;#什么是Angular？&quot; class=&quot;headerlink&quot; title=&quot;什么是Angular？&quot;&gt;&lt;/a&gt;什么是Angular？&lt;/h3&gt;&lt;p&gt;从Angular的&lt;a href=&quot;https://github.com/angular/angular.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github官网&lt;/a&gt;上可以看出创造者对该框架的简单定义：HTML enhanced for web apps.即Angular主要是针对Web应用，对HTML标签进行了增强。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;使用Angular的好处？&quot;&gt;&lt;a href=&quot;#使用Angular的好处？&quot; class=&quot;headerlink&quot; title=&quot;使用Angular的好处？&quot;&gt;&lt;/a&gt;使用Angular的好处？&lt;/h3&gt;&lt;p&gt;Angular的使用在我看来和JavaEE的有些理念挺相似，什么依赖注入，控制反转，双向绑定等概念。那么使用Angular主要运用在哪些Web应用上呢？它给Web前端带来的好处又有哪些呢？&lt;br&gt;从Github上看使用Angular可以给开发者的带来的优势有以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以生成一个个模板引擎&lt;/li&gt;
&lt;li&gt;UI表单的双向绑定&lt;/li&gt;
&lt;li&gt;实现依赖注入、控制反转&lt;/li&gt;
&lt;li&gt;解决异步回调&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运用场合：经常CRUD的Web应用&lt;br&gt;AngularJS的语法及概念在这就不一一细说了，因为里面涉及到的东西太多，去官网看API和网上教程就行。想了解一个框架的本身，不在于可以用它实现什么，而在于它是怎么实现的。&lt;/p&gt;
&lt;p&gt;下面的内容主要围绕”怎么实现”及”项目实战”开讲。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;怎么实现&quot;&gt;&lt;a href=&quot;#怎么实现&quot; class=&quot;headerlink&quot; title=&quot;怎么实现&quot;&gt;&lt;/a&gt;怎么实现&lt;/h3&gt;&lt;p&gt;Angular核心原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Angular启动过程分析&lt;/li&gt;
&lt;li&gt;Provider与Injector执行过程&lt;/li&gt;
&lt;li&gt;指令的执行过程&lt;/li&gt;
&lt;li&gt;$scope与双向数据绑定执行过程&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Angular启动过程分析&quot;&gt;&lt;a href=&quot;#Angular启动过程分析&quot; class=&quot;headerlink&quot; title=&quot;Angular启动过程分析&quot;&gt;&lt;/a&gt;Angular启动过程分析&lt;/h3&gt;&lt;p&gt;源码解析Angular启动过程分析步骤：&lt;br&gt;1.自执行加载完整个angular.js暴露全局变量angular&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;window,document&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var angular = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.angular || (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.angular = &amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.是否存在angular对象&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.angular.bootstrap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;WARNING: Tried to load angular more than once.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两种启动方式：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//自动启动：ng-app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ng-app&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;moduleName&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//手动启动：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    angular.element(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        angular.bootstrap(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;,[&lt;span class=&quot;string&quot;&gt;&#39;moduleName&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.绑定jQuery&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bindJQuery();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该方法判断用户是否自己导入jQuery，如果没有就导入jQlite：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bindJQuery&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jQuery = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.jQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (jQuery &amp;amp;&amp;amp; jQuery.fn.on) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jqLite = jQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jqLite = JQLite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    angular.element = jqLite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.注入angularAPI&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;publishExternalAPI(angular);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该方法给全局变量angular扩展方法及属性，构建模块加载器，注入内置provider注册器和ng指令：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;publishExternalAPI&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;angular&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  extend(angular, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;bootstrap&#39;&lt;/span&gt;: bootstrap,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;copy&#39;&lt;/span&gt;: copy,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;extend&#39;&lt;/span&gt;: extend,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;merge&#39;&lt;/span&gt;: merge,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;equals&#39;&lt;/span&gt;: equals,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;element&#39;&lt;/span&gt;: jqLite,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;forEach&#39;&lt;/span&gt;: forEach,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;injector&#39;&lt;/span&gt;: createInjector,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;noop&#39;&lt;/span&gt;: noop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;bind&#39;&lt;/span&gt;: bind,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;toJson&#39;&lt;/span&gt;: toJson,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;fromJson&#39;&lt;/span&gt;: fromJson,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;identity&#39;&lt;/span&gt;: identity,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isUndefined&#39;&lt;/span&gt;: isUndefined,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isDefined&#39;&lt;/span&gt;: isDefined,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isString&#39;&lt;/span&gt;: isString,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isFunction&#39;&lt;/span&gt;: isFunction,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isObject&#39;&lt;/span&gt;: isObject,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isNumber&#39;&lt;/span&gt;: isNumber,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isElement&#39;&lt;/span&gt;: isElement,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isArray&#39;&lt;/span&gt;: isArray,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;version&#39;&lt;/span&gt;: version,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;isDate&#39;&lt;/span&gt;: isDate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;lowercase&#39;&lt;/span&gt;: lowercase,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;uppercase&#39;&lt;/span&gt;: uppercase,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;callbacks&#39;&lt;/span&gt;: &amp;#123;counter: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;getTestability&#39;&lt;/span&gt;: getTestability,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;$$minErr&#39;&lt;/span&gt;: minErr,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;$$csp&#39;&lt;/span&gt;: csp,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;reloadWithDebugInfo&#39;&lt;/span&gt;: reloadWithDebugInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  angularModule = setupModuleLoader(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.初始化&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jqLite(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    angularInit(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, bootstrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该方法查找ng-app，如果找到执行bootstrap方法，没找到执行手动启动的bootstrap方法&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;angularInit&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;element, bootstrap&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (appElement) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//ng-app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config.strictDi = getNgAttribute(appElement, &lt;span class=&quot;string&quot;&gt;&quot;strict-di&quot;&lt;/span&gt;) !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bootstrap(appElement, &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt; ? [&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;] : [], config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bootstrap方法创建注册器，开始编译&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bootstrap&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;element, modules, config&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var injector = createInjector(modules, config.strictDi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    injector.invoke([&lt;span class=&quot;string&quot;&gt;&#39;$rootScope&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$rootElement&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$compile&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$injector&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bootstrapApply&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;scope, element, compile, injector&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scope.$apply(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          element.data(&lt;span class=&quot;string&quot;&gt;&#39;$injector&#39;&lt;/span&gt;, injector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          compile(element)(scope);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;源码解析第5步之Provider与Injector执行过程&quot;&gt;&lt;a href=&quot;#源码解析第5步之Provider与Injector执行过程&quot; class=&quot;headerlink&quot; title=&quot;源码解析第5步之Provider与Injector执行过程&quot;&gt;&lt;/a&gt;源码解析第5步之Provider与Injector执行过程&lt;/h3&gt;&lt;p&gt;看源码的地方搜createInjector：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createInjector&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;modulesToLoad, strictDi&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;provider&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, provider_&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;factory&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, factoryFn, enforce&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; provider(name,&amp;#123;$get: ...&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;service&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, constructor&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; factory(name, [&lt;span class=&quot;string&quot;&gt;&#39;$injector&#39;&lt;/span&gt;,...]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, val&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; factory(name, valueFn(val), &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constant&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;decorator&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;serviceName, decorFn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      invoke: invoke,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      instantiate: instantiate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      get: getService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      annotate: createInjector.$$annotate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      has: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Provider目的是让接口和实现分离。&lt;br&gt;进行注注入的有：provider、factory、service、constant、value&lt;br&gt;上面方法核心都是provider实现的，只是参数不同，从左到右灵活性越来越差。&lt;/p&gt;
&lt;p&gt;接受注入的有：controller、config、module、run、filter等&lt;/p&gt;
&lt;p&gt;注入的方式：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app=angular.module(&lt;span class=&quot;string&quot;&gt;&#39;demo&#39;&lt;/span&gt;,[]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 推断型注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.controller(&lt;span class=&quot;string&quot;&gt;&#39;ctrl&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$scope&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明式注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ctrl=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//code&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ctrl.$inject=[&lt;span class=&quot;string&quot;&gt;&#39;$scope&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.controller(&lt;span class=&quot;string&quot;&gt;&#39;ctrl&#39;&lt;/span&gt;,ctrl);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//内联式注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.controller(&lt;span class=&quot;string&quot;&gt;&#39;ctrl&#39;&lt;/span&gt;,[&lt;span class=&quot;string&quot;&gt;&#39;$scope&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$scope&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;内置Inject注册器有：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$provide.provider(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$anchorScroll: $AnchorScrollProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$animate: $AnimateProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$animateQueue: $$CoreAnimateQueueProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$AnimateRunner: $$CoreAnimateRunnerProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$browser: $BrowserProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$cacheFactory: $CacheFactoryProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$controller: $ControllerProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;: $DocumentProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$exceptionHandler: $ExceptionHandlerProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$filter: $FilterProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$interpolate: $InterpolateProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$interval: $IntervalProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$http: $HttpProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$httpParamSerializer: $HttpParamSerializerProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$httpParamSerializerJQLike:$HttpParamSerializerJQLikeProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$httpBackend: $HttpBackendProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$location: $LocationProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$log: $LogProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$parse: $ParseProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$rootScope: $RootScopeProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$q: $QProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$q: $$QProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sce: $SceProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sceDelegate: $SceDelegateProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sniffer: $SnifferProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$templateCache: $TemplateCacheProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$templateRequest: $TemplateRequestProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$testability: $$TestabilityProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$timeout: $TimeoutProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;: $WindowProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$rAF: $$RAFProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$jqLite: $$jqLiteProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$HashMap: $$HashMapProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$cookieReader: $$CookieReaderProvider&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;源码解析第5步之指令的执行过程&quot;&gt;&lt;a href=&quot;#源码解析第5步之指令的执行过程&quot; class=&quot;headerlink&quot; title=&quot;源码解析第5步之指令的执行过程&quot;&gt;&lt;/a&gt;源码解析第5步之指令的执行过程&lt;/h3&gt;&lt;p&gt;看源码的地方搜compile：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile.$$addScopeClass($compileNodes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; compositeLinkFn=compileNodes(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;publicLinkFn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;scope,cloneConnectFn,options&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;指令的compile与link：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app=angular.module(&lt;span class=&quot;string&quot;&gt;&#39;demo&#39;&lt;/span&gt;,[]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.directive(&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        restrict:&lt;span class=&quot;string&quot;&gt;&#39;EA&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        template:&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div&amp;gt;Hello&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        replace:&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//一般不使用comile，使用link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        link:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;scope,element,attrs,controller&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//el的获取设置attrs、scope或注册事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compile:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;element,attrs,transclude&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;scope,element,attrs,controller&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;compile指令作用是对指令的模板进行转换；&lt;br&gt;link指令作用是在模型和视图之间建立关联，元素上的注册监听事件等；&lt;/p&gt;
&lt;p&gt;内置指令有：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;directive(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a: htmlAnchorDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input: inputDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textarea: inputDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form: formDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script: scriptDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select: selectDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;style: styleDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option: optionDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngBind: ngBindDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngBindHtml: ngBindHtmlDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngBindTemplate: ngBindTemplateDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngClass: ngClassDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngClassEven: ngClassEvenDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngClassOdd: ngClassOddDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngCloak: ngCloakDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngController: ngControllerDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngForm: ngFormDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngHide: ngHideDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngIf: ngIfDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngInclude: ngIncludeDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngInit: ngInitDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngNonBindable: ngNonBindableDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngPluralize: ngPluralizeDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngRepeat: ngRepeatDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngShow: ngShowDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngStyle: ngStyleDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngSwitch: ngSwitchDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngSwitchWhen: ngSwitchWhenDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngSwitchDefault: ngSwitchDefaultDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngOptions: ngOptionsDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngTransclude: ngTranscludeDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngModel: ngModelDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngList: ngListDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngChange: ngChangeDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pattern: patternDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngPattern: patternDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;required: requiredDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngRequired: requiredDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;minlength: minlengthDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngMinlength: minlengthDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;maxlength: maxlengthDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngMaxlength: maxlengthDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngValue: ngValueDirective,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ngModelOptions: ngModelOptionsDirective&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;scope与双向数据绑定执行过程&quot;&gt;&lt;a href=&quot;#scope与双向数据绑定执行过程&quot; class=&quot;headerlink&quot; title=&quot;$scope与双向数据绑定执行过程&quot;&gt;&lt;/a&gt;$scope与双向数据绑定执行过程&lt;/h3&gt;&lt;p&gt;看源码的地方搜scope：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Scope&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$id = nextUid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$phase = ... = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$root = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$destroyed = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$listeners = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$listenerCount = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$watchersCount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$$isolateBindings = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Scope.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Scope,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $new: function(isolate, parent)&amp;#123;...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $watch: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;watchExp, listener,...&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $watchGroup: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;watchExp, listener&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $watchCollection: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj, listener&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $digest: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $destroy: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $&lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;expr, locals&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $evalAsync: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;expr, locals&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $$postDigest: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $apply: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;expr&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $applyAsync: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;expr&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $on: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, listener&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $emit: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $broadcast: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $rootScope = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Scope();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;compile.$$addScopeClass($compileNodes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;双向数据绑定：一维结构（表单）、二维结构（表格）、Tree型结构（建议不用双向绑定）&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;项目实战&quot;&gt;&lt;a href=&quot;#项目实战&quot; class=&quot;headerlink&quot; title=&quot;项目实战&quot;&gt;&lt;/a&gt;项目实战&lt;/h3&gt;&lt;p&gt;在使用Angular开始应用的时候，需要明确一些步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;界面原型设计&lt;/li&gt;
&lt;li&gt;搭建目录结构&lt;/li&gt;
&lt;li&gt;选择UI框架编写UI&lt;/li&gt;
&lt;li&gt;编写Controller&lt;/li&gt;
&lt;li&gt;编写Service&lt;/li&gt;
&lt;li&gt;编写Filter&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有空在细说每个步骤的内容，So Sorry！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是Angular？&quot;&gt;&lt;a href=&quot;#什么是Angular？&quot; class=&quot;headerlink&quot; title=&quot;什么是Angular？&quot;&gt;&lt;/a&gt;什么是Angular？&lt;/h3&gt;&lt;p&gt;从Angular的&lt;a href=&quot;https://github.c
    
    </summary>
    
      <category term="MVVM" scheme="http://vmartaw.com/categories/MVVM/"/>
    
    
      <category term="MVVM" scheme="http://vmartaw.com/tags/MVVM/"/>
    
  </entry>
  
  <entry>
    <title>Cordova App之HTML5的坑</title>
    <link href="http://vmartaw.com/2015/12/05/Cordova-App%E4%B9%8BHTML5%E7%9A%84%E5%9D%91/"/>
    <id>http://vmartaw.com/2015/12/05/Cordova-App之HTML5的坑/</id>
    <published>2015-12-05T12:41:56.000Z</published>
    <updated>2015-12-05T12:42:25.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;使用HTML5，请仔细考虑&quot;&gt;&lt;a href=&quot;#使用HTML5，请仔细考虑&quot; class=&quot;headerlink&quot; title=&quot;使用HTML5，请仔细考虑&quot;&gt;&lt;/a&gt;使用HTML5，请仔细考虑&lt;/h3&gt;&lt;p&gt;当你想用HTML5进行Android和IOS开发的时候，一定要记住IOS上面的性能绝对比Andoird上面好，因此在进行测试的时候，一定要选择一个安卓机。还要记住一句话，&lt;strong&gt;HTML5的支持要靠不同厂家WebView的配合，但是现在厂商配合的也都千奇百怪！&lt;/strong&gt;&lt;br&gt;当自己满怀信心的去做App时，被第一个需求就坑了一个星期，重点坑的地方不是代码本身，而是HTML5的兼容。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;第一个需求：用画布画视频当背景&quot;&gt;&lt;a href=&quot;#第一个需求：用画布画视频当背景&quot; class=&quot;headerlink&quot; title=&quot;第一个需求：用画布画视频当背景&quot;&gt;&lt;/a&gt;第一个需求：用画布画视频当背景&lt;/h3&gt;&lt;p&gt;用英语来说就是use canvas darw video for backgroud.&lt;br&gt;为什么我想这样做呢？&lt;br&gt;因为我想做一款App产品与其他的产品不同。当你随便进入一款App的时候，首先会有一个首页，当数据加载后，首页消失，进入主页UI，这就是所有App的特点。而我之前的想法是进入App首先还是会有一个首页，当数据加载后，首页消失，进入主页后视频画面就是App的背景。&lt;/p&gt;
&lt;p&gt;为什么必须要用画布画视频当背景这种方式来实现呢？&lt;br&gt;因为做App时需要考虑的不仅仅是设备的系统，还包括设备的分辨率、尺寸等，如果直接用Video当背景就不能适配所有设备；如果直接用canvas当背景，用代码自己画确实也行，但我美术功底确实很Low，算术很久没碰，于是乎果断放弃。&lt;/p&gt;
&lt;p&gt;好了，在我看来唯一能很好解决这个问题的就是使用Canvas循环画出Video里面的内容，且让Video循环播放。接下来说下自己遇到了哪些坑让我不得不放弃这个需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Video标签在IOS WebView上使用muted属性来控制音量静音无效&lt;/li&gt;
&lt;li&gt;Video标签在Android WebView上使用autoplay属性来自动播放无效&lt;/li&gt;
&lt;li&gt;Canvas标签在Android WebView上使用drawImage方法画视频无效&lt;/li&gt;
&lt;li&gt;IOS设备上Home主页与应用主页来回切换出现闪退&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面四个坑我解决了三个，还差一个，怎么解决的没时间细说，等以后有空在讲解。那放弃这个需求的真正原因是什么呢？因为麻烦，且W3C规范对各种设备的不兼容，尽管在&lt;a href=&quot;http://caniuse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;caniuse.com&lt;/a&gt;上看到HTML5的哪些标签能支持哪些平台，即使解决了平台的兼容性，但是在不同平台上使用每个标签的每个属性的兼容性还是不确定，W3C还有很长的路要走。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用HTML5，请仔细考虑&quot;&gt;&lt;a href=&quot;#使用HTML5，请仔细考虑&quot; class=&quot;headerlink&quot; title=&quot;使用HTML5，请仔细考虑&quot;&gt;&lt;/a&gt;使用HTML5，请仔细考虑&lt;/h3&gt;&lt;p&gt;当你想用HTML5进行Android和IOS开发的时
    
    </summary>
    
      <category term="App" scheme="http://vmartaw.com/categories/App/"/>
    
    
      <category term="App" scheme="http://vmartaw.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>Cordova命令和最佳开发流程</title>
    <link href="http://vmartaw.com/2015/11/30/Cordova%E5%91%BD%E4%BB%A4%E5%92%8C%E6%9C%80%E4%BD%B3%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    <id>http://vmartaw.com/2015/11/30/Cordova命令和最佳开发流程/</id>
    <published>2015-11-30T14:51:56.000Z</published>
    <updated>2015-11-29T18:03:44.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Cordova命令和最佳开发流程&quot;&gt;&lt;a href=&quot;#Cordova命令和最佳开发流程&quot; class=&quot;headerlink&quot; title=&quot;Cordova命令和最佳开发流程&quot;&gt;&lt;/a&gt;Cordova命令和最佳开发流程&lt;/h3&gt;&lt;p&gt;本节主要内容：&lt;br&gt;Cordova命令概览&lt;br&gt;最佳开发流程推荐&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Cordova命令概览&quot;&gt;&lt;a href=&quot;#Cordova命令概览&quot; class=&quot;headerlink&quot; title=&quot;Cordova命令概览&quot;&gt;&lt;/a&gt;Cordova命令概览&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cordova -v &lt;span class=&quot;comment&quot;&gt;//显示当前Cordova版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova help &lt;span class=&quot;comment&quot;&gt;//显示Cordova命令帮助&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova help xxx &lt;span class=&quot;comment&quot;&gt;//显示单个子命令帮助信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova platform add ios/android/browser &lt;span class=&quot;comment&quot;&gt;//添加应用目标平台&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova platforms ls &lt;span class=&quot;comment&quot;&gt;//列出已经加入应用项目的目标平台&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin search/add/rm/ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//管理插件命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin search bar code &lt;span class=&quot;comment&quot;&gt;//搜索插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin add cordova-plugin-file@&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//添加cordova-plugin-file插件，如果安装低版本可用@版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin add https:&lt;span class=&quot;comment&quot;&gt;//github.com/doublespout/phonegap_baidu_sdk_location //添加git上面的Cordova插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin ls &lt;span class=&quot;comment&quot;&gt;//列出项目当前已经添加的插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova plugin rm cordova-pluugin-file &lt;span class=&quot;comment&quot;&gt;//移除一个插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova prepare &lt;span class=&quot;comment&quot;&gt;//准备项目用来编译，把www放到各对应目标平台&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova compile &lt;span class=&quot;comment&quot;&gt;//编译项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova build ios &lt;span class=&quot;comment&quot;&gt;//只编译ios平台的代码 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//注意corova build ios=cordova prepare ios+cordova compile ios&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova build android --debug &lt;span class=&quot;comment&quot;&gt;//编译调试版本的apk，默认都是调试版的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova build android --release &lt;span class=&quot;comment&quot;&gt;//编译android发布版的apk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova run android --device &lt;span class=&quot;comment&quot;&gt;//部署到连接好的android真机上面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova run ios --device &lt;span class=&quot;comment&quot;&gt;//部署到连接好的ios真机上面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cordova run browser &lt;span class=&quot;comment&quot;&gt;//部署到chrome浏览器上面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Cordova-App最佳开发流程&quot;&gt;&lt;a href=&quot;#Cordova-App最佳开发流程&quot; class=&quot;headerlink&quot; title=&quot;Cordova App最佳开发流程&quot;&gt;&lt;/a&gt;Cordova App最佳开发流程&lt;/h3&gt;&lt;p&gt;OK，因为我讲过Cordova App实际上是网页跑在浏览器壳子里面的应用，开发Cordova应用你可以使用像往常开发网页一样的技术。虽然说Cordova平台实际上是一个浏览器壳子，但是它和真正的浏览器还有以下两点明显区别：&lt;br&gt;1.Cordova能够访问设备及特性，这点其实浏览器多多少少也能。&lt;br&gt;2.Cordova是没有域的概念，因为它是一个App，所以它的Cookie也没有域的概念。&lt;br&gt;明白了以上这些我来说下&lt;strong&gt;最佳的开发Cordova流程&lt;/strong&gt;：&lt;br&gt;&lt;strong&gt;1.首先通过PC端的浏览器如：Chrome，快速完成页面的原型和与设备无关的逻辑代码的编写。&lt;/strong&gt;&lt;br&gt;注意：具体实现即安装Cordova browser目标平台，执行run browser命令，效果如下：&lt;br&gt;&lt;img src=&quot;http://7xljcv.com1.z0.glb.clouddn.com/cordova/d9.png&quot; alt=&quot;cordova&quot; title=&quot;cordova&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;strong&gt;然后将代码部署到真机上面测试，解决各种性能和在真机上面才出现的bug问题&lt;/strong&gt;&lt;br&gt;注意：具体实现即将browser内修改的www文件复制到外面的www去，build ios/android，打开Eclipse/Xcode执行到真机上。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后总结：接下来的日子，可能写博客的速度不会在那么快了，因为自己马上要投入到编码中，准备做一个移动App并成功上架到苹果App Store和谷歌Google Player。到那时，我再好好的总结一下自己遇到的坑。&lt;br&gt;最后说一句话：我是要成为海贼王的男人！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Cordova命令和最佳开发流程&quot;&gt;&lt;a href=&quot;#Cordova命令和最佳开发流程&quot; class=&quot;headerlink&quot; title=&quot;Cordova命令和最佳开发流程&quot;&gt;&lt;/a&gt;Cordova命令和最佳开发流程&lt;/h3&gt;&lt;p&gt;本节主要内容：&lt;br&gt;Cor
    
    </summary>
    
      <category term="Cordova" scheme="http://vmartaw.com/categories/Cordova/"/>
    
    
      <category term="Cordova" scheme="http://vmartaw.com/tags/Cordova/"/>
    
  </entry>
  
</feed>
